[XComGame.X2AIBTBehaviorTree]

; --- Removing Vanilla Hunter ---

-Behaviors=(BehaviorName="ChosenSniper::CharacterRoot", NodeType=Selector, Child[0]=ChosenUnactivated, Child[1]=ChosenActivated, Child[2]=ChosenEngaged, Child[3]=SkipMove)
-Behaviors=(BehaviorName="ChosenSniper::ChosenActivated", NodeType=Selector,      Child[0]=MoveInIfLastUnit,      Child[1]=EngagedSniperBranch,      Child[2]=TryTrackingShotIfFirstAction,      Child[3]=TryGrappleIfJustShot,      Child[4]=TryMoveForTrackingShot,      Child[5]=TryTrackingShotMark,      Child[6]=TryTrackingShotMove,      Child[7]=SkipMove)
-Behaviors=(BehaviorName="ChosenSniper::ChosenEngaged", NodeType=Selector,        Child[0]=OverwatchHandlerShootOverwatcherOption,        Child[1]=TryGrappleTowardDazed,        Child[2]=TryTrackingShotIfFirstAction,        Child[3]=TryChosenSummon,        Child[4]=TryGrappleForOffense,       Child[5]=TryMoveThenGrenade,       Child[6]=TryMoveThenGrenadeAny30,       Child[7]=DoIfFlankedOrFirstActionMoveHeight,        Child[8]=TryLethalDose,        Child[9]=TryMoveThenGrenadeAny,       Child[10]=TryHunterRifle,        Child[11]=TryQuickDraw,        Child[12]=TryOverwatch,        Child[13]=OverwatchHandlerBackupOption,        Child[14]=HuntEnemyWithCover,        Child[15]=SkipMove)

; --- Chosen Root --- A Harder War Hunter Behavior

+Behaviors=(BehaviorName="ChosenSniper::CharacterRoot", NodeType=Selector, Child[0]=ChosenIsNotActivated, Child[1]=ChosenActivated, Child[2]=ChosenEngaged, Child[3]=SkipMove)
+Behaviors=(BehaviorName="ChosenSniper::ChosenActivated", NodeType=Selector, Child[0]=ChosenHunterActivatedLastAction, Child[1]=ChosenHunterActivatedFirstAction)
+Behaviors=(BehaviorName="ChosenSniper::ChosenEngaged", NodeType=Selector, Child[0]=ChosenHunterEngagedLastAction, Child[1]=ChosenHunterEngagedFirstAction)

; Activated

+Behaviors=(BehaviorName=ChosenHunterActivatedFirstAction, NodeType=Sequence, Child[0]=ChosenHunterActivatedFirstActionSelector)
+Behaviors=(BehaviorName=ChosenHunterActivatedLastAction, NodeType=Sequence,  Child[0]=IsLastActionPoint, Child[1]=ChosenHunterActivatedLastActionSelector)

+Behaviors=(BehaviorName=ChosenHunterActivatedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryTrackingShotIfFirstAction, \\
	Child[1]=TryGrapple, \\
	Child[2]=NeedsReload, \\
	Child[3]=MoveInIfLastUnit, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SkipMove)

+Behaviors=(BehaviorName=ChosenHunterActivatedLastActionSelector, NodeType=Selector, \\
	Child[0]=TrackingShotMarkRarely, \\
	Child[1]=HunterLongWatchRarely, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SkipMove)

+Behaviors=(BehaviorName=TrackingShotMarkRarely, NodeType=RandFilter, Child[0]=TryTrackingShotMark, Param[0]=40)
+Behaviors=(BehaviorName=HunterLongWatchRarely, NodeType=RandFilter, Child[0]=TryOverwatch, Param[0]=40)

; Engaged

+Behaviors=(BehaviorName=ChosenHunterEngagedFirstAction, NodeType=Sequence, Child[0]=ChosenHunterEngagedFirstActionSelector)
+Behaviors=(BehaviorName=ChosenHunterEngagedLastAction, NodeType=Sequence,  Child[0]=IsLastActionPoint, Child[1]=ChosenHunterEngagedLastActionSelector)

+Behaviors=(BehaviorName=ChosenHunterEngagedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryTrackingShotIfFirstAction, \\
	Child[1]=TryGrappleTowardDazed, \\
	Child[2]=TryChosenSummon, \\
	Child[3]=ChosenDoIfFlankedAndDidNotMove, \\
	Child[4]=TryMoveThenGrenadeWhenIdeal, \\
	Child[5]=TryGrappleForOffense, \\
	Child[6]=NeedsReload, \\
	Child[7]=TryHunterAbilityLethalTempoSSCOver60, \\
	Child[8]=TryHunterAbilityShowdown, \\
	Child[9]=TryHunterAbilityHeartseeker, \\
	Child[10]=TryHunterAbilitySadismSSCOver80, \\
	Child[11]=TryLethalDoseBloodied, \\
	Child[12]=TryGrenadeAny, \\
	Child[13]=ChosenMoveDefensiveIfWoundedAndSafe, \\
	Child[14]=ChosenMoveFlankingIfSafe, \\
	Child[15]=ChosenShootOrReloadOrOverwatch, \\
	Child[16]=TryQuickDraw, \\
	Child[17]=HuntEnemyWithCover, \\
	Child[18]=SkipMove)

+Behaviors=(BehaviorName=ChosenHunterEngagedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryHunterAbilityLethalTempo, \\
	Child[1]=TryHunterAbilityHeartseeker, \\
	Child[2]=TryHunterAbilityShowdown, \\
	Child[3]=TryHunterAbilitySadismSSCOver80, \\
	Child[4]=ShootIfSSCOver80, \\
	Child[5]=ShootIfSSCOver70, \\
	Child[6]=TryHunterAbilitySadism, \\
	Child[7]=TryLethalDoseBloodied, \\
	Child[8]=ShootIfSSCOver60, \\
	Child[9]=TryGrenadeAny, \\
	Child[10]=ShootIfSSCOver50, \\
	Child[11]=TryLethalDose, \\
	Child[12]=TryQuickDraw, \\
	Child[13]=ChosenShootOrReloadOrOverwatch, \\
	Child[14]=HuntEnemyWithCover, \\
	Child[15]=SkipMove)

; Special Conditional Hunter Ability Behavior

+Behaviors=(BehaviorName=TryLethalDoseBloodied, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-LethalDose, \\
	Child[1]=IsBloodied, \\
	Child[2]=SelectTargetForLethalDose, \\
	Child[3]=SelectAbility-LethalDose)

+Behaviors=(BehaviorName=TryHunterAbilityLethalTempoSSCOver60, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-HunterAbility_LethalTempo, \\
	Child[1]=SelectHunterAbility_LethalTempoTargetOver60, \\
	Child[2]=SelectAbility-HunterAbility_LethalTempo)

+Behaviors=(BehaviorName=TryHunterAbilitySadismSSCOver80, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-HunterAbility_Sadism, \\
	Child[1]=ChosenStandardShotsChancesAbove80, \\
	Child[2]=SelectHunterAbility_SadismTarget, \\
	Child[3]=SelectAbility-HunterAbility_Sadism)

; Hunter Combat Abilities - Complete

; Showdown - Faceoff equivalent that can Crit. Will only use this when he has at least one decent shot.

+Behaviors=(BehaviorName=TryHunterAbilityShowdown, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-HunterAbility_Showdown, \\
	Child[1]=ThreeOrMoreShowdownTargets, \\
	Child[2]=SelectHunterAbility_ShowdownTargets, \\
	Child[3]=SelectAbility-HunterAbility_Showdown)

+Behaviors=(BehaviorName=SelectHunterAbility_ShowdownTargets, NodeType=Sequence, Child[0]=SetTargetStack-HunterAbility_Showdown, Child[1]=SelectTargetForChosenSSOver50, Child[2]=HasValidTarget-HunterAbility_Showdown)
+Behaviors=(BehaviorName=IsAbilityAvailable-HunterAbility_Showdown, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HunterAbility_Showdown, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-HunterAbility_Showdown, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-HunterAbility_Showdown, NodeType=Condition)

+Behaviors=(BehaviorName=ThreeOrMoreShowdownTargets, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]=">", Param[2]=2)

; Sadism - Fanfire equivalent, likewise, can crit. Will usually only use this to bully melees or soldiers in close range

+Behaviors=(BehaviorName=TryHunterAbilitySadism, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-HunterAbility_Sadism, \\
	Child[1]=SelectHunterAbility_SadismTarget, \\
	Child[2]=SelectAbility-HunterAbility_Sadism)

+Behaviors=(BehaviorName=SelectHunterAbility_SadismTargetOver80, NodeType=Sequence, Child[0]=SetTargetStack-HunterAbility_Sadism, Child[1]=SelectBestTargetForChosenSSOver80, Child[2]=HasValidTarget-HunterAbility_Sadism)

+Behaviors=(BehaviorName=SelectHunterAbility_SadismTarget, NodeType=Sequence, Child[0]=SetTargetStack-HunterAbility_Sadism, Child[1]=SelectBestTargetForChosenSSOver60, Child[2]=HasValidTarget-HunterAbility_Sadism)
+Behaviors=(BehaviorName=IsAbilityAvailable-HunterAbility_Sadism, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HunterAbility_Sadism, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-HunterAbility_Sadism, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-HunterAbility_Sadism, NodeType=Condition)

; Heartseeker - Will always hit, cannot miss. Can crit. Targeting prioritization makes it very good at finishing off wounded soldiers.

+Behaviors=(BehaviorName=TryHunterAbilityHeartseeker, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-HunterAbility_Heartseeker, \\
	Child[1]=SelectHunterAbility_HeartseekerTarget, \\
	Child[2]=SelectAbility-HunterAbility_Heartseeker)

+Behaviors=(BehaviorName=SelectHunterAbility_HeartseekerTarget, NodeType=Sequence, Child[0]=SetTargetStack-HunterAbility_Heartseeker, Child[1]=SelectBestTargetForChosenSSOver90, Child[2]=HasValidTarget-HunterAbility_Heartseeker)
+Behaviors=(BehaviorName=IsAbilityAvailable-HunterAbility_Heartseeker, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HunterAbility_Heartseeker, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-HunterAbility_Heartseeker, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-HunterAbility_Heartseeker, NodeType=Condition)

; Lethal Tempo - Lightning hands equivalent, and yes, it can crit. The Hunter is the Crit Master.

+Behaviors=(BehaviorName=TryHunterAbilityLethalTempo, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-HunterAbility_LethalTempo, \\
	Child[1]=SelectHunterAbility_LethalTempoTarget, \\
	Child[2]=SelectAbility-HunterAbility_LethalTempo)

+Behaviors=(BehaviorName=SelectHunterAbility_LethalTempoTargetOver60, NodeType=Sequence, Child[0]=SetTargetStack-HunterAbility_LethalTempo, Child[1]=SelectBestTargetForChosenSSOver60, Child[2]=HasValidTarget-HunterAbility_LethalTempo)

+Behaviors=(BehaviorName=SelectHunterAbility_LethalTempoTarget, NodeType=Sequence, Child[0]=SetTargetStack-HunterAbility_LethalTempo, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-HunterAbility_LethalTempo)
+Behaviors=(BehaviorName=IsAbilityAvailable-HunterAbility_LethalTempo, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HunterAbility_LethalTempo, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-HunterAbility_LethalTempo, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-HunterAbility_LethalTempo, NodeType=Condition)