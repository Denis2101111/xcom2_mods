[XComGame.X2AIBTBehaviorTree]


+AoEProfiles=( Profile=FlameThrowerLostTargetProfile, Ability=MTFPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=true, bTargetTheLost=1, bTargetEnemy=0, MinTargets=1, bAreaSearchSpace=1, bRequireLoS=1, bIgnoreRepeatAttackList=1)
+AoEProfiles=( Profile=FlameThrowerMultiProfile, Ability=MTFPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=true, MinTargets=2, bAreaSearchSpace=1, bRequireLoS=1, bIgnoreRepeatAttackList=1)
+AoEProfiles=( Profile=FlameThrowerProfile, Ability=MTFPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=true, MinTargets=1, bAreaSearchSpace=1, bRequireLoS=1, bIgnoreRepeatAttackList=1)
+AoEProfiles=( Profile=FlameThrowerAdjacent, Ability=mtfPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=true, MinTargets=1, bAreaSearchSpace=1, bRequireLoS=1, bCountAdjacentAsHits=1, bIgnoreRepeatAttackList=1)
+AoEProfiles=( Profile=FlameThrowerIgnoreFF, Ability=mtfPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=false, MinTargets=1, bAreaSearchSpace=1, bRequireLoS=1, bCountAdjacentAsHits=1, bIgnoreRepeatAttackList=1)
+AoEProfiles=( Profile=FlameThrowerMimicBeacon, Ability=mtfPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=false, MinTargets=1, bTargetEnemy=0, bAreaSearchSpace=1, bRequireLoS=1, bRequirePotentialTarget=1, bIgnoreRepeatAttackList=1)
+AoEProfiles=( Profile=FlameThrowerMimicBeaconAdjacent, Ability=mtfPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=false, MinTargets=1, bTargetEnemy=0, bAreaSearchSpace=1, bRequireLoS=1, bCountAdjacentAsHits=1, bRequirePotentialTarget=1, bIgnoreRepeatAttackList=1)


; --- don't shoot if you're not an alien
; --- basically since non alien units don't really obey the objective target limits, never let them target the objective in the first place, whole thing taken from Reality's, just replaced some roots with different names
-Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=HasPriorityTarget, Child[1]=AttackPriorityTarget)
+Behaviors=(BehaviorName=TryAttackPriorityTarget, NodeType=Sequence, Child[0]=IsTeam-eTeam_Alien, Child[1]=HasPriorityTarget, Child[2]=AttackPriorityTarget)



+CustomNodes=(NodeTypeString="MTFCondition", ExtendsFromType="Condition", ClassName="SCPLWOTC.X2AIBTCondition_NoObjectiveBehavior")
+Behaviors=(BehaviorName=IsObjectiveUnitOrAnObject, NodeType=MTFCondition)
+Behaviors=(BehaviorName=IsNotObjectiveUnitOrAnObject, NodeType=Inverter, Child[0]=IsObjectiveUnitOrAnObject)


+Behaviors=(BehaviorName=TryHighPriorityShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=HaveHighPriorityTarget, Child[2]=ShootIfAvailable)
+Behaviors=(BehaviorName=HaveHighPriorityTarget, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=FindHighPriorityTarget, Child[2]=HasValidTarget-StandardShot)
+Behaviors=(BehaviorName=FindHighPriorityTarget, NodeType=RepeatUntilFail, Child[0]=NotHighPriorityEvaluateTarget)
+Behaviors=(BehaviorName=NotHighPriorityEvaluateTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetIsNotHighPriority)
+Behaviors=(BehaviorName=TargetIsNotHighPriority, NodeType=Inverter, Child[0]=TargetIsHighPriority)
+Behaviors=(BehaviorName=TargetIsHighPriority, NodeType=Sequence, Child[0]=TargetIsNotCivilian, Child[1]=TargetKillableOrFlanked, Child[2]=IsNotObjectiveUnitOrAnObject, Child[3]=AddToTargetScore_1000, Child[4]=UpdateBestTarget)
+Behaviors=(BehaviorName=TargetKillableOrFlanked, NodeType=Selector, Child[0]=TargetIsKillable,  Child[1]=IsFlankingTarget)

;new shoot or reload or overwatch to avoid targeting civilians
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_MTF, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_MTF, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_MTF, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_MTF, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_MTF, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectBestTarget_MTF, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=GenericSelectBestTarget_MTF, NodeType=RepeatUntilFail, Child[0]=GenericEvaluateTarget_MTF)
+Behaviors=(BehaviorName=GenericEvaluateTarget_MTF, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations_MTF, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=GenericTargetEvaluations_MTF, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=ApplyDifficultyModiFiers, Child[5]=TargetScoreInvalidateCivilians, Child[6]=IsNotObjectiveUnitOrAnObject, Child[7]=AvoidBoundAndPanickedTargets)


+Behaviors=(BehaviorName="MTFROOKIEROOT", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MTFGeneric_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="MTFMachineGunnerRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MTFGunner_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="MTFLeaderRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MTFLeaderGeneric_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=MTFGeneric_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MTFGeneric_RedAbilitySelector)
+Behaviors=(BehaviorName=MTFLeaderGeneric_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MTFLeaderGeneric_RedAbilitySelector)
+Behaviors=(BehaviorName=MTFGeneric_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MTFGenericRedFirstAction, Child[2]=MTFGenericRedLastAction)
+Behaviors=(BehaviorName=MTFLeaderGeneric_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MTFLeaderGenericRedFirstAction, Child[2]=MTFLeaderGenericRedLastAction)

+Behaviors=(BehaviorName=MTFGenericRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MTFGenericRedFirstActionSelector)
+Behaviors=(BehaviorName=MTFGenericRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrAggressive, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryShootOrReloadOrOverwatch_MTF, \\
	Child[4]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MTFGenericRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MTFGenericRedLastActionSelector)
+Behaviors=(BehaviorName=MTFGenericRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenadeAny, \\
	Child[1]=TryShootOrReloadOrOverwatch_MTF, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrAggressive)

+Behaviors=(BehaviorName=MTFLeaderGenericRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MTFLeaderGenericRedFirstActionSelector)
+Behaviors=(BehaviorName=MTFLeaderGenericRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrDefensive, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryPECLightningHands, \\
	Child[4]=TryShootOrReloadOrOverwatch_MTF, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MTFLeaderGenericRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MTFLeaderGenericRedLastActionSelector)
+Behaviors=(BehaviorName=MTFLeaderGenericRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryPECLightningHands, \\
	Child[1]=TryGrenadeAny, \\
	Child[2]=TryShootOrReloadOrOverwatch_MTF, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrDefensive)

+Behaviors=(BehaviorName=IsAbilityAvailable-PECLightningHands, NodeType=Condition)

+Behaviors=(BehaviorName=SelectAbility-PECLightningHands, NodeType=Action)

+Behaviors=(BehaviorName=SetTargetStack-PECLightningHands, NodeType=Action)

+Behaviors=(BehaviorName=HasValidTarget-PECLightningHands, NodeType=Condition)

+Behaviors=(BehaviorName=SelectTargetForPECLightningHands, NodeType=Sequence, Child[0]=SetTargetStack-PECLightningHands, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-PECLightningHands)

+Behaviors=(BehaviorName=TryPECLightningHands, NodeType=Sequence, Child[0]=IsAbilityAvailable-PECLightningHands, Child[1]=SelectTargetForPECLightningHands, Child[2]=SelectAbility-PECLightningHands)



+Behaviors=(BehaviorName=MTFGunner_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MTFGunner_RedAbilitySelector)
+Behaviors=(BehaviorName=MTFGunner_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MTFGunnerRedFirstAction, Child[2]=MTFGunnerRedLastAction)

+Behaviors=(BehaviorName=MTFGunnerRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MTFGunnerRedFirstActionSelector)
; Update - removed stand-alone MoveAggressive since it should be linked with the desired ability to be used.
+Behaviors=(BehaviorName=MTFGunnerRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrDefensive, \\
	Child[2]=TryLightningHands, \\
	Child[3]=TryHighPriorityShot, \\
	Child[4]=TryMoveToSuppressClosest, \\
	Child[5]=TryTwoTurnAttackSupportIfSafe, \\
	Child[6]=TryGrenadeAny, \\
	Child[7]=TryMTFDemolition, \\
	Child[8]=TryShootOrReloadOrOverwatch_MTF, \\
	Child[9]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MTFGunnerRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MTFGunnerRedLastActionSelector)
+Behaviors=(BehaviorName=MTFGunnerRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryLightningHands, \\
	Child[1]=TryMTFDemolition, \\
	Child[2]=ShootOrSuppressIfNoGoodShot, \\
	Child[3]=TryGrenadeAny, \\
	Child[4]=TrySuppressClosest, \\
	Child[5]=TryShootOrReloadOrOverwatch_MTF, \\
	Child[6]=HuntEnemyWithCover, \\
	Child[7]=SelectMove_JobOrDefensive) 

	
	;trying to get lightning hands to work with Gunner

+Behaviors=(BehaviorName=IsAbilityAvailable-LightningHands, NodeType=Condition)

+Behaviors=(BehaviorName=SelectAbility-LightningHands, NodeType=Action)

+Behaviors=(BehaviorName=SetTargetStack-LightningHands, NodeType=Action)

+Behaviors=(BehaviorName=HasValidTarget-LightningHands, NodeType=Condition)

+Behaviors=(BehaviorName=SelectTargetForLightningHands, NodeType=Sequence, Child[0]=SetTargetStack-LightningHands, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-LightningHands)

+Behaviors=(BehaviorName=TryLightningHands, NodeType=Sequence, Child[0]=IsAbilityAvailable-LightningHands, Child[1]=SelectTargetForLightningHands, Child[2]=SelectAbility-LightningHands)

;Lightning Hands
+Behaviors=(BehaviorName=IsAbilityAvailable-LightningHands, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LightningHands, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-LightningHands, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-LightningHands, NodeType=Condition)
+Behaviors=(BehaviorName=TryLightningHands, NodeType=Sequence, Child[0]=IsAbilityAvailable-LightningHands, Child[1]=SelectTargetForLightningHands, Child[2]=SelectAbility-LightningHands)
+Behaviors=(BehaviorName=SelectTargetForLightningHands, NodeType=Sequence, Child[0]=SetTargetStack-LightningHands, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-LightningHands)

;Demolition
+Behaviors=(BehaviorName=TryMTFDemolition, NodeType=Sequence, Child[0]=IsAbilityAvailable-Demolition, Child[1]=SelectTargetFor_MTFDemolition, Child[2]=SelectAbility-Demolition)
+Behaviors=(BehaviorName=SelectTargetFor_MTFDemolition, NodeType=Sequence, Child[0]=SetTargetStack-Demolition, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Demolition)
+Behaviors=(BehaviorName=IsAbilityAvailable-Demolition, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Demolition, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Demolition, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Demolition, NodeType=Condition)


;##########################################################################################################
;############### MECS #####################################################################################
;##########################################################################################################

+Behaviors=(BehaviorName=MTFMECMk2_Root, NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MTFMECMk2RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=MTFMECMk2RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MTFMECMk2RedAbilitySelector)
+Behaviors=(BehaviorName=MTFMECMk2RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MTFMECMk2RedFirstAction, Child[2]=MTFMECMk2RedLastAction)

+Behaviors=(BehaviorName=MTFMECMk2RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MTFMECMk2FirstActionSelector)
+Behaviors=(BehaviorName=MTFMECMk2FirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveThenMicroMissilesMk2, \\
	Child[1]=TryRapidFire, \\
	Child[2]=SelectNCMove_JobOrFanatic, \\
	Child[3]=HuntEnemy, \\
	Child[4]=TryShootOrReloadOrOverwatch)

+Behaviors=(BehaviorName=MTFMECMk2RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MTFMECMk2RedLastActionSelector)
+Behaviors=(BehaviorName=MTFMECMk2RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMicroMissilesMk2, \\
	Child[1]=TryRapidFire, \\
	Child[2]=ShootOrSuppressIfNoGoodShot, \\
	Child[3]=HuntEnemy, \\
	Child[4]=SelectNCMove_JobOrFanatic, \\
	Child[5]=TryShootOrReloadOrOverwatch)

+Behaviors=(BehaviorName=IsAbilityAvailable-Rapidfire, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Rapidfire, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Rapidfire, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Rapidfire, NodeType=Condition)
+Behaviors=(BehaviorName=TryRapidfire, NodeType=Sequence, Child[0]=IsAbilityAvailable-Rapidfire, Child[1]=SelectTargetForRapidfire, Child[2]=SelectAbility-Rapidfire)
+Behaviors=(BehaviorName=SelectTargetForRapidfire, NodeType=Sequence, Child[0]=SetTargetStack-Rapidfire, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Rapidfire)

;##########################################################################################################
;############### Mole Rats ################################################################################
;##########################################################################################################
+Behaviors=(BehaviorName="MTFMoleRatRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MTFMoleGeneric_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=MTFMoleGeneric_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=MTFMoleGeneric_RedAbilitySelector)
+Behaviors=(BehaviorName=MTFMoleGeneric_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MTFMoleGenericRedFirstAction, Child[2]=MTFMoleGenericRedLastAction)


+Behaviors=(BehaviorName=MTFMoleGenericRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MTFMoleGenericRedFirstActionSelector)
+Behaviors=(BehaviorName=MTFMoleGenericRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrFlanking, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryGrappleForOffense, \\
	Child[4]=TryShootOrReloadOrOverwatch_MTF, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MTFMoleGenericRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MTFMoleGenericRedLastActionSelector)
+Behaviors=(BehaviorName=MTFMoleGenericRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrappleForOffense, \\
	Child[1]=TryGrenadeAny, \\
	Child[2]=TryShootOrReloadOrOverwatch_MTF, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrFlanking)


+Behaviors=(BehaviorName=TryGrappleForOffense, NodeType=Sequence, Child[0]=IsAbilityAvailable-Grapple, Child[1]=FindOffensiveGrappleDestination, Child[2]=SelectAbility-Grapple)
+Behaviors=(BehaviorName=IsAbilityAvailable-Grapple, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Grapple, NodeType=Action)

;#######################
;############### Flamethrower fix (not working btw, it screwed it up even more)
;#######################
+Behaviors=(BehaviorName="MTFPurifier::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=MTFPurifierRedAlert, Child[3]=GenericAlertHandler, Child[4]=SkipMove)
+Behaviors=(BehaviorName="MTFPurifier::AttackMimicBeacon", NodeType=Sequence, Child[0]=SelectPotentialMimicBeaconTarget, Child[1]=TryFlameThrowerOnMimicBeacon)
+Behaviors=(BehaviorName=MTFPurifierRedAlert, NodeType=Sequence, Child[0]=IsRedOrOrangeAlert, Child[1]=SelectMTFPurifierAbility)
+Behaviors=(BehaviorName=SelectMTFPurifierAbility, NodeType=Selector,\\
			Child[0]=SelectPreselectedAbility, \\
			Child[1]=MimicBeaconBehavior, \\
			Child[2]=TryLightningHands, \\
			Child[3]=MTFFlameThrowerPriorityOption, \\
			Child[4]=TryMoveThenGrenade, \\
			Child[5]=MTFTryMoveThenFlameThrower, \\
			Child[6]=MTFTryFlankedMoveThenFlameThrower,\\
			Child[7]=DoIfFlankedMove, \\
			Child[8]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=MTFFlameThrowerPriorityOption, NodeType=Sequence, Child[0]=IsAbilityAvailable-MTFPurifierFlamethrower, Child[1]=MTFTryFlameThrowerPriority)
+Behaviors=(BehaviorName=MTFTryFlameThrowerPriority, NodeType=Selector, Child[0]=MTFFirstTurnMoveForPriorityFlameThrower, Child[1]=MTFFlameThrowerIfPriorityTargets)
+Behaviors=(BehaviorName=MTFFirstTurnMoveForPriorityFlameThrower, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=IsAbilityAvailable-StandardMove, Child[2]=MTFPurifierMoveForLost, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=MTFPurifierMoveForLost, NodeType=Selector, Child[0]=MTFFlameThrowerLostMoveAndAttack, Child[1]=MTFFindDestinationTowardTheLost)
+Behaviors=(BehaviorName=MTFFindDestinationTowardTheLost, NodeType=Sequence, Child[0]=FindVisibleLostTarget, Child[1]=MTFFindLostFlamethrowerDestination)
+Behaviors=(BehaviorName=MTFRestrictToPotentialTargetRange-MtfPurifierFlamethrower, NodeType=Action)
+Behaviors=(BehaviorName=MTFFindLostFlamethrowerDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=MTFRestrictToPotentialTargetRange-MTFPurifierFlamethrower, Child[2]=FindRestrictedDestination-MWP_Standard)
+Behaviors=(BehaviorName=MTFFindVisibleLostTarget, NodeType=Sequence, Child[0]=SetVisiblePotentialTargetStack, Child[1]=MTFSelectNearestTheLostTarget, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=MTFSelectNearestTheLostTarget, NodeType=RepeatUntilFail, Child[0]=EvaluateNearestLostTarget)
;+Behaviors=(BehaviorName=EvaluateNearestLostTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSScoreNearestLostTarget, Child[2]=UpdateBestTarget)
;+Behaviors=(BehaviorName=SSScoreNearestLostTarget, NodeType=Successor, Child[0]=ScoreNearestLostTarget)
;+Behaviors=(BehaviorName=ScoreNearestLostTarget, NodeType=Sequence, Child[0]=IsTargetTeam-eTeam_TheLost, Child[1]=TargetScoreByScaledDistance-1, Child[2]=AddToTargetScore_100)

Behaviors=(BehaviorName=MTFTryMoveThenFlameThrower, NodeType=Selector, Child[0]=MTFFirstTurnMoveForFlameThrower, Child[1]=MTFTryFlameThrower, Child[2]=MTFLastMoveTryFlameAnything)
Behaviors=(BehaviorName=MTFFirstTurnMoveForFlameThrower, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=IsAbilityAvailable-StandardMove, Child[2]=MTFFlameThrowerMoveAndAttack)
;Behaviors=(BehaviorName=FindMultiTargetDestination-FlameThrowerProfile, NodeType=Action, Param[0]=1) ;Param[0]=1 added when LoS is required.
Behaviors=(BehaviorName=MTFFlameThrowerMoveAndAttack, NodeType=Selector, Child[0]=MTFMultiTargetMoveForFlameThrowerTargets, Child[1]=MTFMoveTowardFlameThrowerTargets)
Behaviors=(BehaviorName=MTFMultiTargetMoveForFlameThrowerTargets, NodeType=Sequence, Child[0]=FindMultiTargetDestination-FlameThrowerProfile, Child[1]=SSSetPreselectedAbility-FlameThrowerProfile, Child[2]=SelectAbility-StandardMove)
Behaviors=(BehaviorName=MTFMoveTowardFlameThrowerTargets, NodeType=Sequence, Child[0]=MTFSelectPotentialTargetForFlameThrower, Child[1]=ResetDestinationSearch, Child[2]=RestrictToPotentialTargetRange-MTFPurifierFlameThrower, Child[3]=FindDestinationWithLoS-MWP_Standard, Child[4]=SelectAbility-StandardMove)
Behaviors=(BehaviorName=MTFSelectPotentialTargetForFlameThrower, NodeType=Sequence, Child[0]=SetPotentialTargetStack, Child[1]=MTFSelectBestTargetForFlameThrower, Child[2]=HasValidTarget-Potential)
Behaviors=(BehaviorName=MTFSelectBestTargetForFlameThrower, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialFlameThrowerTarget)
;Behaviors=(BehaviorName=EvaluatePotentialFlameThrowerTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSScoreClosestEnemyTarget_NonCivilianOrVIP, Child[2]=UpdateBestTarget)
Behaviors=(BehaviorName=MTFLastMoveTryFlameAnything, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=IsAbilityAvailable-MTFPurifierFlamethrower, Child[2]=MTFFlameThrower_Anything, Child[3]=SelectAbility-MTFPurifierFlamethrower)
Behaviors=(BehaviorName=MTFTryFlankedMoveThenFlameThrower, NodeType=Selector, Child[0]=MTFFirstTurnFlankedMoveForFlameThrower, Child[1]=MTFTryFlameThrower, Child[2]=MTFLastMoveTryFlameAnything)
Behaviors=(BehaviorName=MTFFirstTurnFlankedMoveForFlameThrower, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=IsAbilityAvailable-StandardMove, Child[2]=FlameThrowerFlankedMoveAndAttack)
Behaviors=(BehaviorName=MTFFlameThrowerFlankedMoveAndAttack, NodeType=Selector, Child[0]=MTFMultiTargetFlankedMoveForFlameThrowerTargets, Child[1]=MTFFlankedMoveTowardFlameThrowerTargets)
;Behaviors=(BehaviorName=FindAnyMultiTargetDestination-FlameThrowerProfile, NodeType=Action, Param[0]=1) ;Param[0]=1 added when LoS is required.
Behaviors=(BehaviorName=MTFMultiTargetFlankedMoveForFlameThrowerTargets, NodeType=Sequence, Child[0]=FindAnyMultiTargetDestination-FlameThrowerProfile, Child[1]=SSSetPreselectedAbility-FlameThrowerProfile, Child[2]=SelectAbility-StandardMove)
Behaviors=(BehaviorName=MTFFlankedMoveTowardFlameThrowerTargets, NodeType=Sequence, Child[0]=MTFSelectPotentialTargetForFlameThrower, Child[1]=ResetDestinationSearch, Child[2]=RestrictToPotentialTargetRange-MTFPurifierFlameThrower, Child[3]=FindDestinationWithLoS-MWP_Fanatic, Child[4]=SelectAbility-StandardMove)


+Behaviors=(BehaviorName=MTFFlameThrowerIfPriorityTargets, NodeType=Sequence, Child[0]=SelectPriorityTargetForFlameThrower, Child[1]=SelectAbility-MTFPurifierFlamethrower)

+Behaviors=(BehaviorName=MTFTryFlameThrower, NodeType=Sequence, Child[0]=IsAbilityAvailable-MTFPurifierFlamethrower, Child[1]=FlameThrower_AnyTargetWillDo, Child[2]=SelectAbility-MTFPurifierFlamethrower)
+Behaviors=(BehaviorName=IsAbilityAvailable-MTFPurifierFlamethrower, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-MTFPurifierFlamethrower, NodeType=Action)



;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################

;GOC
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_GOC, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_GOC, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_GOC, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_GOC, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_GOC, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectBestTarget_GOC, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=GenericSelectBestTarget_GOC, NodeType=RepeatUntilFail, Child[0]=GenericEvaluateTarget_GOC)
+Behaviors=(BehaviorName=GenericEvaluateTarget_GOC, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations_GOC, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=GenericTargetEvaluations_GOC, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=ApplyDifficultyModifiers, Child[5]=TargetScoreInvalidateCivilians, Child[6]=IsNotObjectiveUnitOrAnObject, Child[7]=AvoidBoundAndPanickedTargets)


+Behaviors=(BehaviorName="GOCSoldierRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=GOCSoldier_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="GOCVanguardRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=GOCVanguard_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="GOCPeacekeeperRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=GOCPeacekeeper_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="GOCTechnicianRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=GOCTechnician_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="GOCSniperRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=GOCSniper_RedAlert, Child[3]=GenericAlertHandler)


;+Behaviors=(BehaviorName=GOCVanguard_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GOCVanguard_RedAbilitySelector)
;+Behaviors=(BehaviorName=GOCVanguard_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GOCVanguardRedFirstAction, Child[2]=GOCVanguardRedLastAction)
;
;###################################################################
;###########################SOLDIERS################################
;###################################################################

+Behaviors=(BehaviorName=GOCSoldier_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GOCSoldier_RedAbilitySelector)
+Behaviors=(BehaviorName=GOCSoldier_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GOCSoldierRedFirstAction, Child[2]=GOCSoldierRedLastAction)


+Behaviors=(BehaviorName=GOCSoldierRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=GOCSoldierRedFirstActionSelector)
+Behaviors=(BehaviorName=GOCSoldierRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrAggressive, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[4]=HuntEnemyWithCover)
	

+Behaviors=(BehaviorName=GOCSoldierRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=GOCSoldierRedLastActionSelector)
+Behaviors=(BehaviorName=GOCSoldierRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGOCLightningHands, \\
	Child[1]=TryGrenadeAny, \\
	Child[2]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrAggressive)
		
+Behaviors=(BehaviorName=IsAbilityAvailable-LightningHands, NodeType=Condition)

+Behaviors=(BehaviorName=SelectAbility-LightningHands, NodeType=Action)

+Behaviors=(BehaviorName=SetTargetStack-LightningHands, NodeType=Action)

+Behaviors=(BehaviorName=HasValidTarget-LightningHands, NodeType=Condition)

+Behaviors=(BehaviorName=SelectTargetForGOCLightningHands, NodeType=Sequence, Child[0]=SetTargetStack-LightningHands, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-LightningHands)

+Behaviors=(BehaviorName=TryGOCLightningHands, NodeType=Sequence, Child[0]=IsAbilityAvailable-LightningHands, Child[1]=SelectTargetForGOCLightningHands, Child[2]=SelectAbility-LightningHands)



;###################################################################
;###########################VANGUARDS###############################
;###################################################################

+Behaviors=(BehaviorName=GOCVanguard_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GOCVanguard_RedAbilitySelector)
+Behaviors=(BehaviorName=GOCVanguard_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GOCVanguardRedFirstAction, Child[2]=GOCVanguardRedLastAction)

+Behaviors=(BehaviorName=GOCVanguardRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=GOCVanguardRedFirstActionSelector)
+Behaviors=(BehaviorName=GOCVanguardRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrFlanking, \\
	Child[2]=TryGOCFanFire, \\
	Child[3]=TryMoveThenGrenadeAny, \\
	Child[4]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[5]=HuntEnemyWithCover)
	

+Behaviors=(BehaviorName=GOCVanguardRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=GOCVanguardRedLastActionSelector)
+Behaviors=(BehaviorName=GOCVanguardRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGOCFanFire, \\
	Child[1]=TryGrenadeAny, \\
	Child[2]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrFlanking)
		
;Fan Fire		
+Behaviors=(BehaviorName=IsAbilityAvailable-FanFire, NodeType=Condition)
	
+Behaviors=(BehaviorName=SelectAbility-FanFire, NodeType=Action)	
	
+Behaviors=(BehaviorName=SetTargetStack-FanFire, NodeType=Action)	
	
+Behaviors=(BehaviorName=HasValidTarget-FanFire, NodeType=Condition)
	
+Behaviors=(BehaviorName=TryGOCFanFire, NodeType=Sequence, Child[0]=IsAbilityAvailable-FanFire, Child[1]=SelectTargetForGOCFanFire, Child[2]=SelectAbility-FanFire)
		
+Behaviors=(BehaviorName=SelectTargetForGOCFanFire, NodeType=Sequence, Child[0]=SetTargetStack-FanFire, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-FanFire)
	
;###################################################################
;###########################Technicians#############################
;###################################################################

+Behaviors=(BehaviorName=GOCTechnician_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GOCTechnician_RedAbilitySelector)
+Behaviors=(BehaviorName=GOCTechnician_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GOCTechnicianRedFirstAction, Child[2]=GOCTechnicianRedLastAction)


+Behaviors=(BehaviorName=GOCTechnicianRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=GOCTechnicianRedFirstActionSelector)
+Behaviors=(BehaviorName=GOCTechnicianRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrdefensive, \\
	Child[2]=TryMarkTargetOption, \\
	Child[3]=TryMoveThenGrenadeAny, \\
	Child[4]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[5]=HuntEnemyWithCover)
	

+Behaviors=(BehaviorName=GOCTechnicianRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=GOCTechnicianRedLastActionSelector)
+Behaviors=(BehaviorName=GOCTechnicianRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMarkTargetOption, \\
	Child[1]=TryGrenadeAny, \\
	Child[2]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrdefensive)

;Combat Protocol 
+Behaviors=(BehaviorName=IsAbilityAvailable-CombatProtocol, NodeType=Condition)
	
+Behaviors=(BehaviorName=SelectAbility-CombatProtocol, NodeType=Action)	
	
+Behaviors=(BehaviorName=SetTargetStack-CombatProtocol, NodeType=Action)	
	
+Behaviors=(BehaviorName=HasValidTarget-CombatProtocol, NodeType=Condition)
	
+Behaviors=(BehaviorName=TryGOCCombatProtocol, NodeType=Sequence, Child[0]=IsAbilityAvailable-CombatProtocol, Child[1]=SelectTargetForGOCCombatProtocol, Child[2]=SelectAbility-CombatProtocol)
		
+Behaviors=(BehaviorName=SelectTargetForGOCCombatProtocol, NodeType=Sequence, Child[0]=SetTargetStack-CombatProtocol, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-CombatProtocol)


;Aid Protocol
+Behaviors=(BehaviorName=IsAbilityAvailable-AidProtocol, NodeType=Condition)

+Behaviors=(BehaviorName=NotApplyingAidProtocol, NodeType=Inverter, Child[0]=ApplyingEffect-AidProtocolEffect)

+Behaviors=(BehaviorName=ApplyingEffect-AidProtocolEffect, NodeType=Condition)

+Behaviors=(BehaviorName=SelectTargetForAidProtocol, NodeType=Sequence, Child[0]=SetTargetStack-AidProtocol, Child[1]=IterateTargetsForAidProtocol, Child[2]=HasValidTarget-AidProtocol)

+Behaviors=(BehaviorName=IterateTargetsForAidProtocol, NodeType=RepeatUntilFail, Child[0]=IterateNextTargetForAidProtocol)

+Behaviors=(BehaviorName=IterateNextTargetForAidProtocol, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSEvaluateForHolyWarrior, Child[2]=UpdateBestTarget)

+Behaviors=(BehaviorName=SSEvaluateForAidProtocol, NodeType=Successor, Child[0]=EvaluateForAidProtocol)

+Behaviors=(BehaviorName=EvaluateForAidProtocol, NodeType=Sequence, Child[0]=TargetScoreByVisibleXComDist-1, Child[1]=ScoreIfTarget_LowHP, Child[2]=ScoreByHP)

+Behaviors=(BehaviorName=ScoreIfTarget_LowHP, NodeType=Sequence, Child[0]=TargetHasLowHP, Child[1]=AddToTargetScore_20) ; bump a Low health target to the next aim tier with a bonus

+Behaviors=(BehaviorName=TargetHasLowHP, NodeType=TargetStatCondition, Param[0]=eStat_HP, Param[1]="<", Param[2]="50%")

+Behaviors=(BehaviorName=TryMoveAndAidProtocol, NodeType=Sequence, Child[0]=IsAbilityAvailable-AidProtocol, Child[1]=NotApplyingAidProtocol, Child[2]=SelectTargetForAidProtocol, Child[3]=SelectAidProtocolOrMoveFirst)

+Behaviors=(BehaviorName=SelectAidProtocolOrMoveFirst, NodeType=Selector, Child[0]=MoveForAidProtocolFirst, Child[1]=TryAidProtocol)

+Behaviors=(BehaviorName=MoveForAidProtocolFirst, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MoveForAidProtocol, Child[2]=SSSetPreselectedAbility-AidProtocol)

+Behaviors=(BehaviorName=SSSetPreselectedAbility-AidProtocol, NodeType=Successor, Child[0]=SetPreselectedAbility-AidProtocol)

+Behaviors=(BehaviorName=SetPreselectedAbility-AidProtocol, NodeType=Action)

+Behaviors=(BehaviorName=MoveForAidProtocol, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=FindHolywarriorDestination, Child[2]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=TryAidProtocol, NodeType=Sequence, Child[0]=IsAbilityAvailable-AidProtocol, Child[1]=NotApplyingAidProtocol, Child[2]=SelectTargetForAidProtocol, Child[3]=SelectAbility-AidProtocol) 

+Behaviors=(BehaviorName=SetTargetStack-AidProtocol, NodeType=Action)

+Behaviors=(BehaviorName=HasValidTarget-AidProtocol, NodeType=Condition)

+Behaviors=(BehaviorName=SelectAbility-AidProtocol, NodeType=Action)
;jesus fucking Christ it took me a while

;###################################################################
;##########################Peacekeepers#############################
;###################################################################


+Behaviors=(BehaviorName=GOCPeacekeeper_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GOCPeacekeeper_RedAbilitySelector)
+Behaviors=(BehaviorName=GOCPeacekeeper_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GOCPeacekeeperRedFirstAction, Child[2]=GOCPeacekeeperRedLastAction)

+Behaviors=(BehaviorName=GOCPeacekeeperRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=GOCPeacekeeperRedFirstActionSelector)
; Update - removed stand-alone MoveAggressive since it should be linked with the desired ability to be used.
+Behaviors=(BehaviorName=GOCPeacekeeperRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrDefensive, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryHighPriorityShot, \\
	Child[4]=TryMoveToSuppressClosest, \\
	Child[5]=TryTwoTurnAttackSupportIfSafe, \\
	Child[6]=SelectMoveProfileByJob, \\
	Child[7]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[8]=HuntEnemyWithCover) 

+Behaviors=(BehaviorName=GOCPeacekeeperRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=GOCPeacekeeperRedLastActionSelector)
+Behaviors=(BehaviorName=GOCPeacekeeperRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenadeAny, \\
	Child[1]=ShootOrSuppressIfNoGoodShot, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SelectMove_JobOrFlanking) 


;+Behaviors=(BehaviorName=TryTriggerRage-GOC, NodeType=Sequence, Child[0]=IsAbilityAvailable-TriggerRage, Child[1]=SelectAbility-TriggerRage)
;
;+Behaviors=(BehaviorName=TryGOCPsiHeal, NodeType=Sequence, Child[0]=IsAbilityReady-GOCPsiHeal, Child[1]=SelectTargetForGOCPsiHeal, Child[2]=SelectAbility-GOCPsiHeal)
;
;+Behaviors=(BehaviorName=SelectTargetForGOCPsiHeal, NodeType=Sequence,  Child[0]=SetNextTarget, Child[1]=ScoreBestTargetForHeal, Child[2]=UpdateBestTarget)
;
;
;+Behaviors=(BehaviorName=ScoreBestTargetForHeal, NodeType=Sequence, Child[0]=TargetIsAlly, Child[1]=TargetWounded, Child[2]=EvaluateForHeal)
;+Behaviors=(BehaviorName=EvaluateForHeal, NodeType=Sequence, Child[0]=ScoreByHP)
;
;
;+Behaviors=(BehaviorName=SelectAbility-GOCPsiHeal, NodeType=Action)
;+Behaviors=(BehaviorName=IsAbilityReady-GOCPsiHeal, NodeType=Condition)





;###################################################################
;##########################Snipers##################################
;###################################################################

+Behaviors=(BehaviorName=GOCSniper_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GOCSniper_RedAbilitySelector)
+Behaviors=(BehaviorName=GOCSniper_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GOCSniperRedFirstAction, Child[2]=GOCSniperRedLastAction)


+Behaviors=(BehaviorName=GOCSniperRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=GOCSniperRedFirstActionSelector)
+Behaviors=(BehaviorName=GOCSniperRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedOrFirstActionMoveHeightGOC, \\
	Child[1]=SelectMove_JobOrDefensiveGOC, \\
	Child[2]=TryGOCLightningHands, \\
	Child[3]=TryShootOrReloadOrOverwatch_GOC)
	

+Behaviors=(BehaviorName=GOCSniperRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=GOCSniperRedLastActionSelector)
+Behaviors=(BehaviorName=GOCSniperRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGOCLightningHands, \\
	Child[1]=TryShootOrReloadOrOverwatch_GOC, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrDefensive)
	

+Behaviors=(BehaviorName=TryGOCPistolShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-PistolStandardShot, Child[1]=SelectTargetForPistolStandardShot, Child[2]=SelectAbility-PistolStandardShot)

+Behaviors=(BehaviorName=DoIfFlankedOrFirstActionMoveHeightGOC, NodeType=Sequence, Child[0]=NeedsMoveOrFirstAction, Child[1]=FlankedMoveSelectorHeight)
+Behaviors=(BehaviorName=NeedsMoveOrFirstAction, NodeType=Selector, Child[0]=CheckIfNeedToMove, Child[1]=NotLastActionPointAndDidNotJustGrapple)
+Behaviors=(BehaviorName=NotLastActionPointAndDidNotJustGrapple, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=DidNotJustGrapple)
+Behaviors=(BehaviorName=SelectMove_JobOrDefensiveGOC, NodeType=Selector,  Child[0]=MoveAdvanceToCoverHeightLoSUnsafe)

;###################################################################
;##########################Sectopod#################################
;###################################################################

+EquivalentAbilities=( KeyName=EnergyShield, EquivalentAbilityName[0]=EnergyShield, EquivalentAbilityName[1]=EnergyShieldMk3, EquivalentAbilityName[2]=SectopodEnergyShieldMk1, EquivalentAbilityName[3]=SectopodEnergyShieldMk2)

+Behaviors=(BehaviorName="GOCSectopodRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=GOCSectopodRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=GOCSectopodRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=GOCSectopodRedAbilitySelector)
+Behaviors=(BehaviorName=GOCSectopodRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=GOCSectopodRedFirstAction, Child[2]=GOCSectopodRedSecondAction, Child[3]=GOCSectopodRedLastAction)

+Behaviors=(BehaviorName=GOCSectopodRedFirstAction, NodeType=Sequence, Child[0]=HasThreeActionPoints, Child[1]=GOCSectopodFirstActionSelector)
+Behaviors=(BehaviorName=GOCSectopodFirstActionSelector, NodeType=Selector,\\
	Child[0]=SectopodCannonCharging, \\
	Child[1]=TryStandUp,\\
	Child[2]=TryproxystunField, \\
	Child[3]=TryEnergyShieldOnMultipleTargets, \\
	Child[4]=TryFirstMoveTowardVisibleEnemies50, \\
	Child[5]=ShootIfAvailable, \\
	Child[6]=TryWrathCannonS166, \\
	Child[7]=TryMoveForLightningField, \\
	Child[8]=MoveNoCover, \\
	Child[9]=TryShootOrReloadOrOverwatch, \\
	Child[10]=HuntEnemy)

+Behaviors=(BehaviorName=GOCSectopodRedSecondAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=GOCSectopodSecondActionSelector)
+Behaviors=(BehaviorName=GOCSectopodSecondActionSelector, NodeType=Selector,\\
	Child[0]=SectopodCannonCharging, \\
	Child[1]=TryStandUp,\\
	Child[2]=TryEnergyShieldOnMultipleTargets, \\
	Child[3]=TryEnergyShieldOnanyTarget, \\
	Child[4]=TryProxyStunField, \\
	Child[5]=TryMoveTowardVisibleEnemies50, \\
	Child[6]=TryWrathCannonS166, \\
	Child[7]=TryMoveForLightningField, \\
	Child[8]=MoveNoCoverIfNotMoved, \\
	Child[9]=TryShootOrReloadOrOverwatch, \\
	Child[10]=HuntEnemy)

+Behaviors=(BehaviorName=GOCSectopodRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=GOCSectopodRedLastActionSelector)
+Behaviors=(BehaviorName=GOCSectopodRedLastActionSelector, NodeType=Selector, \\
	Child[0]=SectopodCannonCharging, \\
	Child[1]=TryproxystunField, \\
	Child[2]=TryEnergyShieldOnanyTarget, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemy)

+Behaviors=(BehaviorName=IsAbilityAvailable-proxystunField, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-proxystunField, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-proxystunField, NodeType=Action)
+Behaviors=(BehaviorName=TryProxystunField, NodeType=Sequence, Child[0]=IsAbilityAvailable-proxystunField, Child[1]=HasAnyLightningFieldTargets, Child[2]=SelectAbility-proxystunField)
+Behaviors=(BehaviorName=HasAnyLightningFieldTargets, NodeType=StatCondition, Param[0]=AbilityTargetUnitCount-proxystunField, Param[1]=">", Param[2]=1); >1 because it always sets itself as the primary target.
+Behaviors=(BehaviorName=TryFirstMoveTowardVisibleEnemies50, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=TryMoveForLightningField50)
+Behaviors=(BehaviorName=TryMoveTowardVisibleEnemies50, NodeType=Sequence, Child[0]=AnyLivingEnemyVisible, Child[1]=DidntJustMove, Child[2]=TryMoveForLightningField50)
+Behaviors=(BehaviorName=TryMoveForLightningField50, NodeType=RandFilter, Child[0]=TryMoveForLightningField, Param[0]=50)
+Behaviors=(BehaviorName=TryMoveForLightningField, NodeType=Sequence, Child[0]=DidntJustMove, Child[1]=SafeToMove, Child[2]=IsAbilityReady-proxystunField, Child[3]=MoveStandardIfFirstAbility-LightningField, Child[4]=MoveMeleeFANATICUnsafe)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-LightningField, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindLightningFieldDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindLightningFieldDestination, NodeType=Sequence, Child[0]=SelectTargetForLightningField, Child[1]=ResetDestinationSearch, Child[2]=RestrictToAbilityRange-proxystunField, Child[3]=RestrictToEnemyLoS, Child[4]=FindRestrictedDestination-MWP_Standard)
+Behaviors=(BehaviorName=SelectTargetForLightningField, NodeType=Sequence, Child[0]=SetPotentialTargetStack, Child[1]=SelectBestPotentialTargetForMelee, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=RestrictToAbilityRange-proxystunField, NodeType=Action)



;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################
;#########################################################################################################################################################################################################

;Chaos
+Behaviors=(BehaviorName=TryShootOrReloadOrOverwatch_Chaos, NodeType=Selector, Child[0]=ConsiderTakingOverwatch, Child[1]=ShootIfAvailable_Chaos, Child[2]=NeedsReload)
+Behaviors=(BehaviorName=ShootIfAvailable_Chaos, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot_Chaos, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SelectTargetForStandardShot_Chaos, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=GenericSelectBestTarget_Chaos, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=GenericSelectBestTarget_Chaos, NodeType=RepeatUntilFail, Child[0]=GenericEvaluateTarget_Chaos)
+Behaviors=(BehaviorName=GenericEvaluateTarget_Chaos, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=GenericTargetEvaluations_Chaos, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=GenericTargetEvaluations_Chaos, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=TargetScoreMarked, Child[4]=ApplyDifficultyModifiers, Child[5]=TargetScoreInvalidateCivilians, Child[6]=IsNotObjectiveUnitOrAnObject, Child[7]=AvoidBoundAndPanickedTargets)


+Behaviors=(BehaviorName="ChaosRecruitRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=ChaosGeneric_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="ChaosMikeRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=ChaosMike_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName="ChaosHuninRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=ChaosPsion_RedAlert, Child[3]=GenericAlertHandler)

+Behaviors=(BehaviorName=ChaosGeneric_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ChaosGeneric_RedAbilitySelector)
+Behaviors=(BehaviorName=ChaosGeneric_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=ChaosGenericRedFirstAction, Child[2]=ChaosGenericRedLastAction)

+Behaviors=(BehaviorName=ChaosGenericRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ChaosGenericRedFirstActionSelector)
+Behaviors=(BehaviorName=ChaosGenericRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrFlanking, \\
	Child[2]=TryChaosPsiheal, \\
	Child[3]=TryPhantomVanish, \\
	Child[4]=TryMoveThenGrenadeAny, \\
	Child[5]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[6]=HuntEnemyWithCover)
	

+Behaviors=(BehaviorName=ChaosGenericRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=ChaosGenericRedLastActionSelector)
+Behaviors=(BehaviorName=ChaosGenericRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryChaosPsiheal, \\
	Child[1]=SelectMove_JobOrFlanking, \\
	Child[2]=TryGrenadeAny, \\
	Child[3]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[4]=TryPhantomVanish, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=ChaosPsion_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ChaosPsion_RedAbilitySelector)
+Behaviors=(BehaviorName=ChaosPsion_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=ChaosPsionRedFirstAction, Child[2]=ChaosPsionRedLastAction)


+Behaviors=(BehaviorName=ChaosPsionRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ChaosPsionRedFirstActionSelector)
+Behaviors=(BehaviorName=ChaosPsionRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrdefensive, \\
	Child[2]=TryChaosPsiheal, \\
	Child[3]=TryMoveThenGrenadeAny, \\
	Child[4]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[5]=HuntEnemyWithCover)
	

+Behaviors=(BehaviorName=ChaosPsionRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=ChaosPsionRedLastActionSelector)
+Behaviors=(BehaviorName=ChaosPsionRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryChaosPsiheal, \\
	Child[1]=TryGrenadeAny, \\
	Child[2]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=TryPhantomVanish, \\
	Child[5]=SelectMove_JobOrdefensive)



+Behaviors=(BehaviorName=ChaosMike_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ChaosMike_RedAbilitySelector)
+Behaviors=(BehaviorName=ChaosMike_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=ChaosMikeRedFirstAction, Child[2]=ChaosMikeRedLastAction)

+Behaviors=(BehaviorName=ChaosMikeRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ChaosMikeRedFirstActionSelector)
; Update - removed stand-alone MoveAggressive since it should be linked with the desired ability to be used.
+Behaviors=(BehaviorName=ChaosMikeRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=SelectMove_JobOrFlanking, \\
	Child[2]=TryMoveThenGrenadeAny, \\
	Child[3]=TryHighPriorityShot, \\
	Child[4]=TryMoveToSuppressClosest, \\
	Child[5]=TryTwoTurnAttackSupportIfSafe, \\
	Child[6]=SelectMoveProfileByJob, \\
	Child[7]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[8]=HuntEnemyWithCover) 

+Behaviors=(BehaviorName=ChaosMikeRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=ChaosMikeRedLastActionSelector)
+Behaviors=(BehaviorName=ChaosMikeRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenadeAny, \\
	Child[1]=ShootOrSuppressIfNoGoodShot, \\
	Child[2]=TrySuppressClosest, \\
	Child[3]=TryShootOrReloadOrOverwatch_Chaos, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SelectMove_JobOrFlanking) 


+Behaviors=(BehaviorName=TryTriggerRage-Chaos, NodeType=Sequence, Child[0]=IsAbilityAvailable-TriggerRage, Child[1]=SelectAbility-TriggerRage)

+Behaviors=(BehaviorName=TryChaosPsiHeal, NodeType=Sequence, Child[0]=IsAbilityReady-ChaosPsiHeal, Child[1]=SelectTargetForChaosPsiHeal, Child[2]=SelectAbility-ChaosPsiHeal)

+Behaviors=(BehaviorName=SelectTargetForChaosPsiHeal, NodeType=Sequence,  Child[0]=SetNextTarget, Child[1]=ScoreBestTargetForHeal, Child[2]=UpdateBestTarget)


+Behaviors=(BehaviorName=ScoreBestTargetForHeal, NodeType=Sequence, Child[0]=TargetIsAlly, Child[1]=TargetWounded, Child[2]=EvaluateForHeal)
+Behaviors=(BehaviorName=EvaluateForHeal, NodeType=Sequence, Child[0]=ScoreByHP)


+Behaviors=(BehaviorName=SelectAbility-ChaosPsiHeal, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityReady-ChaosPsiHeal, NodeType=Condition)


; Vanish
+Behaviors=(BehaviorName=TryPhantomVanish, NodeType=Sequence, Child[0]=IsAbilityAvailable-Phantom_Vanish, Child[1]=SelectAbility-Phantom_Vanish)
+Behaviors=(BehaviorName=IsAbilityAvailable-Phantom_Vanish, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Phantom_Vanish, NodeType=Action)

+Behaviors=(BehaviorName=TryPhantomKillZone, NodeType=Sequence, Child[0]=IsAbilityAvailable-KillZone, Child[1]=FindPotentialAoETargets-PhantomKillZoneProfile, Child[2]=SelectAoETarget-PhantomKillZoneProfile, Child[3]=SelectAbility-KillZone)

+Behaviors=(BehaviorName=FindPotentialAoETargets-PhantomKillZoneProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-PhantomKillZoneProfile, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-KillZone, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-KillZone, NodeType=Action)



