;A configuration File

[XComGame.XComGameState_AIGroup]
+FallbackExclusionList=Nemesis_T1
+FallbackExclusionList=Nemesis_T2
+FallbackExclusionList=Nemesis_T3
+FallbackExclusionList=Nemesis_T2B
+FallbackExclusionList=Nemesis_T3B

+FallbackExclusionList=Nemesis_T4

[XComGame.XGAIBehavior]

AoEProfiles=( Profile=FlameThrowerLostTargetProfile, Ability=AdvPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=true, bTargetTheLost=1, bTargetEnemy=0, MinTargets=1, bAreaSearchSpace=1, bRequireLoS=1, bIgnoreRepeatAttackList=1)
AoEProfiles=( Profile=FlameThrowerMultiProfile, Ability=AdvPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=true, MinTargets=2, bAreaSearchSpace=1, bRequireLoS=1, bIgnoreRepeatAttackList=1)
AoEProfiles=( Profile=FlameThrowerProfile, Ability=AdvPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=true, MinTargets=1, bAreaSearchSpace=1, bRequireLoS=1, bIgnoreRepeatAttackList=1)
AoEProfiles=( Profile=FlameThrowerAdjacent, Ability=AdvPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=true, MinTargets=1, bAreaSearchSpace=1, bRequireLoS=1, bCountAdjacentAsHits=1, bIgnoreRepeatAttackList=1)
AoEProfiles=( Profile=FlameThrowerIgnoreFF, Ability=AdvPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=false, MinTargets=1, bAreaSearchSpace=1, bRequireLoS=1, bCountAdjacentAsHits=1, bIgnoreRepeatAttackList=1)
AoEProfiles=( Profile=FlameThrowerMimicBeacon, Ability=AdvPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=false, MinTargets=1, bTargetEnemy=0, bAreaSearchSpace=1, bRequireLoS=1, bRequirePotentialTarget=1, bIgnoreRepeatAttackList=1)
AoEProfiles=( Profile=FlameThrowerMimicBeaconAdjacent, Ability=AdvPurifierFlamethrower, bIgnoreSelfDamage=True, bFailOnObjectiveFire=true, bFailOnFriendlyFire=false, MinTargets=1, bTargetEnemy=0, bAreaSearchSpace=1, bRequireLoS=1, bCountAdjacentAsHits=1, bRequirePotentialTarget=1, bIgnoreRepeatAttackList=1)


+AoEProfiles=( Profile=NemesisRLProfile, bUsePrecomputePath=1, Ability=IRI_FireRocketLauncher, bFailOnObjectiveFire=true, bFailOnFriendlyFire=True, bRequireLoS=1)
+AoEProfiles=( Profile=NemesisRLSingleProfile, bUsePrecomputePath=1, Ability=IRI_FireRocketLauncher, bFailOnObjectiveFire=true, bFailOnFriendlyFire=True, bRequireLoS=1, MinTargets=1)
+AoEProfiles=( Profile=NemesisRLIdealProfile, bUsePrecomputePath=1, Ability=IRI_FireRocketLauncher, bFailOnObjectiveFire=true, bFailOnFriendlyFire=True, bRequireLoS=1, MinTargets=3)

+AoEProfiles=( Profile=NemesisRocketProfile, bUsePrecomputePath=0, Ability=IRI_FireRocket, bFailOnObjectiveFire=true, bFailOnFriendlyFire=True, bRequireLoS=1)
+AoEProfiles=( Profile=NemesisRocketIdealProfile, bUsePrecomputePath=0, Ability=IRI_FireRocket, bFailOnObjectiveFire=true, bFailOnFriendlyFire=True, bRequireLoS=1, MinTargets=3)
;+AoEProfiles=( Profile=NemesisRocketProfile, Ability=IRI_FireRocket, bUsePrecomputePath=1, MinTargets=1) 

[XComGame.X2AIBTBehaviorTree]
+EquivalentAbilities=(KeyName=ScythingClaws, EquivalentAbilityName[0]=NemesisT1ScythingClaws, EquivalentAbilityName[1]=NemesisT2ScythingClaws)
;+EquivalentAbilities=(KeyName=DevastatingPunch, EquivalentAbilityName[0]=NemesisDevastatingStrike)
+EquivalentAbilities=(KeyName=StandardMelee, EquivalentAbilityName[0]=NemesisDevastatingStrike, EquivalentAbilityName[1]=NemesisDevastatingFlameStrike)
+EquivalentAbilities=(KeyName=PsiReanimation, EquivalentAbilityName[0]=ParasiteReanimation)
+EquivalentAbilities=(KeyName=Bind, EquivalentAbilityName[0]=Nemesis_Bind)
+EquivalentAbilities=( KeyName=DevastatingPunch, EquivalentAbilityName[0]=NemesisDevastatingStrike, EquivalentAbilityName[1]=NemesisDevastatingFlameStrike)

;Behavior for Parasite Reanimation

+Behaviors=(BehaviorName=TryParasiteReanimation, NodeType=Sequence, Child[0]=IsAbilityAvailable-ParasiteReanimation, Child[1]=SelectTargetForParasiteReanimation, Child[2]=SelectAbility-ParasiteReanimation)






+Behaviors=(BehaviorName=HasValidTarget-ParasiteReanimation, NodeType=Condition)
;Behaviors=(BehaviorName=TryPsiReanimation, NodeType=Sequence, Child[0]=IsAbilityAvailable-PsiReanimation, Child[1]=SelectTargetForPsiReanimation, Child[2]=SelectAbility-PsiReanimation)
+Behaviors=(BehaviorName=SelectTargetForParasiteReanimation, NodeType=Sequence, Child[0]=SetTargetStack-ParasiteReanimation, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-ParasiteReanimation)
; Target Selection for PsiReanimation ability
+Behaviors=(BehaviorName=SetTargetStack-ParasiteReanimation, NodeType=Action)
+Behaviors=(BehaviorName=SelectAbility-ParasiteReanimation, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-ParasiteReanimation, NodeType=Condition)
;we define IRI_FireRocketLauncher from Iridar's [WOTC] Rocket Launchers as an ability to be used by AI Behavior (functional rocket launcher, cosmetic rockets)

+Behaviors=(BehaviorName=TryMoveThenNemesisRocketLauncher, NodeType=Selector, Child[0]=TryMoveForNemesisRocketLauncher, Child[1]=CheckAndTryNemesisRocketLauncher)
+Behaviors=(BehaviorName=TryMoveForNemesisRocketLauncher, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-IRI_FireRocketLauncher, Child[2]=FindPotentialAoETargets-NemesisRLProfile, Child[3]=MoveStandardIfFirstAbility-IRI_FireRocketLauncher)
+Behaviors=(BehaviorName=TryNemesisRocketLauncher, NodeType=Sequence, Child[0]=IsAbilityAvailable-IRI_FireRocketLauncher, Child[1]=FindPotentialAoETargets-NemesisRLProfile, Child[2]=SelectAoETarget-NemesisRLProfile, Child[3]=SelectAbility-IRI_FireRocketLauncher)
+Behaviors=(BehaviorName=TryNemesisRocketLauncherSingle, NodeType=Sequence, Child[0]=IsAbilityAvailable-IRI_FireRocketLauncher, Child[1]=FindPotentialAoETargets-NemesisRLSingleProfile, Child[2]=SelectAoETarget-NemesisRLSingleProfile, Child[3]=SelectAbility-IRI_FireRocketLauncher)
+Behaviors=(BehaviorName=TryNemesisRocketLauncherIdeal, NodeType=Sequence, Child[0]=IsAbilityAvailable-IRI_FireRocketLauncher, Child[1]=FindPotentialAoETargets-NemesisRLIdealProfile, Child[2]=SelectAoETarget-NemesisRLIdealProfile, Child[3]=SelectAbility-IRI_FireRocketLauncher)

+Behaviors=(BehaviorName=MaybeNemesisRocketLauncherSingle, NodeType=RandFilter, Child[0]=TryNemesisRocketLauncherSingle, Param[0]=10)


+Behaviors=(BehaviorName=IsAbilityAvailable-IRI_FireRocketLauncher, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-IRI_FireRocketLauncher, NodeType=Condition)
+Behaviors=(BehaviorName=FindPotentialAoETargets-NemesisRLProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-NemesisRLSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-NemesisRLIdealProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-NemesisRLProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-NemesisRLSingleProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-NemesisRLIdealProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAbility-IRI_FireRocketLauncher, NodeType=Action)

+Behaviors=(BehaviorName=RestrictToAbilityRange-IRI_FireRocketLauncher, NodeType=Action)
+Behaviors=(BehaviorName=FindIRI_FireRocketLauncherDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-IRI_FireRocketLauncher, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Fanatic)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-IRI_FireRocketLauncher, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindIRI_FireRocketLauncherDestination, Child[3]=SelectAbility-StandardMove)
;we define IRI_FireRocket from Iridar's [WOTC] Rocket Launchers as an ability to be used by AI Behavior (cosmetic rocket launcher, functional rockets)

+Behaviors=(BehaviorName=TryNemesisRocket, NodeType=Sequence, Child[0]=IsAbilityAvailable-IRI_FireRocket, Child[1]=FindPotentialAoETargets-NemesisRocketProfile, Child[2]=SelectAoETarget-NemesisRocketProfile, Child[3]=SelectAbility-IRI_FireRocket)
+Behaviors=(BehaviorName=TryNemesisRocketIdeal, NodeType=Sequence, Child[0]=IsAbilityAvailable-IRI_FireRocket, Child[1]=FindPotentialAoETargets-NemesisRocketIdealProfile, Child[2]=SelectAoETarget-NemesisRocketIdealProfile, Child[3]=SelectAbility-IRI_FireRocket)

+Behaviors=(BehaviorName=IsAbilityAvailable-IRI_FireRocket, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-IRI_FireRocket, NodeType=Condition)
+Behaviors=(BehaviorName=FindPotentialAoETargets-NemesisRocketProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-NemesisRocketIdealProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-NemesisRocketProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-NemesisRocketIdealProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAbility-IRI_FireRocket, NodeType=Action)

+Behaviors=(BehaviorName=RestrictToAbilityRange-IRI_FireRocket, NodeType=Action)
+Behaviors=(BehaviorName=FindIRI_FireRocketDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-IRI_FireRocket, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Fanatic)
+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-IRI_FireRocket, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindIRI_FireRocketDestination, Child[3]=SelectAbility-StandardMove)

;Conditional Experiments
+Behaviors=(BehaviorName=WasLastAbility-IRI_FireRocketLauncher, NodeType=Condition)
+Behaviors=(BehaviorName=DidntJustRocketLauncher, NodeType=Inverter, Child[0]=WasLastAbility-IRI_FireRocketLauncher)
;
;+Behaviors=(BehaviorName=IfNotRepeatThen, NodeType=Sequence, Child[0]=DidntJustRocketLauncher, Child[1]=)


;Melee Selection Ideas
+Behaviors=(BehaviorName=OneVisibleEnemies, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]="==", Param[2]=1)
;Have to decide when to rush for melee vs move for rocket launcher
; i.e. BehaviorName=<AnyName>, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">", Param[2]="1");  
;+Behaviors=(BehaviorName=MoreThanOneVisibleEnemies, NodeType=StatCondition, Param[0]=VisibleEnemyCount, Param[1]=">=", Param[2]=1)
;MultipleEnemiesVisible is the check we should use
;Idea TryDashMelee if only 1 target is visible
;CheckAndTryNemesisRocketLauncherIdeal
+Behaviors=(BehaviorName=CheckAndTryNemesisRocketLauncherIdeal, NodeType=Sequence, Child[0]=MultipleEnemiesVisible, Child[1]=TryNemesisRocketLauncherIdeal)
+Behaviors=(BehaviorName=CheckAndTryNemesisRocketLauncher, NodeType=Sequence, Child[0]=MultipleEnemiesVisible, Child[1]=TryNemesisRocketLauncher)

+Behaviors=(BehaviorName=CheckAndTryNemesisRocketIdeal, NodeType=Sequence, Child[0]=MultipleEnemiesVisible, Child[1]=TryNemesisRocketIdeal)
+Behaviors=(BehaviorName=CheckAndTryNemesisRocket, NodeType=Sequence, Child[0]=MultipleEnemiesVisible, Child[1]=TryNemesisRocket)

;T1
+Behaviors=(BehaviorName="Nemesis_T1::CharacterRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=Nemesis_T1HeatSeekProtocol, Child[3]=Nemesis_T1RedAlert, Child[4]=GenericAlertHandler)
+Behaviors=(BehaviorName=Nemesis_T1RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=Nemesis_T1RedAbilitySelector)
+Behaviors=(BehaviorName=Nemesis_T1RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=Nemesis_T1RedFirstAction, Child[2]=Nemesis_T1RedLastAction)

+Behaviors=(BehaviorName=Nemesis_T1RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=Nemesis_T1FirstActionSelector);
+Behaviors=(BehaviorName=Nemesis_T1FirstActionSelector, NodeType=Selector, \\
	Child[0]=ContinueBindInProgress, \\
	Child[1]=TryParasiteReanimation, \\
	Child[2]=CheckAndTryNemesisRocketLauncherIdeal, \\
	Child[3]=TryScythingClaws, \\
	Child[4]=CheckAndTryNemesisRocketLauncher, \\
	Child[5]=TryStandardMelee, \\
	Child[6]=MoveMeleeOrDevastatingPunchAttack, \\
	Child[7]=TryMoveThenNemesisRocketLauncher, \\
	Child[8]=SelectNCMove_JobOrFanatic, \\
	Child[9]=HuntEnemyUnsafe)


;TryNemesisRocketLauncher
+Behaviors=(BehaviorName=Nemesis_T1RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=Nemesis_T1RedLastActionSelector)
+Behaviors=(BehaviorName=Nemesis_T1RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryParasiteReanimation, \\
	Child[1]=CheckAndTryNemesisRocketLauncherIdeal, \\
	Child[2]=TryBind, \\
	Child[3]=TryScythingClaws, \\
	Child[4]=CheckAndTryNemesisRocketLauncher, \\
	Child[5]=TryStandardMelee, \\
	Child[6]=MaybeNemesisRocketLauncherSingle, \\
	Child[7]=MoveMeleeOrDevastatingPunchAttack, \\
	Child[8]=MoveMeleeFANATICUnsafe, \\
	Child[9]=HuntEnemy)


+Behaviors=(BehaviorName="Nemesis_T1::AttackMimicBeacon", NodeType=Sequence, Child[0]=TryScythingClaws)

+Behaviors=(BehaviorName=Nemesis_T1HeatSeekProtocol, NodeType=Sequence, Child[0]=Nemesis_T1ShouldTriggerHeatSeek, Child[1]=SelectHeatSeekMove)
+Behaviors=(BehaviorName=Nemesis_T1ShouldTriggerHeatSeek, NodeType=Selector, Child[0]=NoVisibleEnemies)


;T2
+Behaviors=(BehaviorName="Nemesis_T2::CharacterRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=Nemesis_T2HeatSeekProtocol, Child[3]=Nemesis_T2RedAlert, Child[4]=GenericAlertHandler)
+Behaviors=(BehaviorName=Nemesis_T2RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=Nemesis_T2RedAbilitySelector)
+Behaviors=(BehaviorName=Nemesis_T2RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=Nemesis_T2RedFirstAction, Child[2]=Nemesis_T2RedLastAction)

+Behaviors=(BehaviorName=Nemesis_T2RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=Nemesis_T2FirstActionSelector);
+Behaviors=(BehaviorName=Nemesis_T2FirstActionSelector, NodeType=Selector, \\
	Child[0]=ContinueBindInProgress, \\
	Child[1]=TryParasiteReanimation, \\
	Child[2]=CheckAndTryNemesisRocketIdeal, \\
	Child[3]=TryScythingClaws, \\
	Child[4]=CheckAndTryNemesisRocketLauncher, \\
	Child[5]=TryStandardMelee, \\
	Child[6]=MoveMeleeOrDevastatingPunchAttack, \\
	Child[7]=TryMoveThenNemesisRocketLauncher, \\
	Child[8]=SelectNCMove_JobOrFanatic, \\
	Child[9]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=Nemesis_T2RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=Nemesis_T2RedLastActionSelector)
+Behaviors=(BehaviorName=Nemesis_T2RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryParasiteReanimation, \\
	Child[1]=CheckAndTryNemesisRocketIdeal, \\
	Child[2]=CheckAndTryNemesisRocketLauncherIdeal, \\
	Child[3]=TryBind, \\
	Child[4]=TryScythingClaws, \\
	Child[5]=CheckAndTryNemesisRocketLauncher, \\
	Child[6]=TryStandardMelee, \\
	Child[7]=MaybeNemesisRocketLauncherSingle, \\
	Child[8]=MoveMeleeOrDevastatingPunchAttack, \\
	Child[9]=MoveMeleeFANATICUnsafe, \\
	Child[10]=HuntEnemy)

+Behaviors=(BehaviorName="Nemesis_T2::AttackMimicBeacon", NodeType=Sequence, Child[0]=TryScythingClaws)

+Behaviors=(BehaviorName=Nemesis_T2HeatSeekProtocol, NodeType=Sequence, Child[0]=Nemesis_T2ShouldTriggerHeatSeek, Child[1]=SelectHeatSeekMove)
+Behaviors=(BehaviorName=Nemesis_T2ShouldTriggerHeatSeek, NodeType=Selector, Child[0]=NoVisibleEnemies)


;T3
+Behaviors=(BehaviorName="Nemesis_T3::CharacterRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=Nemesis_T3HeatSeekProtocol, Child[3]=Nemesis_T3RedAlert, Child[4]=GenericAlertHandler)
+Behaviors=(BehaviorName=Nemesis_T3RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=Nemesis_T3RedAbilitySelector)
+Behaviors=(BehaviorName=Nemesis_T3RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=Nemesis_T3RedFirstAction, Child[2]=Nemesis_T3RedLastAction)

+Behaviors=(BehaviorName=Nemesis_T3RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=Nemesis_T3FirstActionSelector);
+Behaviors=(BehaviorName=Nemesis_T3FirstActionSelector, NodeType=Selector, \\
	Child[0]=ContinueBindInProgress, \\
	Child[1]=TryParasiteReanimation, \\
	Child[2]=CheckAndTryNemesisRocketIdeal, \\
	Child[3]=TryScythingClaws, \\
	Child[4]=CheckAndTryNemesisRocketLauncher, \\
	Child[5]=TryStandardMelee, \\
	Child[6]=MoveMeleeOrDevastatingPunchAttack, \\
	Child[7]=TryMoveThenNemesisRocketLauncher, \\
	Child[8]=SelectNCMove_JobOrFanatic, \\
	Child[9]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=Nemesis_T3RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=Nemesis_T3RedLastActionSelector)
+Behaviors=(BehaviorName=Nemesis_T3RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryParasiteReanimation, \\
	Child[1]=CheckAndTryNemesisRocketIdeal, \\
	Child[2]=CheckAndTryNemesisRocketLauncherIdeal, \\
	Child[3]=TryBind, \\
	Child[4]=TryScythingClaws, \\
	Child[5]=CheckAndTryNemesisRocketLauncher, \\
	Child[6]=TryStandardMelee, \\
	Child[7]=MaybeNemesisRocketLauncherSingle, \\
	Child[8]=MoveMeleeOrDevastatingPunchAttack, \\
	Child[9]=MoveMeleeFANATICUnsafe, \\
	Child[10]=HuntEnemy)

+Behaviors=(BehaviorName="Nemesis_T3::AttackMimicBeacon", NodeType=Sequence, Child[0]=TryScythingClaws)

+Behaviors=(BehaviorName=Nemesis_T3HeatSeekProtocol, NodeType=Sequence, Child[0]=Nemesis_T3ShouldTriggerHeatSeek, Child[1]=SelectHeatSeekMove)
+Behaviors=(BehaviorName=Nemesis_T3ShouldTriggerHeatSeek, NodeType=Selector, Child[0]=NoVisibleEnemies)

;T2B
+Behaviors=(BehaviorName=Nemesis_T2BHeatSeekProtocol, NodeType=Sequence, Child[0]=Nemesis_T2BShouldTriggerHeatSeek, Child[1]=SelectHeatSeekMove)
+Behaviors=(BehaviorName=Nemesis_T2BShouldTriggerHeatSeek, NodeType=Selector, Child[0]=NoVisibleEnemies)

+Behaviors=(BehaviorName="Nemesis_T2B::CharacterRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=Nemesis_T2BRedAlert, Child[3]=GenericAlertHandler, Child[4]=SkipMove)
+Behaviors=(BehaviorName="Nemesis_T2B::AttackMimicBeacon", NodeType=Sequence, Child[0]=SelectPotentialMimicBeaconTarget, Child[1]=TryFlameThrowerOnMimicBeacon)
+Behaviors=(BehaviorName=Nemesis_T2BRedAlert, NodeType=Sequence, Child[0]=IsRedOrOrangeAlert, Child[1]=SelectNemesis_T2BAbility)
+Behaviors=(BehaviorName=SelectNemesis_T2BAbility, NodeType=Selector,\\
			Child[0]=SelectPreselectedAbility, \\
			Child[1]=MimicBeaconBehavior, \\
			Child[2]=ContinueBindInProgress, \\
			Child[3]=MaybeFlameThrowerPriorityOption, \\
			Child[4]=TryParasiteReanimation, \\
			Child[5]=TryBindOrMeleeOrSkip, \\
			Child[6]=TryScythingClaws, \\
			Child[7]=MaybeTryStandardMelee, \\
			Child[8]=TryMoveThenFlameThrower, \\
			Child[9]=TryFlankedMoveThenFlameThrower, \\
			Child[10]=TryShootOrReloadOrOverwatch, \\
			Child[11]=HuntEnemyUnsafe)


;T3B
+Behaviors=(BehaviorName=Nemesis_T3BHeatSeekProtocol, NodeType=Sequence, Child[0]=Nemesis_T3BShouldTriggerHeatSeek, Child[1]=SelectHeatSeekMove)
+Behaviors=(BehaviorName=Nemesis_T3BShouldTriggerHeatSeek, NodeType=Selector, Child[0]=NoVisibleEnemies)

+Behaviors=(BehaviorName="Nemesis_T3B::CharacterRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=Nemesis_T3BRedAlert, Child[3]=GenericAlertHandler, Child[4]=SkipMove)
+Behaviors=(BehaviorName="Nemesis_T3B::AttackMimicBeacon", NodeType=Sequence, Child[0]=SelectPotentialMimicBeaconTarget, Child[1]=TryFlameThrowerOnMimicBeacon)
+Behaviors=(BehaviorName=Nemesis_T3BRedAlert, NodeType=Sequence, Child[0]=IsRedOrOrangeAlert, Child[1]=SelectNemesis_T3BAbility)
+Behaviors=(BehaviorName=SelectNemesis_T3BAbility, NodeType=Selector,\\
			Child[0]=SelectPreselectedAbility, \\
			Child[1]=MimicBeaconBehavior, \\
			Child[2]=ContinueBindInProgress, \\
			Child[3]=MaybeFlameThrowerPriorityOption, \\
			Child[4]=TryParasiteReanimation, \\
			Child[5]=TryBindOrMeleeOrSkip, \\
			Child[6]=TryScythingClaws, \\
			Child[7]=MaybeTryStandardMelee, \\
			Child[8]=TryMoveThenFlameThrower, \\
			Child[9]=TryFlankedMoveThenFlameThrower, \\
			Child[10]=TryShootOrReloadOrOverwatch, \\
			Child[11]=HuntEnemyUnsafe)





;T4 Ruler
;
+Behaviors=(BehaviorName="Nemesis_T4::CharacterRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=Nemesis_T3RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName="Nemesis_T4::RulerBranch", NodeType=Selector,			\\
	Child[0]=ContinueBindInProgress, \\
	Child[1]=SkipPerEffects, \\
	Child[2]=RulerUnrevealedBehavior, \\
	Child[3]=RulerEscape, \\
	Child[4]=TryParasiteReanimation, \\
	Child[5]=IfNotRepeatThenNemesisIdealPrimaryAoEAttack,	\\
	Child[6]=NemesisBindMeleeOrSkip, \\
	Child[7]=NemesisPriorityMove, \\
	Child[8]=IfNotRepeatThenCheckAndTryNemesisRocketLauncher, \\
	Child[9]=TryStandardMelee, \\
	Child[10]=MaybeNemesisRocketLauncherSingle, \\
	Child[11]="::RulerMove")


;+Behaviors=(BehaviorName=Nemesis_T4RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=Nemesis_T4RedLastActionSelector)
;+Behaviors=(BehaviorName=Nemesis_T4RedLastActionSelector, NodeType=Selector, \\
;	Child[0]=TryParasiteReanimation, \\
;	Child[1]=TryNemesisRocketLauncherIdeal, \\
;	Child[2]=TryBind, \\
;	Child[3]=TryScythingClaws, \\
;	Child[4]=TryNemesisRocketLauncher, \\
;	Child[5]=TryStandardMelee, \\
;	Child[6]=MaybeNemesisRocketLauncherSingle, \\
;	Child[7]=MoveMeleeOrDevastatingPunchAttack, \\
;	Child[8]=MoveMeleeFANATICUnsafe, \\
;	Child[9]=HuntEnemy)

+Behaviors=(BehaviorName="Nemesis_T4::AttackMimicBeacon", NodeType=Sequence, Child[0]=TryScythingClaws)

+Behaviors=(BehaviorName=Nemesis_T4HeatSeekProtocol, NodeType=Sequence, Child[0]=Nemesis_T4ShouldTriggerHeatSeek, Child[1]=SelectHeatSeekMove)
+Behaviors=(BehaviorName=Nemesis_T4ShouldTriggerHeatSeek, NodeType=Selector, Child[0]=NoVisibleEnemies)

;Ruler reaction voodoo
+Behaviors=(BehaviorName=IfNotRepeatThenNemesisIdealPrimaryAoEAttack, NodeType=Sequence, Child[0]=DidntJustRocketLauncher, Child[1]=NemesisIdealPrimaryAoEAttack)
+Behaviors=(BehaviorName=NemesisIdealPrimaryAoEAttack, NodeType=RandFilter, Child[0]=CheckAndTryNemesisRocketLauncherIdeal, Param[0]=75)

+Behaviors=(BehaviorName=NemesisBindMeleeOrSkip, NodeType=RandFilter, Child[0]=TryBindOrMeleeOrScythingClaws, Param[0]=75)

+Behaviors=(BehaviorName=IfNotRepeatThenCheckAndTryNemesisRocketLauncher, NodeType=Sequence, Child[0]=DidntJustRocketLauncher, Child[1]=CheckAndTryNemesisRocketLauncher)

+Behaviors=(BehaviorName=TryBindOrMeleeOrSkip, NodeType=RandFilter, Child[0]=TryBindOrMelee, Param[0]=75)
+Behaviors=(BehaviorName=TryBindOrMelee, NodeType=RandSelector, Child[0]=TryBind, Param[0]=30, Child[1]=TryStandardMelee, Param[1]=70)
+Behaviors=(BehaviorName=TryBindOrMeleeOrScythingClaws, NodeType=RandSelector, Child[0]=TryBind, Param[0]=20, Child[1]=TryStandardMelee, Param[1]=40, Child[2]=TryScythingClaws, Param[2]=40)
+Behaviors=(BehaviorName="Nemesis_T4::RulerDisableAoE", NodeType=Sequence, Child[0]=IsAbilityAvailable-IRI_FireRocketLauncher, Child[1]="::HasPotentialAoETarget", Child[2]=SelectAoETarget-NemesisRLIdealProfile, Child[3]=SelectAbility-IRI_FireRocketLauncher)
+Behaviors=(BehaviorName="Nemesis_T4::RulerOtherAttack", NodeType=Selector, Child[0]="::RulerDisableAoE", Child[1]=DistributedMeleeAttackOrShot)
+Behaviors=(BehaviorName="Nemesis_T4::HasPotentialAoETarget", NodeType=Sequence, Child[0]=IsAbilityAvailable-IRI_FireRocketLauncher, Child[1]=FindPotentialAoETargets-NemesisRLIdealProfile)
+Behaviors=(BehaviorName=NemesisPriorityMove, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=MoveCloserToAoETarget, Child[2]=TryMoveEveryOtherAction50)
;+Behaviors=(BehaviorName="ViperKing::RulerSecondSpecialAbility", NodeType=Sequence, Child[0]=IsAbilityReady-Bind, Child[1]=TryBind)
+Behaviors=(BehaviorName="Nemesis_T4::RulerMove", NodeType=Selector, Child[0]=TryMoveTowardMeleeTarget, Child[1]=MoveToAlertDataNoCover, Child[2]=HuntEnemyUnsafe, Child[3]=GenericAlertHandler)

;NemesisPriorityMove
+Behaviors=(BehaviorName=TryMoveEveryOtherAction50, NodeType=Sequence, Child[0]=DidntJustMove, Child[1]=Roll50ToMove)
+Behaviors=(BehaviorName=Roll50ToMove, NodeType=RandFilter, Child[0]="::RulerMove", Param[0]=50)



;Ruler Bind Sustain
+Behaviors=(BehaviorName=ContinueBindInProgress, NodeType=Sequence, Child[0]=AffectedByEffect-Bind, Child[1]=IsAbilityAvailable-BindSustained, Child[2]=SelectBindTarget, Child[3]=SelectAbility-BindSustained)

+Behaviors=(BehaviorName=SelectBindTarget, NodeType=Sequence, Child[0]=SetTargetStack-BindSustained, Child[1]=SelectSingletonTarget, Child[2]=HasValidTarget-BindSustained)
+Behaviors=(BehaviorName=SetTargetStack-BindSustained, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-BindSustained, NodeType=Condition)
+Behaviors=(BehaviorName=SelectSingletonTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=AddToTargetScore_100, Child[2]=UpdateBestTarget, Child[3]=NoNextTarget)
+Behaviors=(BehaviorName=NoNextTarget, NodeType=Inverter, Child[0]=SetNextTarget) 
+Behaviors=(BehaviorName=IsAbilityAvailable-BindSustained, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-BindSustained, NodeType=Action)


;flamethrower stuff
+Behaviors=(BehaviorName=SSSetPreselectedAbility-FlameThrowerLostTargetProfile, NodeType=Successor, Child[0]=SetPreselectedAbility-FlameThrowerLostTargetProfile)
+Behaviors=(BehaviorName=SetPreselectedAbility-FlameThrowerLostTargetProfile, NodeType=Action)
+Behaviors=(BehaviorName=SSSetPreselectedAbility-FlameThrowerProfile, NodeType=Successor, Child[0]=SetPreselectedAbility-FlameThrowerProfile)
+Behaviors=(BehaviorName=SetPreselectedAbility-FlameThrowerProfile, NodeType=Action)

;flamethrower RNG
+Behaviors=(BehaviorName=MaybeFlameThrowerPriorityOption, NodeType=RandFilter, Child[0]=FlameThrowerPriorityOption, Param[0]=75)
+Behaviors=(BehaviorName=MaybeTryStandardMelee, NodeType=RandFilter, Child[0]=TryStandardMelee, Param[0]=50)
+Behaviors=(BehaviorName=TryMoveThenFlameThrowerOrMelee, NodeType=RandSelector, Child[0]=TryMoveThenFlameThrower, Param[0]=40, Child[1]=TryStandardMelee, Param[1]=60)
+Behaviors=(BehaviorName=TryFlankedMoveThenFlameThrowerOrMelee, NodeType=RandSelector, Child[0]=TryFlankedMoveThenFlameThrower, Param[0]=40, Child[1]=TryStandardMelee, Param[1]=60)

+Behaviors=(BehaviorName=FlameThrowerPriorityOption, NodeType=Sequence, Child[0]=IsAbilityAvailable-AdvPurifierFlamethrower, Child[1]=TryFlameThrowerPriority)
+Behaviors=(BehaviorName=TryFlameThrowerPriority, NodeType=Selector, Child[0]=FirstTurnMoveForPriorityFlameThrower, Child[1]=FlameThrowerIfPriorityTargets)
+Behaviors=(BehaviorName=FirstTurnMoveForPriorityFlameThrower, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=IsAbilityAvailable-StandardMove, Child[2]=PurifierMoveForLost, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=PurifierMoveForLost, NodeType=Selector, Child[0]=FlameThrowerLostMoveAndAttack, Child[1]=FindDestinationTowardTheLost)
+Behaviors=(BehaviorName=FindDestinationTowardTheLost, NodeType=Sequence, Child[0]=FindVisibleLostTarget, Child[1]=FindLostFlamethrowerDestination)
+Behaviors=(BehaviorName=RestrictToPotentialTargetRange-AdvPurifierFlamethrower, NodeType=Action)
+Behaviors=(BehaviorName=FindLostFlamethrowerDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToPotentialTargetRange-AdvPurifierFlamethrower, Child[2]=FindRestrictedDestination-MWP_Standard)
+Behaviors=(BehaviorName=FindVisibleLostTarget, NodeType=Sequence, Child[0]=SetVisiblePotentialTargetStack, Child[1]=SelectNearestTheLostTarget, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectNearestTheLostTarget, NodeType=RepeatUntilFail, Child[0]=EvaluateNearestLostTarget)
+Behaviors=(BehaviorName=EvaluateNearestLostTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSScoreNearestLostTarget, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=SSScoreNearestLostTarget, NodeType=Successor, Child[0]=ScoreNearestLostTarget)
+Behaviors=(BehaviorName=ScoreNearestLostTarget, NodeType=Sequence, Child[0]=IsTargetTeam-eTeam_TheLost, Child[1]=TargetScoreByScaledDistance-1, Child[2]=AddToTargetScore_100)

+Behaviors=(BehaviorName=FlameThrowerIfPriorityTargets, NodeType=Sequence, Child[0]=SelectPriorityTargetForFlameThrower, Child[1]=SelectAbility-AdvPurifierFlamethrower)
+Behaviors=(BehaviorName=FindMultiTargetDestination-FlameThrowerLostTargetProfile, NodeType=Action, Param[0]=1)
+Behaviors=(BehaviorName=FlameThrowerLostMoveAndAttack, NodeType=Sequence, Child[0]=FindMultiTargetDestination-FlameThrowerLostTargetProfile, Child[1]=SSSetPreselectedAbility-FlameThrowerLostTargetProfile, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=WaitedTurnsForFlameThrower, NodeType=StatCondition, Param[0]=TurnsEngaged, Param[1]=">=", Param[2]=2)

+Behaviors=(BehaviorName=TryMoveThenFlameThrower, NodeType=Selector, Child[0]=FirstTurnMoveForFlameThrower, Child[1]=TryFlameThrower, Child[2]=LastMoveTryFlameAnything)
+Behaviors=(BehaviorName=FirstTurnMoveForFlameThrower, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=IsAbilityAvailable-StandardMove, Child[2]=FlameThrowerMoveAndAttack)
+Behaviors=(BehaviorName=FindMultiTargetDestination-FlameThrowerProfile, NodeType=Action, Param[0]=1) ;Param[0]=1 added when LoS is required.
+Behaviors=(BehaviorName=FlameThrowerMoveAndAttack, NodeType=Selector, Child[0]=MultiTargetMoveForFlameThrowerTargets, Child[1]=MoveTowardFlameThrowerTargets)
+Behaviors=(BehaviorName=MultiTargetMoveForFlameThrowerTargets, NodeType=Sequence, Child[0]=FindMultiTargetDestination-FlameThrowerProfile, Child[1]=SSSetPreselectedAbility-FlameThrowerProfile, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=MoveTowardFlameThrowerTargets, NodeType=Sequence, Child[0]=SelectPotentialTargetForFlameThrower, Child[1]=ResetDestinationSearch, Child[2]=RestrictToPotentialTargetRange-AdvPurifierFlameThrower, Child[3]=FindDestinationWithLoS-MWP_Standard, Child[4]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=SelectPotentialTargetForFlameThrower, NodeType=Sequence, Child[0]=SetPotentialTargetStack, Child[1]=SelectBestTargetForFlameThrower, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestTargetForFlameThrower, NodeType=RepeatUntilFail, Child[0]=EvaluatePotentialFlameThrowerTarget)
+Behaviors=(BehaviorName=EvaluatePotentialFlameThrowerTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SSScoreClosestEnemyTarget_NonCivilianOrVIP, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=LastMoveTryFlameAnything, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=IsAbilityAvailable-AdvPurifierFlamethrower, Child[2]=FlameThrower_Anything, Child[3]=SelectAbility-AdvPurifierFlamethrower)
+Behaviors=(BehaviorName=TryFlankedMoveThenFlameThrower, NodeType=Selector, Child[0]=FirstTurnFlankedMoveForFlameThrower, Child[1]=TryFlameThrower, Child[2]=LastMoveTryFlameAnything)
+Behaviors=(BehaviorName=FirstTurnFlankedMoveForFlameThrower, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=IsAbilityAvailable-StandardMove, Child[2]=FlameThrowerFlankedMoveAndAttack)
+Behaviors=(BehaviorName=FlameThrowerFlankedMoveAndAttack, NodeType=Selector, Child[0]=MultiTargetFlankedMoveForFlameThrowerTargets, Child[1]=FlankedMoveTowardFlameThrowerTargets)
+Behaviors=(BehaviorName=FindAnyMultiTargetDestination-FlameThrowerProfile, NodeType=Action, Param[0]=1) ;Param[0]=1 added when LoS is required.
+Behaviors=(BehaviorName=MultiTargetFlankedMoveForFlameThrowerTargets, NodeType=Sequence, Child[0]=FindAnyMultiTargetDestination-FlameThrowerProfile, Child[1]=SSSetPreselectedAbility-FlameThrowerProfile, Child[2]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FlankedMoveTowardFlameThrowerTargets, NodeType=Sequence, Child[0]=SelectPotentialTargetForFlameThrower, Child[1]=ResetDestinationSearch, Child[2]=RestrictToPotentialTargetRange-AdvPurifierFlameThrower, Child[3]=FindDestinationWithLoS-MWP_Fanatic, Child[4]=SelectAbility-StandardMove)

+Behaviors=(BehaviorName=TryFlameThrower, NodeType=Sequence, Child[0]=IsAbilityAvailable-AdvPurifierFlamethrower, Child[1]=FlameThrower_AnyTargetWillDo, Child[2]=SelectAbility-AdvPurifierFlamethrower)
+Behaviors=(BehaviorName=IsAbilityAvailable-AdvPurifierFlamethrower, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AdvPurifierFlamethrower, NodeType=Action)
; targeting
+Behaviors=(BehaviorName=SelectPriorityTargetForFlameThrower, NodeType=Selector, Child[0]=FlameThrower_HitIdealTarget, Child[1]=FlameThrower_MultipleTargets)
+Behaviors=(BehaviorName=FlameThrower_HitIdealTarget, NodeType=Sequence, Child[0]=FindPotentialAoETargets-FlameThrowerLostTargetProfile, Child[1]=SelectAoETarget-FlameThrowerLostTargetProfile)
+Behaviors=(BehaviorName=FlameThrower_MultipleTargets, NodeType=Sequence, Child[0]=FindPotentialAoETargets-FlameThrowerMultiProfile, Child[1]=SelectAoETarget-FlameThrowerMultiProfile)
+Behaviors=(BehaviorName=FlameThrower_AnyTargetWillDo, NodeType=Sequence, Child[0]=FindPotentialAoETargets-FlameThrowerProfile, Child[1]=SelectAoETarget-FlameThrowerProfile)
+Behaviors=(BehaviorName=FlameThrower_Anything, NodeType=Selector, Child[0]=FlameThrower_EnemyCover, Child[1]=FlameThrower_IgnoreFF)
+Behaviors=(BehaviorName=FlameThrower_EnemyCover, NodeType=Sequence, Child[0]=FindPotentialAoETargets-FlameThrowerAdjacent, Child[1]=SelectAoETarget-FlameThrowerAdjacent)
+Behaviors=(BehaviorName=FlameThrower_IgnoreFF, NodeType=Sequence, Child[0]=FindPotentialAoETargets-FlameThrowerIgnoreFF, Child[1]=SelectAoETarget-FlameThrowerIgnoreFF)

+Behaviors=(BehaviorName=TryFlameThrowerOnMimicBeacon, NodeType=Sequence, Child[0]=IsAbilityAvailable-AdvPurifierFlamethrower, Child[1]=FindFlameThrowerMimicBeaconTarget, Child[2]=SelectAbility-AdvPurifierFlamethrower)
+Behaviors=(BehaviorName=FindFlameThrowerMimicBeaconTarget, NodeType=Selector, Child[0]=FlameThrower_MimicBeacon, Child[1]=FlameThrower_MimicBeaconAdjacent)
+Behaviors=(BehaviorName=FlameThrower_MimicBeacon, NodeType=Sequence, Child[0]=FindPotentialAoETargets-FlameThrowerMimicBeacon, Child[1]=SelectAoETarget-FlameThrowerMimicBeacon)
+Behaviors=(BehaviorName=FlameThrower_MimicBeaconAdjacent, NodeType=Sequence, Child[0]=FindPotentialAoETargets-FlameThrowerMimicBeaconAdjacent, Child[1]=SelectAoETarget-FlameThrowerMimicBeaconAdjacent)


;Parasite
;+Behaviors=(BehaviorName="ParasiteZombie::CharacterRoot", NodeType=Selector, \\
;	Child[0]=MimicBeaconBehavior, \\
;	Child[1]=ParasiteZombieBranch, \\
;	Child[2]=GenericEnemyMeleeRootFANATIC)

;+Behaviors=(BehaviorName=TemplateNameIs-ParasiteZombie, NodeType=Condition)
;+Behaviors=(BehaviorName=SelectFromParasiteZombieAbilities, NodeType=Selector, \\
;	Child[0]=TryAlert,\\
;	Child[1]=HeatSeekIfNoneVisible,\\
;	Child[2]=MimicBeaconBehavior, \\
;	Child[3]=ParasiteZombieAttack, \\
;	Child[4]=IfFirstActionMoveMeleeDashUnsafe, \\
;	Child[5]=SkipMove)

;+Behaviors=(BehaviorName=ParasiteZombieAttack, NodeType=Sequence, Child[0]=NotJustSpawnedThisTurn, Child[1]=GenericEnemyMeleeRootFANATIC)
;+Behaviors=(BehaviorName=NotJustSpawnedThisTurn, NodeType=Inverter, Child[0]=JustSpawnedThisTurn)
;+Behaviors=(BehaviorName=JustSpawnedThisTurn, NodeType=Condition)

;+Behaviors=(BehaviorName=ParasiteZombieBranch, NodeType=Sequence, Child[0]=TemplateNameIs-ParasiteZombie, Child[1]=SelectFromParasiteZombieAbilities)


;Parasite (Attempt to Fix Redscreen)
+Behaviors=(BehaviorName="ParasiteZombie::CharacterRoot", NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=GenericGreenMovement, Child[2]=ParasiteZombieHeatSeekProtocol, Child[3]=ParasiteZombieRedAlert, Child[4]=GenericAlertHandler)
+Behaviors=(BehaviorName=ParasiteZombieRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ParasiteZombieRedAbilitySelector)
+Behaviors=(BehaviorName=ParasiteZombieRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=ParasiteZombieRedFirstAction, Child[2]=ParasiteZombieRedLastAction)

+Behaviors=(BehaviorName=ParasiteZombieRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ParasiteZombieFirstActionSelector)
+Behaviors=(BehaviorName=ParasiteZombieFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryParasiteZombieAttack, \\
	Child[1]=MoveMeleeFANATICUnsafe, \\
	Child[2]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=ParasiteZombieRedLastAction, NodeType=Selector, \\
	Child[0]=TryParasiteZombieAttack, \\
	Child[1]=MoveMeleeFANATICUnsafe, \\
	Child[2]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName="ParasiteZombie::AttackMimicBeacon", NodeType=Sequence, Child[0]=TryStandardMelee)

+Behaviors=(BehaviorName=ParasiteZombieHeatSeekProtocol, NodeType=Sequence, Child[0]=ParasiteZombieShouldTriggerHeatSeek, Child[1]=SelectHeatSeekMove)
+Behaviors=(BehaviorName=ParasiteZombieShouldTriggerHeatSeek, NodeType=Selector, Child[0]=NoVisibleEnemies)

+Behaviors=(BehaviorName=TryParasiteZombieAttack, NodeType=Sequence, Child[0]=NotJustSpawnedThisTurn, Child[1]=TryStandardMelee)
+Behaviors=(BehaviorName=NotJustSpawnedThisTurn, NodeType=Inverter, Child[0]=JustSpawnedThisTurn)
+Behaviors=(BehaviorName=JustSpawnedThisTurn, NodeType=Condition)