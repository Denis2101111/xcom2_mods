[XComGame.XComGameState_AIGroup]
+FallbackExclusionList="CXQueen"
+FallbackExclusionList="CXWarrior"
+FallbackExclusionList="CXDrone"
+FallbackExclusionList="CXChameleon"
+FallbackExclusionList="CXChameleon2"
+FallbackExclusionList="CXHiveGuard"
+FallbackExclusionList="CXSpawnPit"
+FallbackExclusionList="ChrysZombie"
+FallbackExclusionList="ChrysZombieHuman"
+FallbackExclusionList="ChrysHybrid"


[XComGame.XGAIBehavior]
+AoEProfiles=(Profile=GuardAcidBlobProfile, Ability=GuardAcidBlob, bFailOnFriendlyFire=1, bIgnoreSelfDamage=0)
+AoEProfiles=(Profile=HiveQueenSpitProfile, Ability=HiveQueenSpit, bFailOnFriendlyFire=False, bIgnoreSelfDamage=false, bUsePrecomputePath=1, bFailOnObjectiveFire=false, MinTargets=1)
+AoEProfiles=(Profile=SwarmerSpitProfile, Ability=CXSwarmerSpit, bFailOnFriendlyFire=False, bIgnoreSelfDamage=true, bUsePrecomputePath=1, bFailOnObjectiveFire=false, MinTargets=1)


[XComGame.X2AIBTBehaviorTree]
+EquivalentAbilities=(KeyName=StandardMelee, EquivalentAbilityName[0]=ChryssalidSlash,  EquivalentAbilityName[1]=QueenSlash, EquivalentAbilityName[2]=CXDroneSlash, EquivalentAbilityName[3]=CXWarriorSlash, EquivalentAbilityName[4]=CXHiveGuardSlash, EquivalentAbilityName[5]=CXChameleonSlash, EquivalentAbilityName[6]=CXChameleonZombieSlash, EquivalentAbilityName[7]=CXRipperM1Slash, EquivalentAbilityName[8]=CXRipperM2Slash, EquivalentAbilityName[9]=CXRipperM3Slash, EquivalentAbilityName[10]=CXShriekerSlash, EquivalentAbilityName[11]=ChrysZombieSlash, EquivalentAbilityName[12]=HybridConsumeSlash ) 
+EquivalentAbilities=(KeyName=Teleport, EquivalentAbilityName[0]=ChameleonVanish, EquivalentAbilityName[1]=DroneVanish )
+EquivalentAbilities=(KeyName=StunLance, EquivalentAbilityName[0]=CXChameleonRupture, EquivalentAbilityName[1]=CXChameleonBleed ) 
+EquivalentAbilities=(KeyName=SpawnCXRipper, EquivalentAbilityName[0]=SpawnCXRipper, EquivalentAbilityName[1]=SpawnCXRipper2 )
+EquivalentAbilities=(KeyName=ScythingClaws, EquivalentAbilityName[0]=Shrieker_EMP, EquivalentAbilityName[1]=JuvQueenDiveBombM1, EquivalentAbilityName[2]=JuvQueenDiveBombM2, EquivalentAbilityName[3]=JuvQueenDiveBombM3 )
+EquivalentAbilities=(KeyName=Bind, EquivalentAbilityName[0]=CXRipperNeedleAttack )
+EquivalentAbilities=(KeyName=AlienRulerCallForEscape, EquivalentAbilityName[0]=HiveQueenCallForEscape )
+EquivalentAbilities=(KeyName=SwarmerHeal, EquivalentAbilityName[0]=CXSwarmerHealM1, EquivalentAbilityName[1]=CXSwarmerHealM2, EquivalentAbilityName[2]=CXSwarmerHealM3)
+EquivalentAbilities=(KeyName=HiveQueenSpit, EquivalentAbilityName[0]=JuvQueenSpit )


;DRONE
+Behaviors=(BehaviorName="CXDrone::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobExecutioner, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXDroneRedAlert, Child[5]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXDroneRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXDroneRedAbilitySelector)
+Behaviors=(BehaviorName=CXDroneRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXDroneRedFirstAction, Child[3]=CXDroneRedLastAction) 
+Behaviors=(BehaviorName=CXDroneRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXDroneRedFirstActionSelector)
+Behaviors=(BehaviorName=CXDroneRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TrySpawnCXRipper, \\
	Child[1]=TryAttackOrScamper, \\
	Child[2]=DoIfFlankedMove)

+Behaviors=(BehaviorName=CXDroneRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXDroneRedLastActionSelector)
+Behaviors=(BehaviorName=CXDroneRedLastActionSelector, NodeType=Selector, \\
	 Child[0]=TryAttackOrScamper2, \\
	 Child[1]=HuntEnemyUnsafe, \\
	 Child[2]=SelectMove_JobOrFlanking)


+Behaviors=(BehaviorName=ScamperRoot_CXDrone, NodeType=Selector, \\
    Child[0]=TryBurrowOrScamperOption, \\
	Child[1]=CounterBeaglerushManeuver, \\
	Child[2]=MoveFlankingUnsafe, \\
	Child[3]=MoveNoCoverUnsafe, \\
	Child[4]=SkipMove)

+Behaviors=(BehaviorName=TryBurrowOrScamperOption, NodeType=RandSelector, Child[0]=TryTeleportDefensive, Param[0]=60, Child[1]=MoveFlankingUnsafe, Param[1]=20, Child[2]=FallBackWithLoS, Param[2]=20 )
+Behaviors=(BehaviorName=TryAttackOrScamper, NodeType=RandSelector, Child[0]=TryMelee66, Param[0]=60, Child[1]=TryTeleportDefensive, Param[1]=40 )
+Behaviors=(BehaviorName=TryAttackOrScamper2, NodeType=RandSelector, Child[0]=TryMelee66, Param[0]=50, Child[1]=FallBackWithLoS, Param[1]=50 )

+Behaviors=(BehaviorName=DroneFound, NodeType=RandSelector, Child[0]=ChryssalidBurrowedAttack, Param[0]=25, Child[1]=FallBackWithLoS, Param[1]=40, Child[2]=SkipMove, Param[2]=35 ) 


;CHAMELEON
+Behaviors=(BehaviorName="CXChameleon::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXChameleonRedAlert, Child[5]=ChryssalidYellowAlert) 
+Behaviors=(BehaviorName=CXChameleonRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXChameleonRedAbilitySelector)
+Behaviors=(BehaviorName=CXChameleonRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXChameleonRedFirstAction, Child[3]=CXChameleonRedLastAction) 
+Behaviors=(BehaviorName=CXChameleonRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXChameleonRedFirstActionSelector)
+Behaviors=(BehaviorName=CXChameleonRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryTeleportDefensive, \\
	Child[1]=TryThisOrThat, \\
	Child[2]=DoIfFlankedMove)

+Behaviors=(BehaviorName=CXChameleonRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXChameleonRedLastActionSelector)
+Behaviors=(BehaviorName=CXChameleonRedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryThisOrThat, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=ScamperRoot_CXChameleon, NodeType=Selector, \\
    Child[0]=TryVanishOrScamperOption, \\
	Child[1]=CounterBeaglerushManeuver, \\
	Child[2]=MoveStandardWithLoSUnsafe, \\
	Child[3]=MoveNoCoverUnsafe, \\
	Child[4]=SkipMove)

;CHAMELEON2
+Behaviors=(BehaviorName="CXChameleon2::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXChameleon2RedAlert, Child[5]=ChryssalidYellowAlert) 
+Behaviors=(BehaviorName=CXChameleon2RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXChameleon2RedAbilitySelector)
+Behaviors=(BehaviorName=CXChameleon2RedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXChameleon2RedFirstAction, Child[3]=CXChameleon2RedLastAction) 
+Behaviors=(BehaviorName=CXChameleon2RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXChameleon2RedFirstActionSelector)
+Behaviors=(BehaviorName=CXChameleon2RedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryTeleportDefensive, \\
	Child[1]=TryThisOrThat2, \\
	Child[2]=DoIfFlankedMove)

+Behaviors=(BehaviorName=CXChameleon2RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXChameleon2RedLastActionSelector)
+Behaviors=(BehaviorName=CXChameleon2RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryThisOrThat2, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=TryThisOrThat, NodeType=RandSelector, Child[0]=TryStandardMelee, Param[0]=25, Child[1]=TryStunLance, Param[1]=25, Child[2]=TrySpringTheTrap, Param[2]=20, Child[3]=FallBackWithLoS, Param[3]=30 )

+Behaviors=(BehaviorName=TryThisOrThat2, NodeType=RandSelector, Child[0]=TryStandardMelee, Param[0]=25, Child[1]=TryStunLance, Param[1]=25, Child[2]=TrySpringTheTrap2, Param[2]=20, Child[3]=FallBackWithLoS, Param[3]=30 )

+Behaviors=(BehaviorName=TryVanishOrScamperOption, NodeType=RandSelector, Child[0]=TryTeleportDefensive, Param[0]=60, Child[1]=MoveFlankingUnsafe, Param[1]=20, Child[2]=FallBackWithLoS, Param[2]=20 )

+Behaviors=(BehaviorName=FleetOfClaw, NodeType=RandSelector, Child[0]=MoveFlankingUnsafe, Param[0]=33, Child[1]=MoveStandardWithLoSUnsafe, Param[1]=33, Child[2]=FallBackWithLoS, Param[2]=33 )

+Behaviors=(BehaviorName=ChameleonFound, NodeType=RandSelector, Child[0]=TryStandardMelee, Param[0]=10, Child[1]=FallBackWithLoS, Param[1]=45, Child[2]=SkipMove, Param[2]=45 )

;RIPPER
+Behaviors=(BehaviorName="CXRipper::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXRipperRedAlert, Child[5]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXRipperRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXRipperRedAbilitySelector)
+Behaviors=(BehaviorName=CXRipperRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXRipperRedFirstAction, Child[3]=CXRipperRedLastAction) 
+Behaviors=(BehaviorName=CXRipperRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXRipperRedFirstActionSelector)
+Behaviors=(BehaviorName=CXRipperRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TrySpawnCXRipper, \\
	Child[1]=TryBind, \\
	Child[2]=TryMelee66, \\
	Child[3]=DoIfFlankedMove)

+Behaviors=(BehaviorName=CXRipperRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXRipperRedLastActionSelector)
+Behaviors=(BehaviorName=CXRipperRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryMelee66, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=ScamperRoot_CXRipper, NodeType=Selector, \\
    Child[0]=TryRipperFallbackOrScamperOption, \\
	Child[1]=CounterBeaglerushManeuver, \\
	Child[2]=MoveFlankingUnsafe, \\
	Child[3]=MoveNoCoverUnsafe, \\
	Child[4]=SkipMove)

+Behaviors=(BehaviorName=TryRipperFallbackOrScamperOption, NodeType=RandSelector, Child[0]=ChryssalidScamperRoot, Param[0]=50, Child[1]=FallBackUnsafe, Param[1]=50 )


;QUEEN
+Behaviors=(BehaviorName="CXQueen::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXQueenRedAlert, Child[5]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXQueenRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXQueenRedAbilitySelector)
+Behaviors=(BehaviorName=CXQueenRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=CXQueenRedFirstAction, Child[2]=CXQueenRedSecondAction, Child[3]=CXQueenRedLastAction) 

+Behaviors=(BehaviorName=CXQueenRedFirstAction, NodeType=Sequence, Child[0]=HasThreeActionPoints, Child[1]=CXQueenFirstActionSelector)
+Behaviors=(BehaviorName=CXQueenFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryCXQueenStuff, \\
	Child[1]=TryMelee66, \\
	Child[2]=HuntEnemyUnsafe, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=CXQueenRedSecondAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXQueenSecondActionSelector)
+Behaviors=(BehaviorName=CXQueenSecondActionSelector, NodeType=Selector, \\
    Child[0]=RulerEscape, \\
    Child[1]=TryCXQueenStuff, \\
	Child[2]=TryMelee66, \\
	Child[3]=HuntEnemyUnsafe, \\
	Child[4]=DoIfFlankedMove, \\
	Child[5]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=CXQueenRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXQueenLastActionSelector)
+Behaviors=(BehaviorName=CXQueenLastActionSelector, NodeType=Selector, \\
    Child[0]=RulerEscape, \\
    Child[1]=TryCXQueenStuff, \\
	Child[2]=HuntEnemyUnsafe, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=TryCXQueenStuff, NodeType=RandSelector, Child[0]=TryCXQueenStuffHelp, Param[0]=50, Child[1]=TryCXQueenStuffOther, Param[1]=50)
+Behaviors=(BehaviorName=TryCXQueenStuffHelp, NodeType=RandSelector, Child[0]=TryCallCXDrone, Param[0]=25, Child[1]=TryCallCXInfector, Param[1]=25, Child[2]=TryCallTheHive, Param[2]=25, Child[3]=TryCallSwarmers, Param[3]=25)
+Behaviors=(BehaviorName=TryCXQueenStuffOther, NodeType=RandSelector, Child[0]=TryCXQueenDomination, Param[0]=40, Child[1]=TryHiveQueenSpit, Param[1]=30, Child[2]=TryMassiveHeal, Param[2]=30)

;SELECT for Hive Queen Spit (HIVE QUEEN)
+Behaviors=(BehaviorName=FindPotentialAoETargets-HiveQueenSpitProfile, NodeType=Action)

+Behaviors=(BehaviorName=SelectAoETarget-HiveQueenSpitProfile, NodeType=Action)

+Behaviors=(BehaviorName=TryHiveQueenSpit, NodeType=Sequence, Child[0]=IsAbilityAvailable-HiveQueenSpit, Child[1]=FindPotentialAoETargets-HiveQueenSpitProfile, Child[2]=SelectAoETarget-HiveQueenSpitProfile, Child[3]=SelectAbility-HiveQueenSpit)
+Behaviors=(BehaviorName=IsAbilityAvailable-HiveQueenSpit, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HiveQueenSpit, NodeType=Action)

;TryMassiveHeal
+Behaviors=(BehaviorName=TryMassiveHeal, NodeType=Sequence, Child[0]=IsAbilityAvailable-QueenMassiveHeal, Child[1]=SelectTargetForQueenMassiveHeal, Child[2]=SelectAbility-QueenMassiveHeal)
+Behaviors=(BehaviorName=IsAbilityAvailable-QueenMassiveHeal, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-QueenMassiveHeal, NodeType=Action)

;JUV QUEEN
+Behaviors=(BehaviorName="CXJuvQueen::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXJuvQueenRedAlert, Child[5]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXJuvQueenRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXJuvQueenRedAbilitySelector)
+Behaviors=(BehaviorName=CXJuvQueenRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXJuvQueenRedFirstAction, Child[3]=CXJuvQueenRedLastAction) 
+Behaviors=(BehaviorName=CXJuvQueenRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXJuvQueenRedFirstActionSelector)
+Behaviors=(BehaviorName=CXJuvQueenRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryCXJuvQueenStuff, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=CXJuvQueenRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXJuvQueenRedLastActionSelector)
+Behaviors=(BehaviorName=CXJuvQueenRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryCXJuvQueenStuff, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=DoIfFlankedMove, \\
	Child[3]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=TryCXJuvQueenStuff, NodeType=RandSelector, Child[0]=TryTheyKeepComing, Param[0]=20, Child[1]=TryCallCXDrone, Param[1]=20, Child[2]=TryCallCXInfector, Param[2]=20, Child[3]=TryMelee66, Param[3]=20, Child[4]=TryHiveQueenSpit, Param[4]=30, Child[5]=TryScythingClaws, Param[5]=30 )


;WARRIOR
+Behaviors=(BehaviorName="CXWarrior::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXWarriorRedAlert, Child[5]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXWarriorRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXWarriorRedAbilitySelector)
+Behaviors=(BehaviorName=CXWarriorRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXWarriorRedFirstAction, Child[3]=CXWarriorRedLastAction) 
+Behaviors=(BehaviorName=CXWarriorRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXWarriorRedFirstActionSelector)
+Behaviors=(BehaviorName=CXWarriorRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryWarriorStuff, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=HuntEnemyUnsafe, \\
	Child[3]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=CXWarriorRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXWarriorRedLastActionSelector)
+Behaviors=(BehaviorName=CXWarriorRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryWarriorStuff, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=TryWarriorStuff, NodeType=RandSelector, Child[0]=TryTheyKeepComing, Param[0]=10, Child[1]=TryMelee66, Param[1]=40, Child[2]=AdrenalRushBranch, Param[2]=20, Child[3]=TrySpawnCXSpawnPit, Param[3]=15, Child[4]=HRSBranch, Param[4]=15 )
+Behaviors=(BehaviorName=TryCallOrScamperOption, NodeType=RandSelector, Child[0]=ChryssalidScamperRoot, Param[0]=30, Child[1]=MoveFlankingUnsafe, Param[1]=20, Child[2]=TryTheyKeepComing, Param[2]=20, Child[3]=TrySpawnCXSpawnPit, Param[3]=30 )

+Behaviors=(BehaviorName=ScamperRoot_CXWarrior, NodeType=Selector, \\
    Child[0]=TryCallOrScamperOption, \\
	Child[1]=CounterBeaglerushManeuver, \\
	Child[2]=MoveFlankingUnsafe, \\
	Child[3]=MoveNoCoverUnsafe, \\
	Child[4]=SkipMove)

;***Adrenal Rush***
+Behaviors=(BehaviorName=AdrenalRushBranch, NodeType=Sequence, Child[0]=IsAbilityReady-AdrenalRush, Child[1]=IsAbilityAvailable-AdrenalRush, Child[2]=IsMultipleAlliesVisible, Child[3]=SelectAbility-AdrenalRush)
	
+Behaviors=(BehaviorName=IsMultipleAlliesVisible, NodeType=StatCondition, Param[0]=VisibleAllyCount, Param[1]=">=", Param[2]=2)
+Behaviors=(BehaviorName=IsAbilityReady-AdrenalRush, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-AdrenalRush, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AdrenalRush, NodeType=Action)

;***Hyper Reactive Senses***
+Behaviors=(BehaviorName=HRSBranch, NodeType=Sequence, Child[0]=IsAbilityReady-HyperReactiveSenses, Child[1]=IsAbilityAvailable-HyperReactiveSenses, Child[2]=SelectAbility-HyperReactiveSenses)
	
+Behaviors=(BehaviorName=IsAbilityReady-HyperReactiveSenses, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-HyperReactiveSenses, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-HyperReactiveSenses, NodeType=Action)


;HIVE GUARD
+Behaviors=(BehaviorName="CXHiveGuard::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXHiveGuardRedAlert, Child[5]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXHiveGuardRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXHiveGuardRedAbilitySelector)
+Behaviors=(BehaviorName=CXHiveGuardRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXHiveGuardRedFirstAction, Child[3]=CXHiveGuardRedLastAction) 
+Behaviors=(BehaviorName=CXHiveGuardRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXHiveGuardRedFirstActionSelector)
+Behaviors=(BehaviorName=CXHiveGuardRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryHiveGuardStuff, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking, \\
	Child[3]=DoIfFlankedMove)

+Behaviors=(BehaviorName=CXHiveGuardRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXHiveGuardRedLastActionSelector)
+Behaviors=(BehaviorName=CXHiveGuardRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryHiveGuardStuff, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=TryHiveGuardStuff, NodeType=RandSelector, Child[0]=TryGuardAcidBlob, Param[0]=60, Child[1]=TryStandardMelee, Param[1]=40 )

;SELECT for Acid Blob (Hive Guard)
+Behaviors=(BehaviorName=FindPotentialAoETargets-GuardAcidBlobProfile, NodeType=Action)

+Behaviors=(BehaviorName=SelectAoETarget-GuardAcidBlobProfile, NodeType=Action)

+Behaviors=(BehaviorName=TryGuardAcidBlob, NodeType=Sequence, Child[0]=IsAbilityAvailable-GuardAcidBlob, Child[1]=FindPotentialAoETargets-GuardAcidBlobProfile, Child[2]=SelectAoETarget-GuardAcidBlobProfile, Child[3]=SelectAbility-GuardAcidBlob)
+Behaviors=(BehaviorName=IsAbilityAvailable-GuardAcidBlob, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-GuardAcidBlob, NodeType=Action)

;SHRIEKER
+Behaviors=(BehaviorName="CXShrieker::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXShriekerRedAlert, Child[5]=ChryssalidYellowAlert) 
+Behaviors=(BehaviorName=CXShriekerRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXShriekerRedAbilitySelector)
+Behaviors=(BehaviorName=CXShriekerRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXShriekerRedFirstAction, Child[3]=CXShriekerRedLastAction) 
+Behaviors=(BehaviorName=CXShriekerRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXShriekerRedFirstActionSelector)
+Behaviors=(BehaviorName=CXShriekerRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryThisOrThatShrieker, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=DoIfFlankedMove)

+Behaviors=(BehaviorName=CXShriekerRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXShriekerRedLastActionSelector)
+Behaviors=(BehaviorName=CXShriekerRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryThisOrThatShrieker, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=TryThisOrThatShrieker, NodeType=RandSelector, Child[0]=TryStandardMelee, Param[0]=50, Child[1]=TryScythingClaws, Param[1]=40, Child[2]=TryCallCXDrone, Param[2]=10 )

;BROOD MOTHER
+Behaviors=(BehaviorName="CXBroodMother::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXBroodMotherRedAlert, Child[5]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXBroodMotherRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXBroodMotherRedAbilitySelector)
+Behaviors=(BehaviorName=CXBroodMotherRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=MimicBeaconBehavior, Child[2]=CXBroodMotherRedFirstAction, Child[3]=CXBroodMotherRedLastAction) 
+Behaviors=(BehaviorName=CXBroodMotherRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXBroodMotherRedFirstActionSelector)
+Behaviors=(BehaviorName=CXBroodMotherRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryChrysBMStuff, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=CXBroodMotherRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXBroodMotherRedLastActionSelector)
+Behaviors=(BehaviorName=CXBroodMotherRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryChrysBMStuff, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=TryChrysBMStuff, NodeType=RandSelector, Child[0]=TryBreedRippers, Param[0]=40, Child[1]=TryMelee66, Param[1]=25, Child[2]=TryRunAndBurrow33, Param[2]=15, Child[3]=TryGetOverHere, Param[3]=30)


;INFECTOR
+Behaviors=(BehaviorName="CXInfector::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobExecutioner, Child[2]=TryJobChargerUnsafe, Child[3]=ChryssalidGreenAlert, Child[4]=CXInfectorRedAlert, Child[5]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXInfectorRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXInfectorRedAbilitySelector)
+Behaviors=(BehaviorName=CXInfectorRedAbilitySelector, NodeType=Selector, Child[0]=TryJobUnsafe, Child[1]=CXInfectorRedFirstAction, Child[2]=CXInfectorRedLastAction) 
+Behaviors=(BehaviorName=CXInfectorRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXInfectorRedFirstActionSelector)
+Behaviors=(BehaviorName=CXInfectorRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryStandardMelee, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=CXInfectorRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXInfectorRedLastActionSelector)
+Behaviors=(BehaviorName=CXInfectorRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryStandardMelee, \\
	Child[1]=HuntEnemyUnsafe, \\
	Child[2]=SelectMove_JobOrFlanking)

+Behaviors=(BehaviorName=ScamperRoot_CXInfector, NodeType=Selector, \\
    Child[0]=TryInfectorCivilanOrScamperOption, \\
	Child[1]=CounterBeaglerushManeuver, \\
	Child[2]=MoveFlankingUnsafe, \\
	Child[3]=MoveNoCoverUnsafe, \\
	Child[4]=SkipMove)

+Behaviors=(BehaviorName=TryInfectorCivilanOrScamperOption, NodeType=RandSelector, Child[0]=MeleeAttackNearestCivilian, Param[0]=50, Child[1]=ChryssalidScamperRoot, Param[1]=50)

;SWARMER
+Behaviors=(BehaviorName="CXSwarmer::CharacterRoot", NodeType=Selector, Child[0]=ChryssalidHeatSeekProtocol, Child[1]=TryJobTerrorist, Child[2]=ChryssalidGreenAlert, Child[3]=CXSwarmerRedAlert, Child[4]=ChryssalidYellowAlert)
+Behaviors=(BehaviorName=CXSwarmerRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=CXSwarmerRedAbilitySelector)
+Behaviors=(BehaviorName=CXSwarmerRedAbilitySelector, NodeType=Selector, Child[0]=CXSwarmerRedFirstAction, Child[1]=CXSwarmerRedLastAction)

+Behaviors=(BehaviorName=CXSwarmerRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=CXSwarmerFirstActionSelector)
+Behaviors=(BehaviorName=CXSwarmerFirstActionSelector, NodeType=Selector, \\
	Child[0]=TrySwarmerStuff, \\
    Child[1]=SelectMoveStandard)

+Behaviors=(BehaviorName=CXSwarmerRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=CXSwarmerRedLastActionSelector)
+Behaviors=(BehaviorName=CXSwarmerRedLastActionSelector, NodeType=Selector,\\
    Child[0]=TrySwarmerStuff, \\
    Child[1]=SelectMoveStandard)

+Behaviors=(BehaviorName=TrySwarmerStuff, NodeType=RandSelector, Child[0]=TrySwarmerSpit, Param[0]=50, Child[1]=TrySwarmerHeal, Param[1]=50)


;SELECT for SWARMER Spit
+Behaviors=(BehaviorName=FindPotentialAoETargets-SwarmerSpitProfile, NodeType=Action)

+Behaviors=(BehaviorName=SelectAoETarget-SwarmerSpitProfile, NodeType=Action)

+Behaviors=(BehaviorName=TrySwarmerSpit, NodeType=Sequence, Child[0]=IsAbilityAvailable-CXSwarmerSpit, Child[1]=FindPotentialAoETargets-SwarmerSpitProfile, Child[2]=SelectAoETarget-SwarmerSpitProfile, Child[3]=SelectAbility-CXSwarmerSpit)
+Behaviors=(BehaviorName=IsAbilityAvailable-CXSwarmerSpit, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CXSwarmerSpit, NodeType=Action)

;Targeting for Swarmer Heal
+Behaviors=(BehaviorName=HasValidTarget-SwarmerHeal, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-SwarmerHeal, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-SwarmerHeal, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SwarmerHeal, NodeType=Action)

+Behaviors=(BehaviorName=SelectTargetForSwarmerHeal, NodeType=Sequence, Child[0]=SetTargetStack-SwarmerHeal, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-SwarmerHeal)

;TrySwarmerHealOnLowHP
+Behaviors=(BehaviorName=HasHalfHP, NodeType=TargetStatCondition, Param[0]=eStat_HP, Param[1]="<=", Param[2]="50%")

+Behaviors=(BehaviorName=TrySwarmerHealOnLowHP, NodeType=Sequence, Child[0]=IsAbilityAvailable-SwarmerHeal, Child[1]=SelectTargetForSwarmerHeal, Child[2]=HasHalfHp, Child[3]=SelectAbility-SwarmerHeal)

;TrySoulmend
+Behaviors=(BehaviorName=IsWounded, NodeType=TargetStatCondition, Param[0]=eStat_Hp, Param[1]="<", Param[2]="100%")

+Behaviors=(BehaviorName=TrySwarmerHeal, NodeType=Sequence, Child[0]=IsAbilityAvailable-SwarmerHeal, Child[1]=SelectTargetForSwarmerHeal, Child[2]=IsWounded, Child[3]=SelectAbility-SwarmerHeal)


;CHRYS ZOMBIE
+Behaviors=(BehaviorName="ChrysZombie::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=ChrysZombie_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=ChrysZombie_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ChrysZombie_RedAbilitySelector)
+Behaviors=(BehaviorName=ChrysZombie_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=ChrysZombieRedFirstAction, Child[2]=ChrysZombieRedLastAction)
+Behaviors=(BehaviorName=ChrysZombieRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ChrysZombieRedFirstActionSelector)
+Behaviors=(BehaviorName=ChrysZombieRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryChrysZombieStuff, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=ChrysZombieRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=ChrysZombieRedLastActionSelector)
+Behaviors=(BehaviorName=ChrysZombieRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryChrysZombieStuff, \\
	Child[1]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=TryChrysZombieStuff, NodeType=RandSelector, Child[0]=TryStandardMelee, Param[0]=40, Child[1]=TryCXZombieGestation, Param[1]=40, Child[2]=TryCXZombieGestation2, Param[2]=20)

+Behaviors=(BehaviorName=IsAbilityAvailable-CXZombieGestation, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CXZombieGestation, NodeType=Action)

+Behaviors=(BehaviorName=TryCXZombieGestation, NodeType=Sequence, Child[0]=IsAbilityAvailable-CXZombieGestation, Child[1]=MultipleEnemiesVisible, Child[2]=SelectAbility-CXZombieGestation)

+Behaviors=(BehaviorName=IsAbilityAvailable-CXZombieGestation2, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CXZombieGestation2, NodeType=Action)

+Behaviors=(BehaviorName=TryCXZombieGestation2, NodeType=Sequence, Child[0]=IsAbilityAvailable-CXZombieGestation2, Child[1]=MultipleEnemiesVisible, Child[2]=SelectAbility-CXZombieGestation2)

;CHRYS HYBRID
+Behaviors=(BehaviorName="ChrysHybrid::CharacterRoot", NodeType=Selector, Child[0]=TryJobExecutioner, Child[1]=GenericGreenMovement, Child[2]=ChrysHybrid_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=ChrysHybrid_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=ChrysHybrid_RedAbilitySelector)
+Behaviors=(BehaviorName=ChrysHybrid_RedAbilitySelector, NodeType=Selector, Child[0]=ChrysHybridRedFirstAction, Child[1]=ChrysHybridRedLastAction)
+Behaviors=(BehaviorName=ChrysHybridRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=ChrysHybridRedFirstActionSelector)
+Behaviors=(BehaviorName=ChrysHybridRedFirstActionSelector, NodeType=Selector, \\
    Child[0]=TryHybridStuff, \\
	Child[1]=DoIfFlankedMove, \\
	Child[2]=HuntEnemyUnsafe)

+Behaviors=(BehaviorName=ChrysHybridRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=ChrysHybridRedLastActionSelector)
+Behaviors=(BehaviorName=ChrysHybridRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryHybridStuff, \\
	Child[1]=HuntEnemyUnsafe)


+Behaviors=(BehaviorName=TryHybridStuff, NodeType=RandSelector, Child[0]=TryMelee66, Param[0]=50, Child[1]=TryStandardMelee, Param[1]=50)


; SPAWN PIT
+Behaviors=(BehaviorName="CXSpawnPit::CharacterRoot", NodeType=Selector, Child[0]=CXSpawnPitBranch)
+Behaviors=(BehaviorName=CXSpawnPitBranch, NodeType=Sequence, Child[0]=IsCXSpawnPit, Child[1]=CXSpawnPitRoot)
+Behaviors=(BehaviorName=IsCXSpawnPit, NodeType=Selector, Child[0]=TemplateNameIs-CXSpawnPit)
+Behaviors=(BehaviorName=TemplateNameIs-CXSpawnPit, NodeType=Condition)

+Behaviors=(BehaviorName=CXSpawnPitRoot, NodeType=RandSelector, Child[0]=TrySpawnCXWarrior, Param[0]=30, Child[1]=TrySpawnCXDrone2, Param[1]=40, Child[2]=TrySpawnCXInfector2, Param[2]=20 )


;CALL THE HIVE
+Behaviors=(BehaviorName=TryCallTheHive, NodeType=Sequence, Child[0]=IsAbilityReady-CallTheHive, Child[1]=IsAbilityAvailable-CallTheHive, Child[2]=MultipleEnemiesVisible, Child[3]=SelectAbility-CallTheHive)
+Behaviors=(BehaviorName=IsAbilityReady-CallTheHive, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-CallTheHive, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CallTheHive, NodeType=Action)

;CALL SWARMERS
+Behaviors=(BehaviorName=TryCallSwarmers, NodeType=Sequence, Child[0]=IsAbilityReady-CallSwarmers, Child[1]=IsAbilityAvailable-CallSwarmers, Child[2]=MultipleEnemiesVisible, Child[3]=SelectAbility-CallSwarmers)
+Behaviors=(BehaviorName=IsAbilityReady-CallSwarmers, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-CallSwarmers, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CallSwarmers, NodeType=Action)

;QUEEN DOMINATION
;Targeting
+Behaviors=(BehaviorName=HasValidTarget-CXQueenDomination, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-CXQueenDomination, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-CXQueenDomination, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CXQueenDomination, NodeType=Action)

+Behaviors=(BehaviorName=SelectTargetForCXQueenDomination, NodeType=Sequence, Child[0]=SetTargetStack-CXQueenDomination, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-CXQueenDomination)

+Behaviors=(BehaviorName=TryCXQueenDomination, NodeType=Sequence, Child[0]=IsAbilityAvailable-CXQueenDomination, Child[1]=SelectTargetForCXQueenDomination, Child[2]=SelectAbility-CXQueenDomination)


;CALL DRONE
+Behaviors=(BehaviorName=TryCallCXDrone, NodeType=Sequence, Child[0]=IsAbilityAvailable-CallCXDrone, Child[1]=SelectAbility-CallCXDrone)
+Behaviors=(BehaviorName=IsAbilityAvailable-CallCXDrone, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CallCXDrone, NodeType=Action)

;CALL CHRYSSALID INFECTOR
+Behaviors=(BehaviorName=TryCallCXInfector, NodeType=Sequence, Child[0]=IsAbilityAvailable-CallCXInfector, Child[1]=SelectAbility-CallCXInfector)
+Behaviors=(BehaviorName=IsAbilityAvailable-CallCXInfector, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CallCXInfector, NodeType=Action)

;CALL CHRYSSALID INFECTOR/CHAMELEON (Spring The Trap)
+Behaviors=(BehaviorName=TrySpringTheTrap, NodeType=Sequence, Child[0]=IsAbilityAvailable-CXSpringTheTrap, Child[1]=SelectAbility-CXSpringTheTrap)
+Behaviors=(BehaviorName=IsAbilityAvailable-CXSpringTheTrap, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CXSpringTheTrap, NodeType=Action)

+Behaviors=(BehaviorName=TrySpringTheTrap2, NodeType=Sequence, Child[0]=IsAbilityAvailable-CXSpringTheTrap2, Child[1]=SelectAbility-CXSpringTheTrap2)
+Behaviors=(BehaviorName=IsAbilityAvailable-CXSpringTheTrap2, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-CXSpringTheTrap2, NodeType=Action)

;CALL RIPPERS
+Behaviors=(BehaviorName=TrySpawnCXRipper, NodeType=Sequence, Child[0]=IsAbilityReady-SpawnCXRipper, Child[1]=IsAbilityAvailable-SpawnCXRipper, Child[2]=MultipleEnemiesVisible, Child[3]=SelectAbility-SpawnCXRipper)
+Behaviors=(BehaviorName=IsAbilityReady-SpawnCXRipper, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-SpawnCXRipper, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SpawnCXRipper, NodeType=Action)

;CALL GESTATION PIT
+Behaviors=(BehaviorName=TrySpawnCXSpawnPit, NodeType=Sequence, Child[0]=IsAbilityReady-SpawnCXSpawnPit, Child[1]=IsAbilityAvailable-SpawnCXSpawnPit, Child[2]=MultipleEnemiesVisible, Child[3]=SelectAbility-SpawnCXSpawnPit)
+Behaviors=(BehaviorName=IsAbilityReady-SpawnCXSpawnPit, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-SpawnCXSpawnPit, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SpawnCXSpawnPit, NodeType=Action)

;THEY KEEP COMING
+Behaviors=(BehaviorName=TryTheyKeepComing, NodeType=Sequence, Child[0]=IsAbilityReady-TheyKeepComing, Child[1]=IsAbilityAvailable-TheyKeepComing, Child[2]=MultipleEnemiesVisible, Child[3]=SelectAbility-TheyKeepComing)
+Behaviors=(BehaviorName=IsAbilityReady-TheyKeepComing, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-TheyKeepComing, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-TheyKeepComing , NodeType=Action)

;CALL WARRIOR (BY PIT)
+Behaviors=(BehaviorName=TrySpawnCXWarrior, NodeType=Sequence, Child[0]=IsAbilityAvailable-SpawnCXWarrior, Child[1]=SelectAbility-SpawnCXWarrior)
+Behaviors=(BehaviorName=IsAbilityAvailable-SpawnCXWarrior, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SpawnCXWarrior, NodeType=Action)

;CALL DRONE (BY PIT)
+Behaviors=(BehaviorName=TrySpawnCXDrone2, NodeType=Sequence, Child[0]=IsAbilityAvailable-SpawnCXDrone2, Child[1]=SelectAbility-SpawnCXDrone2)
+Behaviors=(BehaviorName=IsAbilityAvailable-SpawnCXDrone2, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SpawnCXDrone2, NodeType=Action)

;CALL INFECTOR (BY PIT)
+Behaviors=(BehaviorName=TrySpawnCXInfector2, NodeType=Sequence, Child[0]=IsAbilityAvailable-SpawnCXInfector2, Child[1]=SelectAbility-SpawnCXInfector2)
+Behaviors=(BehaviorName=IsAbilityAvailable-SpawnCXInfector2, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SpawnCXInfector2, NodeType=Action)

;BREED RIPPERS (BROOD MOTHER)
+Behaviors=(BehaviorName=TryBreedRippers, NodeType=Sequence, Child[0]=IsAbilityReady-BreedRippers, Child[1]=IsAbilityAvailable-BreedRippers, Child[2]=MultipleEnemiesVisible, Child[3]=SelectAbility-BreedRippers)
+Behaviors=(BehaviorName=IsAbilityReady-BreedRippers, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityAvailable-BreedRippers, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-BreedRippers, NodeType=Action)





















