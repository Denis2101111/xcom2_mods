[XComGame.X2AIBTBehaviorTree]
; Equivalent abilities
+EquivalentAbilities=(KeyName=PsiMindControl, EquivalentAbilityName[0]=MZBetrayal)

; Zombie Puppeteer
; They prefer not to use this on the Lost if there are other targets, but will target the Lost otherwise
+Behaviors=(BehaviorName=TryMZControlUndead, NodeType=Sequence, Child[0]=IsAbilityAvailable-MZControlUndead, Child[1]=SelectTargetForMZControlUndead, Child[2]=SelectAbility-MZControlUndead)
+Behaviors=(BehaviorName=IsAbilityAvailable-MZControlUndead, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-MZControlUndead, NodeType=Action)
+Behaviors=(BehaviorName=SelectTargetForMZControlUndead, NodeType=Sequence, Child[0]=SetTargetStack-MZControlUndead, Child[1]=EvaluatePotentialMZControlUndeadTarget, Child[2]=HasValidTarget-MZControlUndead)
+Behaviors=(BehaviorName=SetTargetStack-MZControlUndead, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-MZControlUndead, NodeType=Condition)

+Behaviors=(BehaviorName=EvaluatePotentialMZControlUndeadTarget, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScoreClosestIfInRange, Child[2]=AvoidBoundAndPanickedTargets, Child[3]=EncourageTargetNonLost, Child[4]=DiscourageTargetLost, Child[5]=UpdateBestTarget)
+Behaviors=(BehaviorName=DiscourageTargetLost, NodeType=Successor, Child[0]=ScoreIfLost)
+Behaviors=(BehaviorName=EncourageTargetNonLost, NodeType=Successor, Child[0]=ScoreIfNotLost)
+Behaviors=(BehaviorName=ScoreIfLost, NodeType=Sequence, Child[0]=IsTargetTeam-eTeam_TheLost, Child[1]=AddToTargetScore_1)
+Behaviors=(BehaviorName=ScoreIfNotLost, NodeType=Sequence, Child[0]=TargetIsNotLost, Child[1]=AddToTargetScore_50)

; Corpore Sano
+Behaviors=(BehaviorName=TryMZPsiHeal, NodeType=Sequence, Child[0]=IsAbilityReady-MZPsiHeal, Child[1]=SelectTargetForMZPsiHeal, Child[2]=SelectAbility-MZPsiHeal)
+Behaviors=(BehaviorName=SelectTargetForMZPsiHeal, NodeType=Sequence, Child[0]=SetTargetStack-MZPsiHeal, Child[1]=SelectTargetForHeal, Child[2]=HasValidTarget-MZPsiHeal)
+Behaviors=(BehaviorName=SelectTargetForHeal, NodeType=Sequence,  Child[0]=SetNextTarget, Child[1]=ScoreBestTargetForHeal, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=ScoreBestTargetForHeal, NodeType=Sequence, Child[0]=TargetIsAlly, Child[1]=TargetWounded, Child[2]=EvaluateForHeal)
+Behaviors=(BehaviorName=EvaluateForHeal, NodeType=Sequence, Child[0]=ScoreByHP)
+Behaviors=(BehaviorName=IsAbilityReady-MZPsiHeal, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-MZPsiHeal, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-MZPsiHeal, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-MZPsiHeal, NodeType=Condition)

; Solace (LWOTC)
; They should prefer to use this on targets with the highest base max HP
+Behaviors=(BehaviorName=TrySolace_LW, NodeType=Sequence, Child[0]=IsAbilityReady-Solace_LW, Child[1]=SelectTargetForSolace_LW, Child[2]=SelectAbility-Solace_LW)
+Behaviors=(BehaviorName=SelectTargetForSolace_LW, NodeType=Sequence, Child[0]=SetTargetStack-Solace_LW, Child[1]=TargetIsAlly, Child[2]=TargetScoreByScaledMaxStat-eStat_HP, Child[3]=HasValidTarget-Solace_LW)
+Behaviors=(BehaviorName=IsAbilityReady-Solace_LW, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Solace_LW, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Solace_LW, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Solace_LW, NodeType=Condition)

; AI tree
+Behaviors=(BehaviorName="SectoidAbjurer::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=SectoidAbjurerRedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=SectoidAbjurerRedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=SectoidAbjurerRedAbilitySelector)
+Behaviors=(BehaviorName=SectoidAbjurerRedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=SectoidAbjurerRedFirstAction, Child[2]=SectoidAbjurerRedLastAction)

+Behaviors=(BehaviorName=SectoidAbjurerRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=SectoidAbjurerRedFirstActionSelector)
+Behaviors=(BehaviorName=SectoidAbjurerRedFirstActionSelector, NodeType=Selector, \\
	  Child[0]=DoIfFlankedMove,\\
	  Child[1]=TryMZPsiHeal,\\
	  Child[2]=TrySolace_LW,\\
	  Child[3]=TryMZControlUndead, \\
	  Child[4]=TryGrenade, \\
      Child[5]=TryPsiMindControl,\\
	  Child[6]=TryHighPriorityShot,\\
	  Child[7]=SelectMove_JobOrDefensive,\\
	  Child[8]=TryShootOrReloadOrOverwatch,\\
	  Child[9]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=SectoidAbjurerRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=SectoidAbjurerRedLastActionSelector)
+Behaviors=(BehaviorName=SectoidAbjurerRedLastActionSelector, NodeType=Selector, \\
	  Child[0]=TryPsiMindControl,\\
	  Child[1]=TryMZControlUndead, \\
	  Child[2]=TrySolace_LW,\\
	  Child[3]=TryGrenade,\\
	  Child[4]=TryMZPsiHeal,\\
	  Child[5]=TryHighPriorityShot,\\
	  Child[6]=TryShootOrReloadOrOverwatch,\\
	  Child[7]=HuntEnemyWithCover,\\
	  Child[8]=SelectMove_JobOrDefensive)