;---------------------------------------------------------------------------------------
;  FILE:    XComAI.ini
;  AUTHOR:  Ashlynne  --  9/15/2017
;				  Updated 12/31/2020
;				  Updated 3/6/2022
;---------------------------------------------------------------------------------------

[XComGame.X2AIBTBehaviorTree]

;EQUIVALENT ABILITIES
+EquivalentAbilities=(KeyName=Ability_AshDeathsEmbrace, EquivalentAbilityName[0]=Ability_AshDeathsEmbraceM1, EquivalentAbilityName[1]=Ability_AshDeathsEmbraceM2, EquivalentAbilityName[2]=Ability_AshDeathsEmbraceM3)
+EquivalentAbilities=(KeyName=Ability_AshZombieSlash, EquivalentAbilityName[0]=Ability_AshZombieSlashM1, EquivalentAbilityName[1]=Ability_AshZombieSlashM2, EquivalentAbilityName[2]=Ability_AshZombieSlashM3)
+EquivalentAbilities=(KeyName=Ability_AshResilience, EquivalentAbilityName[0]=Ability_AshResilienceM1, EquivalentAbilityName[1]=Ability_AshResilienceM2, EquivalentAbilityName[2]=Ability_AshResilienceM3)
+EquivalentAbilities=(KeyName=Ability_AshBurnTheWitch, EquivalentAbilityName[0]=Ability_AshBurnTheWitchM1, EquivalentAbilityName[1]=Ability_AshBurnTheWitchM2)

;---------------------------------------------------------------------------------------------
;	ADVENT WARLOCK
;---------------------------------------------------------------------------------------------

;SCAMPER ROOT
+Behaviors=(BehaviorName="AshAdvWarlock::ScamperRoot", NodeType=Selector, \\
	Child[0]=CounterBeaglerushManeuver, \\
	Child[1]=MoveDefensiveWithLoSUnsafe, \\
	Child[2]=MoveDefensiveUnsafe, \\
	Child[3]=SkipMove)

;ALERT ROOT
+Behaviors=(BehaviorName="AshAdvWarlock::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AshAdvWarlock_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AshAdvWarlock_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AshAdvWarlock_RedAbilitySelector)
+Behaviors=(BehaviorName=AshAdvWarlock_RedAbilitySelector, NodeType=Selector, \\
	Child[0]=AshTryWanderingCurse, \\
	Child[1]=AshWarlockPriorityMove, \\
	Child[2]=AshWarlockPriorityAction, \\
	Child[3]=MimicBeaconBehavior, \\
	Child[4]=AshAdvWarlock_RedFirstAction, \\
	Child[5]=AshAdvWarlock_RedLastAction)

;PRIORITY MOVE
+Behaviors=(BehaviorName=AshWarlockPriorityMove, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AshWarlockPriorityMoveSelector)
+Behaviors=(BehaviorName=AshWarlockPriorityMoveSelector, NodeType=Selector, \\
	Child[0]=AshTryMoveThenBurnTheWitch, \\
	Child[1]=AshTryMoveThenDeathsEmbrace)

;PRIORITY ACTION
+Behaviors=(BehaviorName=AshWarlockPriorityAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AshWarlockPriorityActionSelector)
+Behaviors=(BehaviorName=AshWarlockPriorityActionSelector, NodeType=Selector, \\
	Child[0]=AshTryBurnTheWitch, \\
	Child[1]=AshTryDeathsEmbrace)

;FIRST ACTION
+Behaviors=(BehaviorName=AshAdvWarlock_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AshAdvWarlock_RedFirstActionSelector)
+Behaviors=(BehaviorName=AshAdvWarlock_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=AshTryMoveThenPsionicAttack, \\
	Child[1]=AshTryMoveThenShootTheWitch, \\
	Child[2]=TryMoveThenGrenade, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=SelectMove_JobOrDefensive, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=HuntEnemyWithCover)
	  
;SECOND ACTION
+Behaviors=(BehaviorName=AshAdvWarlock_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AshAdvWarlock_RedLastActionSelector)
+Behaviors=(BehaviorName=AshAdvWarlock_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=AshTryPsionicAttack, \\
	Child[1]=AshTryShootTheWitch, \\
	Child[2]=TryGrenade, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SelectMove_JobOrDefensive)

;BURN THE WITCH - Aggressively move to burn a PsiOperative in line of sight.
+Behaviors=(BehaviorName=AshTryMoveThenBurnTheWitch, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-Ability_AshBurnTheWitch, Child[2]=AshSelectTargetForBurnTheWitch, Child[3]=AshMoveStandardIfFirstAction_BurnTheWitch)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_BurnTheWitch, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindBurnTheWitchDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindBurnTheWitchDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Ability_AshBurnTheWitch, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Aggressive)

+Behaviors=(BehaviorName=AshTryBurnTheWitch, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshBurnTheWitch, Child[1]=AshSelectTargetForBurnTheWitch, Child[2]=SelectAbility-Ability_AshBurnTheWitch)
+Behaviors=(BehaviorName=AshSelectTargetForBurnTheWitch, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshBurnTheWitch, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Ability_AshBurnTheWitch)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshBurnTheWitch, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshBurnTheWitch, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshBurnTheWitch, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshBurnTheWitch, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshBurnTheWitch, NodeType=Action)

;DEATHLY MARIONETTE - Kill a legal ADVENT unit preferring the most wounded one to create a Deathly Marionette in its place.
+Behaviors=(BehaviorName=AshTryMoveThenDeathsEmbrace, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-Ability_AshDeathsEmbrace, Child[2]=AshSelectTargetForDeathsEmbrace, Child[3]=AshMoveStandardIfFirstAction_DeathsEmbrace)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_DeathsEmbrace, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindDeathsEmbraceDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindDeathsEmbraceDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Ability_AshDeathsEmbrace, Child[2]=FindRestrictedDestination-MWP_Defensive)

+Behaviors=(BehaviorName=AshTryDeathsEmbrace, NodeType=Sequence, Child[0]=IsAbilityReady-Ability_AshDeathsEmbrace, Child[1]=AshSelectTargetForDeathsEmbrace, Child[2]=SelectAbility-Ability_AshDeathsEmbrace)
+Behaviors=(BehaviorName=AshSelectTargetForDeathsEmbrace, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshDeathsEmbrace, Child[1]=AshScoreAllTargetsForDeathsEmbrace, Child[2]=HasValidTarget-Ability_AshDeathsEmbrace)
+Behaviors=(BehaviorName=AshScoreAllTargetsForDeathsEmbrace, NodeType=RepeatUntilFail, Child[0]=AshIterateTargetsForDeathsEmbrace)
+Behaviors=(BehaviorName=AshIterateTargetsForDeathsEmbrace, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=AshGetScoreForCurrentTarget, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=AshGetScoreForCurrentTarget, NodeType=Successor, Child[0]=AshScoreCurrentTargetForDeathsEmbrace)
+Behaviors=(BehaviorName=AshScoreCurrentTargetForDeathsEmbrace, NodeType=Sequence, Child[0]=AshScoreByHealth)
+Behaviors=(BehaviorName=AshScoreByHealth, NodeType=Selector, Child[0]=AshScoreIfCurrentTarget_HasLowHP, Child[1]=AshScoreIfCurrentTarget_IsWounded, Child[2]=AshScoreIfCurrentTarget_HasMaxHP)

+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_HasMaxHP, NodeType=Sequence, Child[0]=TargetHasMaxHP, Child[1]=AddToTargetScore_10)	;HP >= 100%
+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_IsWounded, NodeType=Sequence, Child[0]=TargetWounded, Child[1]=AddToTargetScore_20)	;HP < 100%
+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_HasLowHP, NodeType=Sequence, Child[0]=TargetHasLowHP, Child[1]=AddToTargetScore_30)	;HP <= 40%			

+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshDeathsEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-Ability_AshDeathsEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshDeathsEmbrace, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshDeathsEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshDeathsEmbrace, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshDeathsEmbrace, NodeType=Action)

;PSIONIC ATTACK - Use Soulfire on a random target if wounded otherwise use Insanity preferring an XCom Soldier with a lower Will stat.
+Behaviors=(BehaviorName=AshTryMoveThenPsionicAttack, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-Soulfire, Child[2]=AshMoveStandardIfFirstAction_Soulfire, Child[3]=IsAbilityAvailable-Insanity, Child[4]=AshMoveStandardIfFirstAction_Insanity)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_Soulfire, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindSoulfireDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindSoulfireDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Soulfire, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Defensive)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_Insanity, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindInsanityDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindInsanityDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Insanity, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Defensive)

+Behaviors=(BehaviorName=AshTryPsionicAttack, NodeType=Selector, Child[0]=AshTrySoulfire, Child[1]=AshTryInsanity)

+Behaviors=(BehaviorName=AshTrySoulFire, NodeType=Sequence, Child[0]=IsAbilityAvailable-SoulFire, Child[1]=AshSelectTargetForSoulFire, Child[2]=HasWounds, Child[3]=SelectAbility-SoulFire)
+Behaviors=(BehaviorName=AshSelectTargetForSoulFire, NodeType=Sequence, Child[0]=SetTargetStack-SoulFire, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-SoulFire)
+Behaviors=(BehaviorName=IsAbilityAvailable-SoulFire, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SoulFire, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-SoulFire, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-SoulFire, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Soulfire, NodeType=Action)

+Behaviors=(BehaviorName=AshTryInsanity, NodeType=Sequence, Child[0]=IsAbilityAvailable-Insanity, Child[1]=AshSelectTargetForInsanity, Child[2]=SelectAbility-Insanity)
+Behaviors=(BehaviorName=AshSelectTargetForInsanity, NodeType=Sequence, Child[0]=SetTargetStack-Insanity, Child[1]=AshScoreAllTargetsForInsanity, Child[2]=HasValidTarget-Insanity)
+Behaviors=(BehaviorName=AshScoreAllTargetsForInsanity, NodeType=RepeatUntilFail, Child[0]=AshIterateTargetsForInsanity)
+Behaviors=(BehaviorName=AshIterateTargetsForInsanity, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=AshGetScoreForCurrentInsanityTarget, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=AshGetScoreForCurrentInsanityTarget, NodeType=Successor, Child[0]=AshScoreCurrentTargetForInsanity)
+Behaviors=(BehaviorName=AshScoreCurrentTargetForInsanity, NodeType=Sequence, Child[0]=AshScoreByWill, Child[1]=ScoreTargetOutIfCivilian, Child[2]=AvoidBoundAndPanickedTargets)
+Behaviors=(BehaviorName=AshScoreByWill, NodeType=Selector, Child[0]=AshScoreIfCurrentTarget_LowWill, Child[1]=AshScoreIfCurrentTarget_MediumWill, Child[2]=AshScoreIfCurrentTarget_HighWill, Child[3]=AddToTargetScore_0)

+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_HighWill, NodeType=Sequence, Child[0]=AshTargetHasHighWill, Child[1]=AddToTargetScore_1)
+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_MediumWill, NodeType=Sequence, Child[0]=AshTargetHasMediumWill, Child[1]=AddToTargetScore_30)
+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_LowWill, NodeType=Sequence, Child[0]=AshTargetHasLowWill, Child[1]=AddToTargetScore_100)
+Behaviors=(BehaviorName=AshTargetHasHighWill, NodeType=StatCondition, Param[0]=eStat_Will, Param[1]=">", Param[2]="45")
+Behaviors=(BehaviorName=AshTargetHasMediumWill, NodeType=StatCondition, Param[0]=eStat_Will, Param[1]="<=", Param[2]="45")
+Behaviors=(BehaviorName=AshTargetHasLowWill, NodeType=StatCondition, Param[0]=eStat_Will, Param[1]="<=", Param[2]="40")

+Behaviors=(BehaviorName=IsAbilityAvailable-Insanity, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Insanity, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Insanity, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Insanity, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Insanity, NodeType=Action)

;SHOOT THE WITCH
+Behaviors=(BehaviorName=AshTryMoveThenShootTheWitch, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshShootTheWitch, Child[1]=SafeToMove, Child[2]=IsAbilityAvailable-StandardShot, Child[3]=AshSelectWitchForShootTheWitch, Child[4]=AshMoveStandardIfFirstAction_ShootTheWitch)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_ShootTheWitch, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindShootTheWitchDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindShootTheWitchDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Ability_AshShootTheWitch, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Aggressive)
+Behaviors=(BehaviorName=AshTryShootTheWitch, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshShootTheWitch, Child[1]=AshSelectWitchForShootTheWitch, Child[2]=SelectAbility-Ability_AshShootTheWitch)
+Behaviors=(BehaviorName=AshSelectWitchForShootTheWitch, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshShootTheWitch, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Ability_AshShootTheWitch)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshShootTheWitch, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshShootTheWitch, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshShootTheWitch, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshShootTheWitch, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshShootTheWitch, NodeType=Action)

;---------------------------------------------------------------------------------------------
;	CURSED
;---------------------------------------------------------------------------------------------

;STUN LANCER
+Behaviors=(BehaviorName="AshCursedStunLancer::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AshCursedStunLancer_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AshCursedStunLancer_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AshCursedStunLancer_RedAbilitySelector)
+Behaviors=(BehaviorName=AshCursedStunLancer_RedAbilitySelector, NodeType=Selector, \\
	Child[0]=AshCursedPriorityMove, \\
	Child[1]=AshCursedPriorityAction, \\
	Child[2]=MimicBeaconBehavior, \\
	Child[3]=AdventSLFirstAction, \\
	Child[4]=AdventSLLastAction)
		
;TROOPER
+Behaviors=(BehaviorName="AshCursedTrooper::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AshCursedTrooper_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AshCursedTrooper_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AshCursedTrooper_RedAbilitySelector)
+Behaviors=(BehaviorName=AshCursedTrooper_RedAbilitySelector, NodeType=Selector, \\
	Child[0]=AshCursedPriorityMove, \\
	Child[1]=AshCursedPriorityAction, \\
	Child[2]=MimicBeaconBehavior, \\
	Child[3]=DarkEventPriorityMoveThenGrenade, \\
	Child[4]=AdventRedFirstAction, \\
	Child[5]=AdventRedLastAction)

;PRIORITY MOVE
+Behaviors=(BehaviorName=AshCursedPriorityMove, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AshCursedPriorityMoveSelector)
+Behaviors=(BehaviorName=AshCursedPriorityMoveSelector, NodeType=Selector, \\
	Child[0]=AshTryMoveThenCovenant)

;PRIORITY ACTION
+Behaviors=(BehaviorName=AshCursedPriorityAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AshCursedPriorityActionSelector)
+Behaviors=(BehaviorName=AshCursedPriorityActionSelector, NodeType=Selector, \\
	Child[0]=AshTryCovenant)

;COVENANT - Suicide to revive a dead ADVENT Warlock to full health and ability.
+Behaviors=(BehaviorName=AshTryMoveThenCovenant, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityReady-Ability_AshCovenant, Child[2]=AshSelectTargetForCovenant, Child[3]=AshMoveStandardIfFirstAction_Covenant)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_Covenant, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindCovenantDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindCovenantDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Ability_AshCovenant, Child[2]=FindRestrictedDestination-MWP_Fanatic)

+Behaviors=(BehaviorName=AshTryCovenant, NodeType=Sequence, Child[0]=IsAbilityReady-Ability_AshCovenant, Child[1]=AshSelectTargetForCovenant, Child[2]=SelectAbility-Ability_AshCovenant)
+Behaviors=(BehaviorName=AshSelectTargetForCovenant, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshCovenant, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-Ability_AshCovenant)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshCovenant, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-Ability_AshCovenant, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshCovenant, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshCovenant, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshCovenant, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshCovenant, NodeType=Action)

;---------------------------------------------------------------------------------------------
;	RISEN
;---------------------------------------------------------------------------------------------

;SCAMPER ROOT
+Behaviors=(BehaviorName="AshRisen::ScamperRoot", NodeType=Selector, \\
	Child[0]=AshTryWanderingCurse, \\
	Child[1]=SkipMove)
	
;ALERT ROOT
;+Behaviors=(BehaviorName="AshRisen::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AshRisen_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName="AshRisen::CharacterRoot", NodeType=Selector, Child[0]=AshRisenFirstAction, Child[1]=AshRisenLastAction)
+Behaviors=(BehaviorName=AshRisen_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AshRisen_RedAbilitySelector)
+Behaviors=(BehaviorName=AshRisen_RedAbilitySelector, NodeType=Selector, Child[0]=AshRisenFirstAction, Child[1]=AshRisenLastAction)

;RED FIRST ACTION
+Behaviors=(BehaviorName=AshRisenFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AshRisenFirstActionSelector)
+Behaviors=(BehaviorName=AshRisenFirstActionSelector, NodeType=Selector, \\
	Child[0]=AshTryMoveThenNightTerrors, \\
	Child[1]=AshTryMoveThenCovenant, \\
	Child[2]=AshTryWanderingCurse, \\
	Child[3]=AshTryZombieSlash, \\
	Child[4]=AshTryPsionicMiasma, \\
	Child[5]=AshTryResilience, \\
	Child[6]=GenericEnemyMeleeRootFANATIC)

;RED SECOND ACTION
+Behaviors=(BehaviorName=AshRisenLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AshRisenLastActionSelector)
+Behaviors=(BehaviorName=AshRisenLastActionSelector, NodeType=Selector, \\
	Child[0]=AshTryNightTerrors, \\
	Child[1]=AshTryCovenant, \\
	Child[2]=AshTryWanderingCurse, \\
	Child[3]=AshTryZombieSlash, \\
	Child[4]=GenericEnemyMeleeRootFANATIC)

;NIGHT TERRORS
+Behaviors=(BehaviorName=AshTryMoveThenNightTerrors, NodeType=Sequence, Child[0]=IsAbilityReady-Ability_AshNightTerrors, Child[1]=SafeToMove, Child[2]=AshSelectTargetForNightTerrors, Child[3]=AshMoveStandardIfFirstAction_NightTerrors)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_NightTerrors, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindNightTerrorsDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindNightTerrorsDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Ability_AshNightTerrors, Child[2]=FindRestrictedDestination-MWP_Fanatic)

+Behaviors=(BehaviorName=AshTryNightTerrors, NodeType=Sequence, Child[0]=IsAbilityReady-Ability_AshNightTerrors, Child[1]=AshSelectTargetForNightTerrors, Child[2]=SelectAbility-Ability_AshNightTerrors)
+Behaviors=(BehaviorName=AshSelectTargetForNightTerrors, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshNightTerrors, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Ability_AshNightTerrors)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshNightTerrors, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-Ability_AshNightTerrors, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshNightTerrors, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshNightTerrors, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshNightTerrors, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshNightTerrors, NodeType=Action)

;PSIONIC MIASMA
+Behaviors=(BehaviorName=AshTryPsionicMiasma, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshPsionicMiasma, Child[1]=SelectAbility-Ability_AshPsionicMiasma)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshPsionicMiasma, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshPsionicMiasma, NodeType=Action)

;RESILIENCE
+Behaviors=(BehaviorName=AshTryResilience, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshResilience, Child[1]=AshSelectTargetForResilience, Child[2]=SelectAbility-Ability_AshResilience)
+Behaviors=(BehaviorName=AshSelectTargetForResilience, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshResilience, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Ability_AshResilience)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshResilience, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshResilience, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshResilience, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshResilience, NodeType=Action)

;STUMBLING SLASH
+Behaviors=(BehaviorName=AshTryZombieSlash, NodeType=Sequence, Child[0]=IsAbilityReady-Ability_AshZombieSlash, Child[1]=ZombieSlashStepSelector)
+Behaviors=(BehaviorName=ZombieSlashStepSelector, NodeType=Selector, Child[0]=ZombieSlashAttack, Child[1]=MoveMeleeIfFirstAbilityFANATIC)
+Behaviors=(BehaviorName=ZombieSlashAttack, NodeType=Sequence, Child[0]=SelectTargetForZombieSlash, Child[1]=SelectAbility-Ability_AshZombieSlash)

+Behaviors=(BehaviorName=SelectTargetForZombieSlash, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshZombieSlash, Child[1]=SelectBestTargetForZombieSlash, Child[2]=HasValidTarget-Ability_AshZombieSlash)
+Behaviors=(BehaviorName=SelectBestTargetForZombieSlash, NodeType=RepeatUntilFail, Child[0]=TargetSelectIterationForZombieSlash)
+Behaviors=(BehaviorName=TargetSelectIterationForZombieSlash, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=EvaluateTargetForZombieSlash, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=EvaluateTargetForZombieSlash, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth_HighFirst, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreCivilian)

+Behaviors=(BehaviorName=IsAbilityReady-Ability_AshZombieSlash, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshZombieSlash, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshZombieSlash, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshZombieSlash, NodeType=Action)

;WANDERING CURSE
+Behaviors=(BehaviorName=AshTryWanderingCurse, NodeType=Sequence, Child[0]=IsAbilityReady-Ability_AshWanderingCurse, Child[1]=AshSelectTargetForWanderingCurse, Child[2]=SelectAbility-Ability_AshWanderingCurse)
+Behaviors=(BehaviorName=AshSelectTargetForWanderingCurse, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshWanderingCurse, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-Ability_AshWanderingCurse)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshWanderingCurse, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-Ability_AshWanderingCurse, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshWanderingCurse, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshWanderingCurse, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshWanderingCurse, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshWanderingCurse, NodeType=Action)

;---------------------------------------------------------------------------------------------
;	Add Fanatic units to the Fallback Exclusion List so they never flee.
;---------------------------------------------------------------------------------------------
[XComGame.XComGameState_AIGroup]
+FallbackExclusionList=AshPsiAbominationM1
+FallbackExclusionList=AshPsiAbominationM2
+FallbackExclusionList=AshPsiAbominationM3

+FallbackExclusionList=AshRisenTrooperM1
+FallbackExclusionList=AshRisenTrooperM2
+FallbackExclusionList=AshRisenTrooperM3

+FallbackExclusionList=AshRisenCursedTrooperM1
+FallbackExclusionList=AshRisenCursedTrooperM2
+FallbackExclusionList=AshRisenCursedTrooperM3

+FallbackExclusionList=AshRisenWarlockM1
+FallbackExclusionList=AshRisenWarlockM2
+FallbackExclusionList=AshRisenWarlockM3
+FallbackExclusionList=AshRisenWarlockM4

+FallbackExclusionList=AshCursedStunLancerM1
+FallbackExclusionList=AshCursedStunLancerM2
+FallbackExclusionList=AshCursedStunLancerM3

+FallbackExclusionList=AshArmoredTrooperM1
+FallbackExclusionList=AshArmoredTrooperM2
+FallbackExclusionList=AshArmoredTrooperM3