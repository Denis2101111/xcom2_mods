;---------------------------------------------------------------------------------------
;  FILE:    XComAI.ini
;  AUTHOR:  Ashlynne  --  9/15/2017
;				          Updated 12/31/2020
;---------------------------------------------------------------------------------------

[XComGame.X2AIBTBehaviorTree]

+EquivalentAbilities=(KeyName=Ability_AshWanderingCurse, EquivalentAbilityName[0]=Ability_AshWanderingCurseM1, EquivalentAbilityName[1]=Ability_AshWanderingCurseM2, EquivalentAbilityName[2]=Ability_AshWanderingCurseM3)

;EQUVALENT ABILITIES
+EquivalentAbilities=(KeyName=Ability_AshDeathsEmbrace, EquivalentAbilityName[0]=Ability_AshDeathsEmbraceM1, EquivalentAbilityName[1]=Ability_AshDeathsEmbraceM2, EquivalentAbilityName[2]=Ability_AshDeathsEmbraceM3)
+EquivalentAbilities=(KeyName=Ability_AshZombieSlash, EquivalentAbilityName[0]=Ability_AshZombieSlashM1, EquivalentAbilityName[1]=Ability_AshZombieSlashM2, EquivalentAbilityName[2]=Ability_AshZombieSlashM3)
+EquivalentAbilities=(KeyName=Ability_AshResilience, EquivalentAbilityName[0]=Ability_AshResilienceM1, EquivalentAbilityName[1]=Ability_AshResilienceM2, EquivalentAbilityName[2]=Ability_AshResilienceM3)

;---------------------------------------------------------------------------------------------
;	ADVENT WARLOCK
;---------------------------------------------------------------------------------------------

;SCAMPER ROOT
+Behaviors=(BehaviorName="AshAdvWarlock::ScamperRoot", NodeType=Selector, \\
		Child[0]=CounterBeaglerushManeuver, \\
		Child[1]=MoveDefensiveWithLoSUnsafe, \\
		Child[2]=MoveDefensiveUnsafe, \\
		Child[3]=SkipMove)

;ALERT ROOT
+Behaviors=(BehaviorName="AdventWarlock::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvWarlock_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdvWarlock_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdvWarlock_RedAbilitySelector)
+Behaviors=(BehaviorName=AdvWarlock_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=DarkEventPriorityMoveThenGrenade, Child[2]=AdvWarlock_RedFirstAction, Child[3]=AdvWarlock_RedLastAction)

;ACTION 1
+Behaviors=(BehaviorName=AdvWarlock_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AdvWarlock_RedFirstActionSelector)
+Behaviors=(BehaviorName=AdvWarlock_RedFirstActionSelector, NodeType=Selector, \\
	  Child[0]=AshTryMoveThenDeathsEmbrace, \\
	  Child[1]=AshTryMoveThenRaiseDead, \\
      Child[2]=TryMoveThenGrenade, \\
	  Child[3]=DoIfFlankedMove, \\
	  Child[4]=SelectMove_JobOrDefensive, \\
	  Child[5]=TryShootOrReloadOrOverwatch, \\
	  Child[6]=HuntEnemyWithCover)
	  
;ACTION 2
+Behaviors=(BehaviorName=AdvWarlock_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AdvWarlock_RedLastActionSelector)
+Behaviors=(BehaviorName=AdvWarlock_RedLastActionSelector, NodeType=Selector, \\
	  Child[0]=AshTryDeathsEmbrace, \\
	  Child[1]=AshTryRaiseDead, \\
	  Child[2]=TryGrenade, \\
	  Child[3]=AshTryPsionicAttack, \\
	  Child[4]=TryShootOrReloadOrOverwatch, \\
	  Child[5]=HuntEnemyWithCover, \\
	  Child[6]=SelectMove_JobOrDefensive)

;DEATH'S EMBRACE
;The Warlock will choose the most injured ADVENT Trooper.
;The ADVENT Trooper requirement is defined in the ability and is double reinforced here through target selection since it is not configurable by a subscriber.
+Behaviors=(BehaviorName=AshTryMoveThenDeathsEmbrace, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-Ability_AshDeathsEmbrace, Child[2]=AshSelectTargetForDeathsEmbrace, Child[3]=AshMoveStandardIfFirstAction_DeathsEmbrace)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_DeathsEmbrace, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindDeathsEmbraceDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindDeathsEmbraceDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Ability_AshDeathsEmbrace, Child[2]=RestrictToAllyLoS, Child[3]=FindRestrictedDestination-MWP_Defensive)

+Behaviors=(BehaviorName=AshTryDeathsEmbrace, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshDeathsEmbrace, Child[1]=AshSelectTargetForDeathsEmbrace, Child[2]=SelectAbility-Ability_AshDeathsEmbrace)
+Behaviors=(BehaviorName=AshSelectTargetForDeathsEmbrace, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshDeathsEmbrace, Child[1]=AshScoreAllTargetsForDeathsEmbrace, Child[2]=HasValidTarget-Ability_AshDeathsEmbrace)
+Behaviors=(BehaviorName=AshScoreAllTargetsForDeathsEmbrace, NodeType=RepeatUntilFail, Child[0]=AshIterateTargetsForDeathsEmbrace)
+Behaviors=(BehaviorName=AshIterateTargetsForDeathsEmbrace, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=AshGetScoreForCurrentTarget, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=AshGetScoreForCurrentTarget, NodeType=Successor, Child[0]=AshScoreCurrentTargetForDeathsEmbrace)
+Behaviors=(BehaviorName=AshScoreCurrentTargetForDeathsEmbrace, NodeType=Sequence, Child[0]=AshCurrentTargetIsAdventTrooper, Child[1]=AshScoreByHealth)
+Behaviors=(BehaviorName=AshScoreByHealth, NodeType=Selector, Child[0]=AshScoreIfCurrentTarget_HasLowHP, Child[1]=AshScoreIfCurrentTarget_IsWounded, Child[2]=AshScoreIfCurrentTarget_HasMaxHP, Child[3]=AddToTargetScore_0)

+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_HasMaxHP, NodeType=Sequence, Child[0]=TargetHasMaxHP, Child[1]=AddToTargetScore_10)	;HP >= 100%
+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_IsWounded, NodeType=Sequence, Child[0]=TargetWounded, Child[1]=AddToTargetScore_20)	;HP < 100%
+Behaviors=(BehaviorName=AshScoreIfCurrentTarget_HasLowHP, NodeType=Sequence, Child[0]=TargetHasLowHP, Child[1]=AddToTargetScore_30)	;HP <= 40%			
	
+Behaviors=(BehaviorName=AshCurrentTargetIsAdventTrooper, NodeType=Selector, Child[0]=TargetTemplateNameIs-AdvTrooperM1, Child[1]=TargetTemplateNameIs-AdvTrooperM2, Child[2]=TargetTemplateNameIs-AdvTrooperM3, Child[3]=TargetTemplateNameIs-AshArmoredTrooperM1, Child[4]=TargetTemplateNameIs-AshArmoredTrooperM2, Child[5]=TargetTemplateNameIs-AshArmoredTrooperM3)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvTrooperM1, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvTrooperM2, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvTrooperM3, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AshArmoredTrooperM1, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AshArmoredTrooperM2, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AshArmoredTrooperM3, NodeType=Condition)

+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshDeathsEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshDeathsEmbrace, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshDeathsEmbrace, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshDeathsEmbrace, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshDeathsEmbrace, NodeType=Action)

;RAISE DEAD
+Behaviors=(BehaviorName=AshTryMoveThenRaiseDead, NodeType=Sequence, Child[0]=SafeToMove, Child[1]=IsAbilityAvailable-Ability_AshRaiseDead, Child[2]=AshSelectTargetForRaiseDead, Child[3]=AshMoveStandardIfFirstAction_RaiseDead)
+Behaviors=(BehaviorName=AshMoveStandardIfFirstAction_RaiseDead, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=AshFindRaiseDeadDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=AshFindRaiseDeadDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-Ability_AshRaiseDead, Child[2]=FindRestrictedDestination-MWP_Defensive)

+Behaviors=(BehaviorName=AshTryRaiseDead, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshRaiseDead, Child[1]=AshSelectTargetForRaiseDead, Child[2]=SelectAbility-Ability_AshRaiseDead)
+Behaviors=(BehaviorName=AshSelectTargetForRaiseDead, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshRaiseDead, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-Ability_AshRaiseDead)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshRaiseDead, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshRaiseDead, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshRaiseDead, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshRaiseDead, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshRaiseDead, NodeType=Action)

;PSIONIC ATTACK
+Behaviors=(BehaviorName=AshTryPsionicAttack, NodeType=Selector, Child[0]=AshTrySoulfire, Child[1]=AshTryInsanity)

;SOULFIRE - Warlock will try to use this power if he is injured.
+Behaviors=(BehaviorName=AshTrySoulFire, NodeType=Sequence, Child[0]=IsAbilityAvailable-SoulFire, Child[1]=AshSelectTargetForSoulFire, Child[2]=HasWounds, Child[3]=SelectAbility-SoulFire)
+Behaviors=(BehaviorName=AshSelectTargetForSoulFire, NodeType=Sequence, Child[0]=SetTargetStack-SoulFire, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-SoulFire)
+Behaviors=(BehaviorName=IsAbilityAvailable-SoulFire, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-SoulFire, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-SoulFire, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-SoulFire, NodeType=Condition)

;INSANITY
+Behaviors=(BehaviorName=AshTryInsanity, NodeType=Sequence, Child[0]=IsAbilityAvailable-Insanity, Child[1]=AshSelectTargetForInsanity, Child[2]=SelectAbility-Insanity)
+Behaviors=(BehaviorName=AshSelectTargetForInsanity, NodeType=Sequence, Child[0]=SetTargetStack-Insanity, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Insanity)
+Behaviors=(BehaviorName=IsAbilityAvailable-Insanity, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Insanity, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Insanity, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Insanity, NodeType=Condition)

;---------------------------------------------------------------------------------------------
;	RISEN
;---------------------------------------------------------------------------------------------

;SCAMPER ROOT
+Behaviors=(BehaviorName="AshRisen::ScamperRoot", NodeType=Selector, Child[0]=SkipMove)

;ALERT ROOT
+Behaviors=(BehaviorName="AshRisen::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AshRisen_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AshRisen_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AshRisen_RedAbilitySelector)
+Behaviors=(BehaviorName=AshRisen_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=AshRisenFirstAction, Child[2]=AshRisenLastAction)

;ACTION 1
+Behaviors=(BehaviorName=AshRisenFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AshRisenFirstActionSelector)
+Behaviors=(BehaviorName=AshRisenFirstActionSelector, NodeType=Selector, \\
	Child[0]=AshRisenSignatureAbilitySelector, \\
	Child[1]=GenericEnemyMeleeRootFANATIC)

;ACTION 2
+Behaviors=(BehaviorName=AshRisenLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AshRisenLastActionSelector)
+Behaviors=(BehaviorName=AshRisenLastActionSelector, NodeType=Selector, \\
	Child[0]=GenericEnemyMeleeRootFANATIC)


;RISEN SIGNATURE ABILITY SELECTOR
+Behaviors=(BehaviorName=AshRisenSignatureAbilitySelector, NodeType=Selector, Child[0]=AshAbominationSignature, Child[1]=AshTrooperSignature, Child[2]=AshWarlockSignature)
+Behaviors=(BehaviorName=AshAbominationSignature, NodeType=Sequence, Child[0]=AshIsAbomination, Child[1]=AshTryZombieSlash)
+Behaviors=(BehaviorName=AshTrooperSignature, NodeType=Sequence, Child[0]=AshIsTrooper, Child[1]=AshTryResilience)
+Behaviors=(BehaviorName=AshWarlockSignature, NodeType=Sequence, Child[0]=AshIsWarlock, Child[1]=AshTryWanderingCurse)
+Behaviors=(BehaviorName=AshIsAbomination, NodeType=Selector, Child[0]=TemplateNameIs-AshPsiAbominationM1, Child[1]=TemplateNameIs-AshPsiAbominationM2, Child[2]=TemplateNameIs-AshPsiAbominationM3)
+Behaviors=(BehaviorName=AshIsTrooper, NodeType=Selector, Child[0]=TemplateNameIs-AshRisenTrooperM1, Child[1]=TemplateNameIs-AshRisenTrooperM2, Child[2]=TemplateNameIs-AshRisenTrooperM3)
+Behaviors=(BehaviorName=AshIsWarlock, NodeType=Selector, Child[0]=TemplateNameIs-AshRisenWarlockM1, Child[1]=TemplateNameIs-AshRisenWarlockM2, Child[2]=TemplateNameIs-AshRisenWarlockM3, Child[3]=TemplateNameIs-AshRisenWarlockM4)
+Behaviors=(BehaviorName=TemplateNameIs-AshPsiAbominationM1, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshPsiAbominationM2, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshPsiAbominationM3, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshRisenTrooperM1, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshRisenTrooperM2, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshRisenTrooperM3, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshRisenWarlockM1, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshRisenWarlockM2, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshRisenWarlockM3, NodeType=Condition)
+Behaviors=(BehaviorName=TemplateNameIs-AshRisenWarlockM4, NodeType=Condition)

;ABOMINATION SLASH
+Behaviors=(BehaviorName=AshTryZombieSlash, NodeType=Sequence, Child[0]=IsAbilityReady-Ability_AshZombieSlash, Child[1]=ZombieSlashStepSelector)
+Behaviors=(BehaviorName=ZombieSlashStepSelector, NodeType=Selector, Child[0]=ZombieSlashAttack, Child[1]=MoveMeleeIfFirstAbilityFANATIC)
+Behaviors=(BehaviorName=ZombieSlashAttack, NodeType=Sequence, Child[0]=SelectTargetForZombieSlash, Child[1]=SelectAbility-Ability_AshZombieSlash)

+Behaviors=(BehaviorName=SelectTargetForZombieSlash, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshZombieSlash, Child[1]=SelectBestTargetForZombieSlash, Child[2]=HasValidTarget-Ability_AshZombieSlash)
+Behaviors=(BehaviorName=SelectBestTargetForZombieSlash, NodeType=RepeatUntilFail, Child[0]=TargetSelectIterationForZombieSlash)
+Behaviors=(BehaviorName=TargetSelectIterationForZombieSlash, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=EvaluateTargetForZombieSlash, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=EvaluateTargetForZombieSlash, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth_HighFirst, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreCivilian)

+Behaviors=(BehaviorName=IsAbilityReady-Ability_AshZombieSlash, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshZombieSlash, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshZombieSlash, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshZombieSlash, NodeType=Action)

;RESILIENCE
+Behaviors=(BehaviorName=AshTryResilience, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshResilience, Child[1]=AshSelectTargetForResilience, Child[2]=SelectAbility-Ability_AshResilience)
+Behaviors=(BehaviorName=AshSelectTargetForResilience, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshResilience, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-Ability_AshResilience)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshResilience, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshResilience, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshResilience, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshResilience, NodeType=Action)

;WANDERING CURSE
+Behaviors=(BehaviorName=AshTryWanderingCurse, NodeType=Sequence, Child[0]=IsAbilityAvailable-Ability_AshWanderingCurse, Child[1]=AshSelectTargetForWanderingCurse, Child[2]=SelectAbility-Ability_AshWanderingCurse)
+Behaviors=(BehaviorName=AshSelectTargetForWanderingCurse, NodeType=Sequence, Child[0]=SetTargetStack-Ability_AshWanderingCurse, Child[1]=GenericSelectTargetSomewhatRandomly, Child[2]=HasValidTarget-Ability_AshWanderingCurse)
+Behaviors=(BehaviorName=IsAbilityAvailable-Ability_AshWanderingCurse, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Ability_AshWanderingCurse, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-Ability_AshWanderingCurse, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-Ability_AshWanderingCurse, NodeType=Condition)
+Behaviors=(BehaviorName=RestrictToAbilityRange-Ability_AshWanderingCurse, NodeType=Action)