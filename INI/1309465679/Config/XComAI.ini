[XComGame.XComGameState_AIGroup]
+FallbackExclusionList="AdvDestroyerM1"
+FallbackExclusionList="AdvDestroyerM2"
+FallbackExclusionList="AdvDestroyerM3"
+FallbackExclusionList="PsiDroneM1"
+FallbackExclusionList="PsiDroneM2"
+FallbackExclusionList="PsiDroneM3"

[XComGame.XGAIBehavior]
;DRONE MICRO BLASTER LAUNCHER (For Phase Drone's Missile) AOE Profiles
+AoEProfiles=( Profile=PsiDroneLauncherProfile, Ability=PsiDroneLauncher, bUsePrecomputePath=1, bFailOnFriendlyFire=1)
+AoEProfiles=( Profile=PsiDroneLauncherAggressiveProfile, Ability=PsiDroneLauncher, bUsePrecomputePath=1) 

[XComGame.X2AIBTBehaviorTree]
+EquivalentAbilities=( KeyName=StandardShot, EquivalentAbilityName[0]=AdvRaptorStandardFire )
+EquivalentAbilities=( KeyName=Overwatch, EquivalentAbilityName[0]=AdvRaptorLongWatch )
+EquivalentAbilities=( KeyName=StandardMelee, EquivalentAbilityName[0]=Rend )
+EquivalentAbilities=( KeyName=MarkTarget, EquivalentAbilityName[0]=SoulReaper, EquivalentAbilityName[1]=WraithInvert )
+EquivalentAbilities=( KeyName=EnergyShield, EquivalentAbilityName[0]=CommandoEnergyShield, EquivalentAbilityName[1]=CommandoEnergyShieldMk2, EquivalentAbilityName[2]=CommandoEnergyShieldMk3 ) 
+EquivalentAbilities=( KeyName=Teleport, EquivalentAbilityName[0]=IcarusJump, EquivalentAbilityName[1]=RaptorJump )
+EquivalentAbilities=( KeyName=GetOverHere, EquivalentAbilityName[0]=DestroyerPull )

;Advent Raptor Commando
+Behaviors=(BehaviorName="AdventRaptor::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdventRaptor_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdventRaptor_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdventRaptor_RedAbilitySelector)
+Behaviors=(BehaviorName=AdventRaptor_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=AdventRaptorRedFirstAction, Child[2]=AdventRaptorRedLastAction)

+Behaviors=(BehaviorName=AdventRaptorRedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AdventRaptorRedFirstActionSelector)
+Behaviors=(BehaviorName=AdventRaptorRedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryTeleportDefensive, \\
	Child[2]=TryMarkTargetOption, \\
	Child[3]=TryOneOrTheOther, \\
	Child[4]=TryKillShot, \\
	Child[5]=TryHighPercentageShot, \\
	Child[6]=MoveDefensive, \\
	Child[7]=TryShootOrReloadOrOverwatch, \\
	Child[8]=FallBackWithLoS)

+Behaviors=(BehaviorName=AdventRaptorRedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AdventRaptorRedLastActionSelector)
+Behaviors=(BehaviorName=AdventRaptorRedLastActionSelector, NodeType=Selector, \\
    Child[0]=TryMarkTargetOption, \\
	Child[1]=TryKillShot, \\
	Child[2]=TryOneOrTheOther, \\
	Child[3]=TryHighPercentageShot, \\
	Child[4]=TryOverwatch, \\
	Child[5]=TryShootOrReloadOrOverwatch, \\
	Child[6]=MoveDefensive, \\
	Child[7]=FallBackWithLoS)

;TryKillShot
+Behaviors=(BehaviorName=AllShotPercentagesOver90, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]=">", Param[2]="90")
+Behaviors=(BehaviorName=AllShotPercentagesOver70, NodeType=StatCondition, Param[0]=TopHitChance, Param[1]=">", Param[2]="70")

+Behaviors=(BehaviorName=TryKillShot, NodeType=Sequence, Child[0]=AllShotPercentagesOver90, Child[1]=TargetIsVulnerable, Child[2]=ShootIfAvailable)
+Behaviors=(BehaviorName=TryHighPercentageShot, NodeType=Sequence, Child[0]=AllShotPercentagesOver70, Child[1]=ShootIfAvailable)

;Demolition
+Behaviors=(BehaviorName=TryDemolitionShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-DemolitionShot, Child[1]=SelectTargetFor_DemolitionShot, Child[2]=SelectAbility-DemolitionShot)
+Behaviors=(BehaviorName=SelectTargetFor_DemolitionShot, NodeType=Sequence, Child[0]=SetTargetStack-DemolitionShot, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-DemolitionShot)
+Behaviors=(BehaviorName=IsAbilityAvailable-DemolitionShot, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-DemolitionShot, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-DemolitionShot, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-DemolitionShot, NodeType=Condition)

;Psi Srtrike
+Behaviors=(BehaviorName=TryRaptorPsiStrike, NodeType=Sequence, Child[0]=IsAbilityAvailable-RaptorPsiStrike, Child[1]=SelectTargetFor_RaptorPsiStrike, Child[2]=SelectAbility-RaptorPsiStrike)
+Behaviors=(BehaviorName=SelectTargetFor_RaptorPsiStrike, NodeType=Sequence, Child[0]=SetTargetStack-RaptorPsiStrike, Child[1]=GenericSelectBestTarget, Child[2]=HasValidTarget-RaptorPsiStrike)
+Behaviors=(BehaviorName=IsAbilityAvailable-RaptorPsiStrike, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RaptorPsiStrike, NodeType=Action)
+Behaviors=(BehaviorName=SetTargetStack-RaptorPsiStrike, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-RaptorPsiStrike, NodeType=Condition)

+Behaviors=(BehaviorName=TryOneOrTheOther, NodeType=RandSelector, Child[0]=TryDemolitionShot, Param[0]=50, Child[1]=TryRaptorPsiStrike, Param[1]=50 )

;New Scamper Root
+Behaviors=(BehaviorName=ScamperRoot_Raptor, NodeType=Selector, \\
        Child[0]=TryShootOrJumpOrMoveOption, \\ 
		Child[1]=CounterBeaglerushManeuver, \\
		Child[2]=MoveDefensiveWithLoSUnsafe, \\
		Child[3]=MoveStandardUnsafe, \\
		Child[4]=SkipMove)

; 40% chance to jump to Defensive position, 10% chance to try standard shot, 30% chance to move to cover.  Otherwise use whatever is available.
+Behaviors=(BehaviorName=TryShootOrJumpOrMoveOption, NodeType=RandSelector, Child[0]=TryTeleportDefensive, Param[0]=40, Child[1]=TryStandaredShot, Param[1]=20, Child[2]=FallBackWithLoSUnsafe, Param[2]=40 )

;Advent Wraith Commando
+Behaviors=(BehaviorName="AdventWraith::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdventWraith_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdventWraith_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdventWraith_RedAbilitySelector)
+Behaviors=(BehaviorName=AdventWraith_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=AdventWraith_RedFirstAction, Child[2]=AdventWraith_RedLastAction)

+Behaviors=(BehaviorName=AdventWraith_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AdventWraith_RedFirstActionSelector)
+Behaviors=(BehaviorName=AdventWraith_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMeleeOrShootOrInvert, \\
	Child[1]=SelectMove_JobOrMelee, \\
	Child[2]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AdventWraith_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AdventWraith_RedLastActionSelector)
+Behaviors=(BehaviorName=AdventWraith_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMeleeOrShootOrInvert, \\
	Child[1]=HuntEnemyWithCover, \\
	Child[2]=SelectMove_JobOrMelee)

;NewScamper Root
+Behaviors=(BehaviorName=ScamperRoot_Wraith, NodeType=Selector, \\
		Child[0]=TryShootOrMeleeOrMoveOption, \\
		Child[1]=CounterBeaglerushManeuver, \\
		Child[2]=MoveDefensiveWithLoSUnsafe, \\
		Child[3]=MoveStandardUnsafe, \\
		Child[4]=SkipMove)

; 30% chance to try Rend, 20% chance to try standard shot, 50% chance to move to cover.  Otherwise use whatever is available.
+Behaviors=(BehaviorName=TryShootOrMeleeOrMoveOption, NodeType=RandSelector, Child[0]=TryStandardMelee, Param[0]=30, Child[1]=TryStandaredShot, Param[1]=20, Child[2]=MoveStandardWithLoSUnsafe, Param[2]=50 )
+Behaviors=(BehaviorName=TryStandaredShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=TryStandaredMelee, NodeType=Sequence, Child[0]=SelectAbility-StandardMelee, Child[1]=MoveDefensiveWithLoSUnsafe )

+Behaviors=(BehaviorName=TryMeleeOrShootOrInvert, NodeType=RandSelector,  Child[0]=TryStandardMelee, Param[0]=60, Child[1]=TryStandaredShot, Param[1]=20, Child[2]=TryMarkTargetOption, Param[2]=20 )


;Advent Destroyer Commando
+Behaviors=(BehaviorName="AdventDestroyer::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdventDestroyer_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdventDestroyer_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdventDestroyer_RedAbilitySelector)
+Behaviors=(BehaviorName=AdventDestroyer_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=AdventDestroyerFirstAction, Child[2]=AdventDestroyerLastAction)

+Behaviors=(BehaviorName=AdventDestroyerFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AdventDestroyerFirstActionSelector)
+Behaviors=(BehaviorName=AdventDestroyerFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryMoveForEnergyShield, \\
	Child[1]=TryEnergyShieldOnMultipleTargets, \\
	Child[2]=TryGetOverHere, \\
	Child[3]=DoIfFlankedMove, \\
	Child[4]=SelectMove_JobOrDefensive, \\
	Child[5]=HuntEnemyWithCover, \\
	Child[6]=TryShootOrReloadOrOverwatch)

+Behaviors=(BehaviorName=AdventDestroyerLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AdventDestroyerLastActionSelector)
+Behaviors=(BehaviorName=AdventDestroyerLastActionSelector, NodeType=Selector, \\
	Child[0]=TryEnergyShieldOnAnyTarget, \\
	Child[1]=TryShootOrReloadOrOverwatch,  \\
	Child[2]=TryGetOverHere, \\
	Child[3]=HuntEnemyWithCover, \\
	Child[4]=SelectMove_JobOrDefensive)

;NewScamper Root
+Behaviors=(BehaviorName=ScamperRoot_Destroyer, NodeType=Selector, \\
		Child[0]=TryShootORShieldsORMoveOption, \\
		Child[1]=CounterBeaglerushManeuver, \\
		Child[2]=MoveDefensiveWithLoSUnsafe, \\
		Child[3]=MoveStandardUnsafe, \\
		Child[4]=SkipMove)

; 40% chance to cast shieds, 20% chance to try standard shot and 40% chance to move to cover.  Otherwise use whatever is available.
+Behaviors=(BehaviorName=TryShootORShieldsORMoveOption, NodeType=RandSelector, Child[0]=TryEnergyShieldOnMultipleTargets, Param[0]=40, Child[1]=TryStandaredShot, Param[1]=20, Child[2]=MoveStandardWithLoSUnsafe, Param[2]=40 )
+Behaviors=(BehaviorName=TryStandaredShot, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForStandardShot, Child[2]=SelectAbility-StandardShot)

;PSI DRONE
+Behaviors=(BehaviorName="PsiDrone::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=PsiDrone_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=PsiDrone_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=PsiDrone_RedAbilitySelector)
+Behaviors=(BehaviorName=PsiDrone_RedAbilitySelector, NodeType=Selector, Child[0]=PsiDrone_RedFirstAction, Child[1]=PsiDrone_RedLastAction)

+Behaviors=(BehaviorName=PsiDrone_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=PsiDrone_RedFirstActionSelector)
+Behaviors=(BehaviorName=PsiDrone_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryMarkTargetOption, \\
	Child[2]=TryPsiDroneLauncherOption, \\
	Child[3]=SelectMove_JobOrDefensive, \\
	Child[4]=TryShootOrReloadOrOverwatch, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=PsiDrone_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=PsiDrone_RedLastActionSelector)
+Behaviors=(BehaviorName=PsiDrone_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryMarkTargetOption, \\
	Child[1]=TryShootOrReloadOrOverwatch, \\
	Child[2]=HuntEnemyWithCover, \\
	Child[3]=SelectMove_JobOrDefensive)

+Behaviors=(BehaviorName=FindPotentialAoETargets-PsiDroneLauncherProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-PsiDroneLauncherAggressiveProfile, NodeType=Action)

+Behaviors=(BehaviorName=SelectAoETarget-PsiDroneLauncherProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-PsiDroneLauncherAggressiveProfile, NodeType=Action)

+Behaviors=(BehaviorName=TryPsiDroneLauncherOption, NodeType=Sequence, Child[0]=IsAbilityAvailable-PsiDroneLauncher, Child[1]=FindPotentialAoETargets-PsiDroneLauncherProfile, Child[2]=SelectAoETarget-PsiDroneLauncherProfile, Child[3]=SelectAbility-PsiDroneLauncher)
+Behaviors=(BehaviorName=IsAbilityAvailable-PsiDroneLauncher, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-PsiDroneLauncher, NodeType=Action)
















	



