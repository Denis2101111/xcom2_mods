[XComGame.X2AIBTBehaviorTree]
+Behaviors=(BehaviorName="AdventDuelistRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdventDuelist_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdventDuelist_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdventDuelist_RedAbilitySelector)
+Behaviors=(BehaviorName=AdventDuelist_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=AdventDuelist_RedFirstAction, Child[2]=AdventDuelist_RedLastAction)

+Behaviors=(BehaviorName=AdventDuelist_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AdventDuelist_RedFirstActionSelector)
+Behaviors=(BehaviorName=AdventDuelist_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryLightningHands, \\
	Child[2]=SelectMove_JobOrFlanking, \\
	Child[3]=TryQuickDraw, \\
	Child[4]=TryFanfire, \\
	Child[5]=TryAnkleShot, \\
	Child[6]=TryShootOrReloadOrOverwatch, \\
	Child[7]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AdventDuelist_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AdventDuelist_RedLastActionSelector)
+Behaviors=(BehaviorName=AdventDuelist_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryLightningHands, \\
	Child[1]=TryFanfire, \\
	Child[2]=TryAnkleShot, \\
	Child[3]=TryShootOrReloadOrOverwatch, \\
	Child[4]=HuntEnemyWithCover, \\
	Child[5]=SelectMove_JobOrDefensive)
	
+Behaviors=(BehaviorName=HasValidTarget-AnkleShot, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AnkleShot, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-AnkleShot, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-AnkleShot, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AnkleShot, NodeType=Action)

+Behaviors=(BehaviorName=HasValidTarget-LightningHands, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-LightningHands, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-LightningHands, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-LightningHands, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-LightningHands, NodeType=Action)

+Behaviors=(BehaviorName=HasValidTarget-Fanfire, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-Fanfire, NodeType=Action)
+Behaviors=(BehaviorName=IsAbilityAvailable-Fanfire, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-Fanfire, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-Fanfire, NodeType=Action)

+Behaviors=(BehaviorName=SelectTargetForAnkleShot, NodeType=Sequence, \\
	Child[0]=SetTargetStack-AnkleShot, \\
	Child[1]=GenericSelectBestTarget, \\
	Child[2]=HasValidTarget-AnkleShot)
+Behaviors=(BehaviorName=TryAnkleShot, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-AnkleShot, \\
	Child[1]=SelectTargetForAnkleShot, \\
	Child[2]=SelectAbility-AnkleShot)

+Behaviors=(BehaviorName=SelectTargetForLightningHands, NodeType=Sequence, \\
	Child[0]=SetTargetStack-LightningHands, \\
	Child[1]=GenericSelectBestTarget, \\
	Child[2]=HasValidTarget-LightningHands)
+Behaviors=(BehaviorName=TryLightningHands, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-LightningHands, \\
	Child[1]=SelectTargetForLightningHands, \\
	Child[2]=SelectAbility-LightningHands)

+Behaviors=(BehaviorName=SelectTargetForFanfire, NodeType=Sequence, \\
	Child[0]=SetTargetStack-Fanfire, \\
	Child[1]=GenericSelectBestTarget, \\
	Child[2]=HasValidTarget-Fanfire)
+Behaviors=(BehaviorName=TryFanfire, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-Fanfire, \\
	Child[1]=SelectTargetForFanfire, \\
	Child[2]=SelectAbility-Fanfire)