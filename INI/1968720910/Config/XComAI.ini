[XComGame.XComGameState_AIGroup]
+FallbackExclusionList="AHWMutonShocktrooper"
+FallbackExclusionList="AHWMutonRocketeer"
+FallbackExclusionList="AHWMutonElite"
+FallbackExclusionList="AHWAndromedonDreadnaught"
+FallbackExclusionList="AHWDreadnaughtRobot"
+FallbackExclusionList="AHWCryokeeper"

[XComGame.XGAIBehavior]
+AoEProfiles=( Profile=AHWBallistariusAnyProfile, Ability=RocketLauncher, bFailOnObjectiveFire=false, bFailOnFriendlyFire=true, MinTargets=1, bRequireLoS=1)
+AoEProfiles=( Profile=AHWBallistariusMultiProfile, Ability=RocketLauncher, bFailOnObjectiveFire=false, bFailOnFriendlyFire=false, MinTargets=2, bRequireLoS=1)
+AoEProfiles=( Profile=AHWCannonadeProfile, Ability=AHWAbility_AndromedonCannonade, bFailOnObjectiveFire=false, bFailOnFriendlyFire=true, MinTargets=1, bRequireLoS=1)
+AoEProfiles=( Profile=AHWCannonadeMultiProfile, Ability=AHWAbility_AndromedonCannonade, bFailOnObjectiveFire=false, bFailOnFriendlyFire=true, MinTargets=2, bRequireLoS=1)
+AoEProfiles=( Profile=AHWCannonadeMassacreProfile, Ability=AHWAbility_AndromedonCannonade, bFailOnObjectiveFire=false, bFailOnFriendlyFire=false, MinTargets=3, bRequireLoS=1)
+AoEProfiles=( Profile=AHWCryonovaProfile, Ability=AHWAbility_FrostBlast, bFailOnObjectiveFire=false, bFailOnFriendlyFire=false, MinTargets=3, bRequireLoS=1)

[XComGame.X2AIBTBehaviorTree]
; Enhanced AI Behaviors! Target Units applying these effects!

+Behaviors=(BehaviorName=TargetIsApplyingEffect-MindControl, NodeType=Condition)
+Behaviors=(BehaviorName=TargetIsApplyingEffect-Solace, NodeType=Condition)
+Behaviors=(BehaviorName=TargetIsApplyingEffect-VoidConduit, NodeType=Condition)
+Behaviors=(BehaviorName=TargetIsApplyingEffect-AidProtocol, NodeType=Condition)
+Behaviors=(BehaviorName=TargetIsApplyingEffect-HoloTarget, NodeType=Condition)

; Check to see if a Target has squadsight. If so, they're probably a Scout Class or a Sniper Class, which makes them a valid Target for Smart Targeting
+Behaviors=(BehaviorName=TargetAffectedByEffect-Squadsight, NodeType=Condition)

; Special Handling for Sparks - Sparks are more likely to get suppressed
+Behaviors=(BehaviorName=TargetTemplateNameIs-SparkSoldier, NodeType=Condition)

; Advanced Aliens Special Behavior Handling
+Behaviors=(BehaviorName=VelesShootFlankedAHW, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectAnyFlankedTarget, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=InitGSROAHW, NodeType=Selector, Child[0]=ConsiderGrenadingAHW, Child[1]=ConsiderSuppressionAHW, Child[2]=ConsiderTakingOverwatch, Child[3]=ShootMoreIntelligentlyAHW, Child[4]=OverwatchMoreIntelligentlyAHW, Child[5]=NeedsReload)
+Behaviors=(BehaviorName=ConsiderGrenadingAHW, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=RandGrenade50AHW)
+Behaviors=(BehaviorName=ConsiderSuppressionAHW, NodeType=Sequence, Child[0]=AllShotPercentagesBelow50, Child[1]=RandSuppress50AHW)
+Behaviors=(BehaviorName=RandSuppress50AHW, NodeType=RandFilter, Child[0]=SuppressMoreIntelligentlyAHW, Param[0]=30)
+Behaviors=(BehaviorName=RandGrenade50AHW, NodeType=RandFilter, Child[0]=TryGrenadeAny, Param[0]=50)

+Behaviors=(BehaviorName=OverwatchMoreIntelligentlyAHW, NodeType=Sequence, Child[0]=WasLastAbility-ThrowGrenade, Child[1]=NoVisibleEnemies, Child[2]=TryOverwatch)
+Behaviors=(BehaviorName=ShootMoreIntelligentlyAHW, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectTargetForSmartStandardShotAHW, Child[2]=SelectAbility-StandardShot)
+Behaviors=(BehaviorName=SuppressMoreIntelligentlyAHW, NodeType=Sequence, Child[0]=IsAbilityAvailable-Suppression, Child[1]=SelectSmartSuppressionTargetAHW, Child[2]=SelectAbility-Suppression)

+Behaviors=(BehaviorName=SelectTargetForSmartSuppressionAHW, NodeType=Sequence, Child[0]=SetTargetStack-Suppression, Child[1]=SelectSmartSuppressionTargetAHW, Child[2]=HasValidTarget-Suppression)
+Behaviors=(BehaviorName=SelectTargetForSmartStandardShotAHW, NodeType=Sequence, Child[0]=SetTargetStack-StandardShot, Child[1]=SmartSelectBestTargetAHW, Child[2]=HasValidTarget-StandardShot)

+Behaviors=(BehaviorName=SmartSelectBestTargetAHW, NodeType=RepeatUntilFail, Child[0]=SmartEvaluateTargetAHW)
+Behaviors=(BehaviorName=SmartEvaluateTargetAHW, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SmartTargetEvaluationsAHW, Child[2]=UpdateBestTarget);
+Behaviors=(BehaviorName=SmartTargetEvaluationsAHW, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth, Child[2]=TargetScoreFlanking, Child[3]=SmartTargetScoreAHW, Child[4]=ApplyDifficultyModifiers, Child[5]=TargetScoreCivilian, Child[6]=AvoidBoundAndPanickedTargets)

+Behaviors=(BehaviorName=SelectSmartSuppressionTargetAHW, NodeType=RepeatUntilFail, Child[0]=EvaluateSmartSuppressionTargetAHW)
+Behaviors=(BehaviorName=EvaluateSmartSuppressionTargetAHW, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=SmartTargetScoreAHW, Child[2]=SmartSuppressEnemySpark, Child[3]=TargetScoreUnsuppressedByClosestDistance, Child[4]=TargetScoreInvalidateCivilians, Child[5]=UpdateBestTarget)

; Advanced Stun Lance Targeting
-Behaviors=(BehaviorName=EvaluateTargetForStunLance, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=TargetScoreHealth_HighFirst, Child[2]=TargetScoreMarked, Child[3]=AvoidBoundAndPanickedTargets, Child[4]=TargetScoreCivilian, Child[5]=SSTeamSpecificModifiers)
+Behaviors=(BehaviorName=EvaluateTargetForStunLance, NodeType=Sequence, Child[0]=TargetScoreHitChance, Child[1]=SmartTargetFearOfLancersAHW, Child[2]=TargetScoreHealth_HighFirst, Child[3]=TargetScoreMarked, Child[4]=SmartTargetHighestRankerAHW, Child[5]=AvoidBoundAndPanickedTargets, Child[6]=TargetScoreCivilian, Child[7]=SSTeamSpecificModifiers)
+Behaviors=(BehaviorName=SmartTargetFearOfLancersAHW, NodeType=Sequence, Child[0]=TargetHasAbilityAHW-FearOfStunLancersPassive, Child[1]=AddToTargetScore_50)

; Advanced Mind Control Targeting - Avoid targets under the protection of Solace
-Behaviors=(BehaviorName=TargetScoreMindControl, NodeType=Selector, Child[0]=ScoreIfTargetWillWeakened, Child[1]=AddToTargetScore_-10)
+Behaviors=(BehaviorName=TargetScoreMindControl, NodeType=Selector, Child[0]=ScoreIfTargetIsSolacedAHW, Child[1]=ScoreIfTargetWillWeakened, Child[2]=AddToTargetScore_-10)
+Behaviors=(BehaviorName=ScoreIfTargetIsSolacedAHW, NodeType=Sequence, Child[0]=DoNotTargetSolacedSoldiersForMindControlAHW, Child[1]=AddToTargetScore_-1000)

; Advanced Priest Stasis Targeting
; Lock down priority targets based on Rank, Items Carried, and Abilities possessed - If A Better AI is active, this should take precedence
-Behaviors=(BehaviorName=SSEvaluateForStasis, NodeType=Successor, Child[0]=EvaluateForStasis)
+Behaviors=(BehaviorName=SSEvaluateForStasis, NodeType=Sequence, Child[0]=TargetIsEnemy, Child[1]=SmartTargetHighestRankerAHW, Child[2]=SmartTargetScoreAHW, Child[3]=TargetScoreMarked, Child[4]=AvoidBoundAndPanickedTargets, Child[5]=SSScoreTargetOutIfCivilian, Child[6]=SSScoreTargetOutIfEnemyVIP, Child[7]=SmallRandomScoreModifierAHW)

; Advanced Shadowbind and Horror Targeting.
-Behaviors=(BehaviorName=SelectNLREnemyTargetRandomly, NodeType=RepeatUntilFail, Child[0]=EvaluateNLREnemyTargetRandomly)
+Behaviors=(BehaviorName=SelectNLREnemyTargetRandomly, NodeType=RepeatUntilFail, Child[0]=SmartEvaluateShadowbindTargetAHW)
+Behaviors=(BehaviorName=SmartEvaluateShadowbindTargetAHW, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=ScoreShadowBindTargetAHW, Child[2]=UpdateBestTarget)
+Behaviors=(BehaviorName=ScoreShadowBindTargetAHW, NodeType=Sequence, Child[0]=TargetIsEnemy, Child[1]=SmartTargetScoreAHW, Child[2]=SmartTargetHighestRankerAHW, Child[3]=SmartTargetScoreAHW, Child[4]=TargetScoreHealth_HighFirst, Child[5]=AvoidBoundAndPanickedTargets, Child[6]=SSScoreTargetOutIfCivilian, Child[7]=SSScoreTargetOutIfEnemyVIP, Child[8]=SmallRandomScoreModifierAHW)
+Behaviors=(BehaviorName=SmallRandomScoreModifierAHW, NodeType=RandSelector, Child[0]=AddToTargetScore_1, Child[1]=AddToTargetScore_3, Child[2]=AddToTargetScore_5, Child[3]=AddToTargetScore_10, Child[4]=AddToTargetScore_15, Child[5]=AddToTargetScore_20 )
+Behaviors=(BehaviorName=SmartTargetHighestRankerAHW, NodeType=Sequence, Child[0]=TargetHasHighestSoldierRank, Child[1]=AddToTargetScore_25)

+Behaviors=(BehaviorName=SmartTargetScoreAHW, NodeType=Selector, \\
	Child[0]=SmartTargetEnemyVIPAHW, \\
	Child[1]=SmartTargetEnemySuppressorAHW, \\
	Child[2]=SmartTargetEnemyMindControllerAHW, \\
	Child[3]=SmartTargetEnemyMindshielderAHW, \\
	Child[4]=SmartTargetEnemyVoidConduitAHW, \\
	Child[5]=SmartTargetEnemyHoloTargeterAHW, \\
	Child[6]=SmartTargetEnemyWthSquadsightAHW, \\
	Child[7]=AddToTargetScore_0)

+Behaviors=(BehaviorName=SmartSuppressEnemySpark, NodeType=Sequence, Child[0]=TargetTemplateNameIs-SparkSoldier, Child[1]=AddToTargetScore_5)

+Behaviors=(BehaviorName=SmartTargetEnemyVIPAHW, NodeType=Sequence, Child[0]=TargetIsEnemyVIP, Child[1]=AddToTargetScore_15)
+Behaviors=(BehaviorName=SmartTargetEnemySuppressorAHW, NodeType=Sequence, Child[0]=TargetIsApplyingEffect-Suppression, Child[1]=AddToTargetScore_15)
+Behaviors=(BehaviorName=SmartTargetEnemyMindControllerAHW, NodeType=Sequence, Child[0]=TargetIsApplyingEffect-MindControl, Child[1]=AddToTargetScore_30)
+Behaviors=(BehaviorName=SmartTargetEnemyMindshielderAHW, NodeType=Sequence, Child[0]=TargetIsApplyingEffect-Solace, Child[1]=AddToTargetScore_15)
+Behaviors=(BehaviorName=SmartTargetEnemyVoidConduitAHW, NodeType=Sequence, Child[0]=TargetIsApplyingEffect-VoidConduit, Child[1]=AddToTargetScore_15)
+Behaviors=(BehaviorName=SmartTargetEnemyGremlinSupportAHW, NodeType=Sequence, Child[0]=TargetIsApplyingEffect-AidProtocol, Child[1]=AddToTargetScore_10)
+Behaviors=(BehaviorName=SmartTargetEnemyHoloTargeterAHW, NodeType=Sequence, Child[0]=TargetIsApplyingEffect-HoloTarget, Child[1]=AddToTargetScore_10)
+Behaviors=(BehaviorName=SmartTargetEnemyWthSquadsightAHW, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Squadsight, Child[1]=AddToTargetScore_10)

; Smarter Mimic Beacon Response - Mimic Beacons take Priority for Standard Shots, but AoE Attacks against Multiple Targets are higher Priority.
+Behaviors=(BehaviorName=SmartMimicBeaconResponseAHW, NodeType=Sequence, Child[0]=IsUnitTypeVisible-MimicBeacon, Child[1]=SmartConsiderAvailableAttacksAHW)
+Behaviors=(BehaviorName=SmartConsiderAvailableAttacksAHW, NodeType=Selector, Child[0]=TryMutonBombardMulti_AHW, Child[1]=TryGrenade, Child[2]=TryCannonadeMassacre_AHW, Child[3]=TryCannonadeMulti_AHW, Child[4]=TryAHWCryonova, Child[5]=TryStandardShotOnMimicBeacon)

; Muton Ballistarius - Really likes launching explosives at people.

+Behaviors=(BehaviorName="AHWMutonRocketeer::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AHW_MutonRocketeer_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AHW_MutonRocketeer_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AHW_MutonRocketeer_RedAbilitySelector)
+Behaviors=(BehaviorName=AHW_MutonRocketeer_RedAbilitySelector, NodeType=Selector, Child[0]=SmartMimicBeaconResponseAHW, Child[1]=AHW_MutonRocketeer_RedFirstAction, Child[2]=AHW_MutonRocketeer_RedLastAction)

+Behaviors=(BehaviorName=AHW_MutonRocketeer_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AHW_MutonRocketeer_RedFirstActionSelector)
+Behaviors=(BehaviorName=AHW_MutonRocketeer_RedFirstActionSelector, NodeType=Selector, \\
 	Child[0]=DoIfFlankedMove, \\
	Child[1]=InitBallistariusMobileBombard_AHW, \\
	Child[2]=InitGSROAHW, \\
	Child[3]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AHW_MutonRocketeer_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AHW_MutonRocketeer_RedLastActionSelector)
+Behaviors=(BehaviorName=AHW_MutonRocketeer_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=InitBallistariusBombard_AHW, \\
	Child[1]=TrySuppressClosest, \\
	Child[2]=InitGSROAHW, \\
	Child[3]=MoveAggressive, \\
	Child[4]=HuntEnemyWithCover)

;Mobile Bombard, like for the Andromedon's Cannonade and Cryokeeper's Cryonova, the Ballistarius moves to find good rocket launching spots.
+Behaviors=(BehaviorName=InitBallistariusMobileBombard_AHW, NodeType=Selector, Child[0]=TryMoveThenAHWBallistariusBombardAny, Child[1]=TryMoveThenAHWBallistariusBombardMulti)
+Behaviors=(BehaviorName=InitBallistariusBombard_AHW, NodeType=Selector, Child[0]=TryMutonBombardMulti_AHW, Child[1]=TryMutonBombardAny_AHW)

+Behaviors=(BehaviorName=TryMoveThenAHWBallistariusBombardAny, NodeType=Selector, \\
	Child[0]=TryMoveForAnyAHWBallistariusBombard, \\
	Child[1]=TryMutonBombardAny_AHW)

+Behaviors=(BehaviorName=TryMoveThenAHWBallistariusBombardMulti, NodeType=Selector, \\
	Child[0]=TryMoveForMultiAHWBallistariusBombard, \\
	Child[1]=TryMutonBombardMulti_AHW)

+Behaviors=(BehaviorName=TryMoveForAnyAHWBallistariusBombard, NodeType=Sequence, \\
	Child[0]=SafeToMove, \\
	Child[1]=IsAbilityReady-RocketLauncher, \\
	Child[2]=FindPotentialAoETargets-AHWBallistariusAnyProfile, \\
	Child[3]=MoveStandardIfFirstAbility-RocketLauncher)

+Behaviors=(BehaviorName=TryMoveForMultiAHWBallistariusBombard, NodeType=Sequence, \\
	Child[0]=SafeToMove, \\
	Child[1]=IsAbilityReady-RocketLauncher, \\
	Child[2]=FindPotentialAoETargets-AHWBallistariusMultiProfile, \\
	Child[3]=MoveStandardIfFirstAbility-RocketLauncher)

+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-RocketLauncher, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindAHWBallistariusBombardDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindAHWBallistariusBombardDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-RocketLauncher, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Standard)

+Behaviors=(BehaviorName=TryMutonBombardAny_AHW, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-RocketLauncher, \\
	Child[1]=MutonBombardAny_AHW, \\
	Child[2]=SelectAbility-RocketLauncher)

+Behaviors=(BehaviorName=TryMutonBombardMulti_AHW, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-RocketLauncher, \\
	Child[1]=MutonBombardMulti_AHW, \\
	Child[2]=SelectAbility-RocketLauncher)

+Behaviors=(BehaviorName=MutonBombardAny_AHW, NodeType=Sequence, Child[0]=FindPotentialAoETargets-AHWBallistariusAnyProfile, Child[1]=SelectAoETarget-AHWBallistariusAnyProfile)
+Behaviors=(BehaviorName=MutonBombardMulti_AHW, NodeType=Sequence, Child[0]=FindPotentialAoETargets-AHWBallistariusMultiProfile, Child[1]=SelectAoETarget-AHWBallistariusMultiProfile)

+Behaviors=(BehaviorName=IsAbilityAvailable-RocketLauncher, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-RocketLauncher, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RocketLauncher, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-RocketLauncher, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-AHWBallistariusMultiProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-AHWBallistariusAnyProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-AHWBallistariusMultiProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-AHWBallistariusAnyProfile, NodeType=Action)

; Muton Decurion - Mostly does normal muton stuff.. But these guys are still pretty dangerous.

+Behaviors=(BehaviorName="AHWMutonElite::CharacterRoot", NodeType=Selector, Child[0]=TryJobTerrorist, Child[1]=GenericGreenMovement, Child[2]=AHW_MutonElite_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AHW_MutonElite_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AHW_MutonElite_RedAbilitySelector)
+Behaviors=(BehaviorName=AHW_MutonElite_RedAbilitySelector, NodeType=Selector, Child[0]=SmartMimicBeaconResponseAHW, Child[1]=AHW_MutonElite_RedFirstAction, Child[2]=AHW_MutonElite_RedLastAction)

+Behaviors=(BehaviorName=AHW_MutonElite_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AHW_MutonElite_RedFirstActionSelector)
+Behaviors=(BehaviorName=AHW_MutonElite_RedFirstActionSelector, NodeType=Selector, \\
 	Child[0]=DoIfFlankedMove, \\
	Child[1]=TryGrenade, \\
	Child[2]=MoveFlanking, \\
	Child[3]=InitGSROAHW, \\
	Child[4]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AHW_MutonElite_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AHW_MutonElite_RedLastActionSelector)
+Behaviors=(BehaviorName=AHW_MutonElite_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=InitGSROAHW, \\
	Child[1]=MoveAggressive, \\
	Child[2]=HuntEnemyWithCover)

; Muton Veles - Shoots flanked targets or Uses Run and Gun and then proceeds to dash flank into shooting.. You know the rest. 

+Behaviors=(BehaviorName="AHWMutonShocktrooper::CharacterRoot", NodeType=Selector, Child[0]=TryJobTerrorist, Child[1]=GenericGreenMovement, Child[2]=AHW_MutonShocktrooper_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AHW_MutonShocktrooper_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AHW_MutonShocktrooper_RedAbilitySelector)
+Behaviors=(BehaviorName=AHW_MutonShocktrooper_RedAbilitySelector, NodeType=Selector, Child[0]=SmartMimicBeaconResponseAHW, Child[1]=AHW_MutonShocktrooper_RedFirstAction, Child[2]=AHW_MutonShocktrooper_RedLastAction)

+Behaviors=(BehaviorName=AHW_MutonShocktrooper_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AHW_MutonShocktrooper_RedFirstActionSelector)
+Behaviors=(BehaviorName=AHW_MutonShocktrooper_RedFirstActionSelector, NodeType=Selector, \\
 	Child[0]=DoIfFlankedMove, \\
	Child[1]=VelesShootFlankedAHW, \\
	Child[2]=InitMutonRunAndGunActivate_AHW, \\
	Child[3]=InitMutonRunAndGun_AHW, \\
	Child[4]=InitGSROAHW, \\
	Child[5]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AHW_MutonShocktrooper_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AHW_MutonShocktrooper_RedLastActionSelector)
+Behaviors=(BehaviorName=AHW_MutonShocktrooper_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryGrenade, \\
	Child[1]=InitGSROAHW, \\
	Child[2]=MoveAggressive, \\
	Child[3]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=InitMutonRunAndGunActivate_AHW, NodeType=Sequence, \\
	Child[0]=SafeToMove, \\
	Child[1]=HasAmmo, \\
	Child[2]=IsAbilityReady-RunAndGun, \\
	Child[3]=SelectAbility-RunAndGun)

+Behaviors=(BehaviorName=InitMutonRunAndGun_AHW, NodeType=Sequence, \\
	Child[0]=WasLastAbility-RunAndGun, \\
	Child[1]=NotLastActionPoint, \\
	Child[2]=MutonRAGFlankingAHW)
	
+Behaviors=(BehaviorName=MutonRAGFlankingAHW, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=ResetDestinationSearch, Child[2]=RestrictToEnemyLoS, Child[3]=UseDashMovement, Child[4]=OverrideIdealRange-5, Child[5]=FindRestrictedDestination-MWP_Flanking, Child[6]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=OverrideIdealRange-5, NodeType=Action, Param[0]=5)

+Behaviors=(BehaviorName=IsAbilityReady-RunAndGun, NodeType=Condition)
+Behaviors=(BehaviorName=WasLastAbility-RunAndGun, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-RunAndGun, NodeType=Action)

; Cryokeeper - Does AOE Ice stuff. Very fun in cramped locations.

+Behaviors=(BehaviorName="AHWCryokeeper::CharacterRoot", NodeType=Selector, Child[0]=TryJobTerrorist, Child[1]=GenericGreenMovement, Child[2]=AHW_Cryokeeper_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AHW_Cryokeeper_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AHW_Cryokeeper_RedAbilitySelector)
+Behaviors=(BehaviorName=AHW_Cryokeeper_RedAbilitySelector, NodeType=Selector, Child[0]=SmartMimicBeaconResponseAHW, Child[1]=AHW_Cryokeeper_RedFirstAction, Child[2]=AHW_Cryokeeper_RedLastAction)

+Behaviors=(BehaviorName=AHW_Cryokeeper_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AHW_Cryokeeper_RedFirstActionSelector)
+Behaviors=(BehaviorName=AHW_Cryokeeper_RedFirstActionSelector, NodeType=Selector, \\
	Child[0]=TryOpenForAHWCryonova, \\
	Child[1]=TryAHWCryonova, \\
	Child[2]=TryMoveThenAHWCryonova, \\
	Child[3]=TryAnimaConsumeOnEnemy, \\
	Child[4]=TryAnimaConsumeOnAlly, \\
	Child[5]=TryCloseNoAHWCryonova, \\
	Child[6]=MoveNoCover, \\
	Child[7]=ShootIfAvailable, \\
	Child[8]=HuntEnemy)

+Behaviors=(BehaviorName=AHW_Cryokeeper_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AHW_Cryokeeper_RedLastActionSelector)
+Behaviors=(BehaviorName=AHW_Cryokeeper_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=TryOpenForAHWCryonova, \\
	Child[1]=TryAHWCryonova, \\
	Child[2]=TryAnimaConsumeOnEnemy, \\
	Child[3]=TryAnimaConsumeOnAlly, \\
	Child[4]=TryCloseNoAHWCryonova, \\
	Child[5]=InitGSROAHW, \\
	Child[6]=MoveNoCover, \\
	Child[7]=HuntEnemy)

+Behaviors=(BehaviorName=TryAHWCryonova, NodeType=Sequence, \\
	Child[0]=IsAbilityReady-AHWAbility_FrostBlast, \\
	Child[1]=FindPotentialAoETargets-AHWCryonovaProfile, \\
	Child[2]=SelectAoETarget-AHWCryonovaProfile, \\
	Child[3]=SelectAbility-AHWAbility_FrostBlast)

+Behaviors=(BehaviorName=TryOpenForAHWCryonova, NodeType=Sequence, \\
	Child[0]=IsAbilityReady-AHWAbility_FrostBlast, \\
	Child[1]=FindPotentialAoETargets-AHWCryonovaProfile, \\
	Child[2]=SelectAoETarget-AHWCryonovaProfile, \\
	Child[3]=TryGatekeeperOpen)

+Behaviors=(BehaviorName=TryCloseNoAHWCryonova, NodeType=Sequence, \\
	Child[0]=AHWCryonovaNotReady, \\
	Child[1]=TryGatekeeperClose)

+Behaviors=(BehaviorName=TryMoveThenAHWCryonova, NodeType=Selector, \\
	Child[0]=TryMoveForAHWCryonova, \\
	Child[1]=TryAHWCryonova)

+Behaviors=(BehaviorName=TryMoveForAHWCryonova, NodeType=Sequence, \\
	Child[0]=SafeToMove, \\
	Child[1]=IsAbilityReady-AHWAbility_FrostBlast, \\
	Child[2]=FindPotentialAoETargets-AHWCryonovaProfile, \\
	Child[3]=MoveStandardIfFirstAbility-AHWAbility_FrostBlast)

+Behaviors=(BehaviorName=IsAbilityReady-AHWAbility_FrostBlast, NodeType=Condition, Param[0]="AA_ValueCheckFailed", Param[1]="AA_GatekeeperClosed"))

+Behaviors=(BehaviorName=AHWCryonovaNotReady, NodeType=Inverter, Child[0]=IsAbilityReady-AHWAbility_FrostBlast)

+Behaviors=(BehaviorName=FindPotentialAoETargets-AHWCryonovaProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-AHWCryonovaProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAbility-AHWAbility_FrostBlast, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-AHWAbility_FrostBlast, NodeType=Action)

+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-AHWAbility_FrostBlast, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindAHWCryonovaDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindAHWCryonovaDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-AHWAbility_FrostBlast, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Fanatic)

; Andro Dreadnaught - Completed
+Behaviors=(BehaviorName="AHWAndromedonDreadnaught::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AHW_AndroDreadnaught_RedAlert, Child[3]=GenericAlertHandler)
; Dreadnaught Robot
+Behaviors=(BehaviorName="AHWDreadnaughtRobot::CharacterRoot", NodeType=Selector, Child[0]=TryJobExecutioner, Child[1]=GenericGreenMovement, Child[2]=AHW_AndroDreadnaught_RedAlert, Child[3]=GenericAlertHandler)
; Shared Dreadnaught Behavior
+Behaviors=(BehaviorName=AHW_AndroDreadnaught_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AHW_AndroDreadnaught_RedAbilitySelector)
+Behaviors=(BehaviorName=AHW_AndroDreadnaught_RedAbilitySelector, NodeType=Selector, Child[0]=SmartMimicBeaconResponseAHW, Child[1]=AHW_AndroDreadnaught_RedFirstAction, Child[2]=AHW_AndroDreadnaught_RedLastAction)

+Behaviors=(BehaviorName=AHW_AndroDreadnaught_RedFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=AHW_AndroDreadnaught_RedFirstActionSelector)
+Behaviors=(BehaviorName=AHW_AndroDreadnaught_RedFirstActionSelector, NodeType=Selector, \\
 	Child[0]=InitMobileCannonade_AHW, \\
	Child[1]=TryMoveThenAcidBlob, \\
	Child[2]=DoIfFlankedMove,  \\
	Child[3]=InitGSROAHW, \\
	Child[4]=HuntEnemyWithCover)

+Behaviors=(BehaviorName=AHW_AndroDreadnaught_RedLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=AHW_AndroDreadnaught_RedLastActionSelector)
+Behaviors=(BehaviorName=AHW_AndroDreadnaught_RedLastActionSelector, NodeType=Selector, \\
	Child[0]=InitCannonade_AHW, \\
	Child[1]=TryAcidBlob, \\
	Child[2]=InitGSROAHW, \\
	Child[3]=MoveAggressive, \\
	Child[4]=HuntEnemyWithCover)

; Cannonade Behavior

+Behaviors=(BehaviorName=InitMobileCannonade_AHW, NodeType=Selector, Child[0]=TryMoveThenMassacreAHWCannonade, Child[1]=TryMoveThenMultiAHWCannonade, Child[2]=TryMoveThenAnyAHWCannonade)
+Behaviors=(BehaviorName=InitCannonade_AHW, NodeType=Selector, Child[0]=TryCannonadeMassacre_AHW, Child[1]=TryCannonadeMulti_AHW, Child[2]=TryCannonadeAny_AHW)

+Behaviors=(BehaviorName=TryCannonadeAny_AHW, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-AHWAbility_AndromedonCannonade, \\
	Child[1]=CannonadeAny_AHW, \\
	Child[2]=SelectAbility-AHWAbility_AndromedonCannonade)

+Behaviors=(BehaviorName=TryCannonadeMulti_AHW, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-AHWAbility_AndromedonCannonade, \\
	Child[1]=CannonadeMulti_AHW, \\
	Child[2]=SelectAbility-AHWAbility_AndromedonCannonade)

+Behaviors=(BehaviorName=TryCannonadeMassacre_AHW, NodeType=Sequence, \\
	Child[0]=IsAbilityAvailable-AHWAbility_AndromedonCannonade, \\
	Child[1]=CannonadeMassacre_AHW, \\
	Child[2]=SelectAbility-AHWAbility_AndromedonCannonade)

+Behaviors=(BehaviorName=CannonadeAny_AHW, NodeType=Sequence, Child[0]=FindPotentialAoETargets-AHWCannonadeProfile, Child[1]=SelectAoETarget-AHWCannonadeProfile)
+Behaviors=(BehaviorName=CannonadeMulti_AHW, NodeType=Sequence, Child[0]=FindPotentialAoETargets-AHWCannonadeMultiProfile, Child[1]=SelectAoETarget-AHWCannonadeMultiProfile)
+Behaviors=(BehaviorName=CannonadeMassacre_AHW, NodeType=Sequence, Child[0]=FindPotentialAoETargets-AHWCannonadeMassacreProfile, Child[1]=SelectAoETarget-AHWCannonadeMassacreProfile)

+Behaviors=(BehaviorName=IsAbilityAvailable-AHWAbility_AndromedonCannonade, NodeType=Condition)
+Behaviors=(BehaviorName=IsAbilityReady-AHWAbility_AndromedonCannonade, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AHWAbility_AndromedonCannonade, NodeType=Action)
+Behaviors=(BehaviorName=RestrictToAbilityRange-AHWAbility_AndromedonCannonade, NodeType=Action)

+Behaviors=(BehaviorName=FindPotentialAoETargets-AHWCannonadeProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-AHWCannonadeMultiProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-AHWCannonadeMassacreProfile, NodeType=Action)

+Behaviors=(BehaviorName=SelectAoETarget-AHWCannonadeProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-AHWCannonadeMultiProfile, NodeType=Action)
+Behaviors=(BehaviorName=SelectAoETarget-AHWCannonadeMassacreProfile, NodeType=Action)

+Behaviors=(BehaviorName=TryMoveThenAnyAHWCannonade, NodeType=Selector, \\
	Child[0]=TryMoveForAnyAHWCannonade, \\
	Child[1]=TryCannonadeAny_AHW)

+Behaviors=(BehaviorName=TryMoveThenMultiAHWCannonade, NodeType=Selector, \\
	Child[0]=TryMoveForMultiAHWCannonade, \\
	Child[1]=TryCannonadeMulti_AHW)

+Behaviors=(BehaviorName=TryMoveThenMassacreAHWCannonade, NodeType=Selector, \\
	Child[0]=TryMoveForMassacreAHWCannonade, \\
	Child[1]=TryCannonadeMassacre_AHW)

+Behaviors=(BehaviorName=TryMoveForAnyAHWCannonade, NodeType=Sequence, \\
	Child[0]=SafeToMove, \\
	Child[1]=IsAbilityReady-AHWAbility_AndromedonCannonade, \\
	Child[2]=FindPotentialAoETargets-AHWCannonadeProfile, \\
	Child[3]=MoveStandardIfFirstAbility-AHWAbility_AndromedonCannonade)

+Behaviors=(BehaviorName=TryMoveForMultiAHWCannonade, NodeType=Sequence, \\
	Child[0]=SafeToMove, \\
	Child[1]=IsAbilityReady-AHWAbility_AndromedonCannonade, \\
	Child[2]=FindPotentialAoETargets-AHWCannonadeMultiProfile, \\
	Child[3]=MoveStandardIfFirstAbility-AHWAbility_AndromedonCannonade)

+Behaviors=(BehaviorName=TryMoveForMassacreAHWCannonade, NodeType=Sequence, \\
	Child[0]=SafeToMove, \\
	Child[1]=IsAbilityReady-AHWAbility_AndromedonCannonade, \\
	Child[2]=FindPotentialAoETargets-AHWCannonadeMassacreProfile, \\
	Child[3]=MoveStandardIfFirstAbility-AHWAbility_AndromedonCannonade)

+Behaviors=(BehaviorName=MoveStandardIfFirstAbility-AHWAbility_AndromedonCannonade, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=NotLastActionPoint, Child[2]=FindAHWCannonadeDestination, Child[3]=SelectAbility-StandardMove)
+Behaviors=(BehaviorName=FindAHWCannonadeDestination, NodeType=Sequence, Child[0]=ResetDestinationSearch, Child[1]=RestrictToAbilityRange-AHWAbility_AndromedonCannonade, Child[2]=RestrictToEnemyLoS, Child[3]=FindRestrictedDestination-MWP_Standard)

+Behaviors=(BehaviorName=PunishExposedXCOMRats, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardShot, Child[1]=SelectFlankedEnemyTarget, Child[2]=SelectAbility-StandardShot)

; InitAdvancedScamper - Advanced Scampering Behavior - Advanced Aliens will open fire instead of running if they're caught in an overwatch trap!
; PunishExposedXCOMRats - When scampering, the Advanced Aliens will always gun down flanked targets like the degenerates they are.

+Behaviors=(BehaviorName=HasThreeOrMoreOverwatchersAHW, NodeType=StatCondition, Param[0]=OverwatcherCount, Param[1]=">", Param[2]="2")

+Behaviors=(BehaviorName=InitAdvancedScamperAHW, NodeType=Sequence, \\
		Child[0]=HasThreeOrMoreOverwatchersAHW, \\
		Child[1]=InitAdvancedAlienSpecialAttacks_AHW)

+Behaviors=(BehaviorName=InitAdvancedAlienSpecialAttacks_AHW, NodeType=Selector, \\
		Child[0]=InitCannonade_AHW, \\
		Child[1]=InitBallistariusBombard_AHW, \\
		Child[2]=TryAHWCryonova, \\
		Child[3]=InitGSROAHW)

+Behaviors=(BehaviorName=AHWAdvancedScamper_NoCover, NodeType=Selector, \\
		Child[0]=PunishExposedXCOMRats, \\
		Child[1]=MoveNoCover, \\
		Child[2]=InitAdvancedScamperAHW, \\
		Child[3]=MoveNoCoverUnsafe, \\
		Child[4]=SkipMove)

+Behaviors=(BehaviorName=AHWAdvancedScamper_Generic, NodeType=Selector, \\
		Child[0]=PunishExposedXCOMRats, \\
		Child[1]=MoveDefensiveWithLoS, \\
		Child[2]=InitAdvancedScamperAHW, \\
		Child[3]=MoveStandardHeightUnsafe, \\
		Child[4]=SkipMove)

+Behaviors=(BehaviorName=AHWAdvancedScamper_Veles, NodeType=Selector, \\
		Child[0]=PunishExposedXCOMRats, \\
		Child[1]=MoveFlanking, \\
		Child[2]=InitAdvancedScamperAHW, \\
		Child[3]=MoveStandardHeightUnsafe, \\
		Child[4]=SkipMove)

