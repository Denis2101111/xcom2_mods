[XComGame.XGAIBehavior]
+AoEProfiles=(Profile=MedicSmokeGrenadeProfile, Ability=ThrowGrenade, bTargetEnemy=0, bTargetAllies=1, bTargetSelf=1, bUsePrecomputePath=1, MinTargets=2)


[XComGame.X2AIBTBehaviorTree]
; ---------------- Advent Medic Core AI ----------------
+Behaviors=(BehaviorName="AdventMedic::CharacterRoot", NodeType=Selector, Child[0]=TryJob, Child[1]=GenericGreenMovement, Child[2]=AdvMedic_RedAlert, Child[3]=GenericAlertHandler)
+Behaviors=(BehaviorName=AdvMedic_RedAlert, NodeType=Sequence, Child[0]=IsRedAlert, Child[1]=AdvMedic_RedAbilitySelector)
+Behaviors=(BehaviorName=AdvMedic_RedAbilitySelector, NodeType=Selector, Child[0]=MimicBeaconBehavior, Child[1]=MedicFirstAction, Child[2]=MedicLastAction)
+Behaviors=(BehaviorName=MedicFirstAction, NodeType=Sequence, Child[0]=NotLastActionPoint, Child[1]=MedicFirstActionSelector)
+Behaviors=(BehaviorName=MedicLastAction, NodeType=Sequence, Child[0]=IsLastActionPoint, Child[1]=MedicLastActionSelector)
+Behaviors=(BehaviorName=MedicFirstActionSelector, NodeType=Selector, Child[0]=TryAdventRestoreOnTarget, Child[1]=TryAdventMedikitOnTarget, Child[2]=MedicMoveTowardTroubled, Child[3]=TryMedicMoveDefensive, Child[4]=TryMedicSmokeGrenade, Child[5]=ShootIfIdeal, Child[6]=HuntEnemyWithCover)
+Behaviors=(BehaviorName=MedicLastActionSelector, NodeType=Selector, Child[0]=TryAdventRestoreOnTarget, Child[1]=TryAdventMedikitOnTarget, Child[2]=TryMedicSmokeGrenade, Child[3]=DoIfFlankedMove, Child[4]=ShootIfIdeal, Child[5]=MedicMoveTowardTroubled, Child[6]=TryShootOrReloadOrOverwatch, Child[7]=TryMedicMoveDefensive, Child[8]=HuntEnemyWithCover)


; ---------------- Do shorthand for our new abilities ----------------
+EquivalentAbilities=(KeyName=AdventMedikit, EquivalentAbilityName[0]=MedikitHeal, EquivalentAbilityName[1]=NanoMedikitHeal)
+EquivalentAbilities=(KeyName=AdventRestore, EquivalentAbilityName[0]=AdventMedicRestore)


; ---------------- Custom AI behavior to find destination next to wounded / incapacitated ally  ----------------
+CustomNodes=(NodeTypeString="WOTCAdventMedicAction", ExtendsFromType="Action", ClassName="WOTCAdventMedic.WOTCAdventMedic_X2AIBTActions")
+Behaviors=(BehaviorName=SetDestinationNextToTroubledTeammate, NodeType=WOTCAdventMedicAction)


; ---------------- AdventMedic support behaviours ----------------
+Behaviors=(BehaviorName=SelectAoETarget-MedicSmokeGrenadeProfile, NodeType=Action)
+Behaviors=(BehaviorName=FindPotentialAoETargets-MedicSmokeGrenadeProfile, NodeType=Action)
+Behaviors=(BehaviorName=TryMedicMoveDefensive, NodeType=Sequence, Child[0]=AnyAlliesVisible, Child[1]=MoveDefensive)

+Behaviors=(BehaviorName=IsAbilityAvailable-AdventMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AdventMedikit, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-AdventMedikit, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AdventMedikit, NodeType=Action)
+Behaviors=(BehaviorName=TargetIsInjured, NodeType=TargetStatCondition, Param[0]=eStat_HP, Param[1]="<=", Param[2]="60%")
+Behaviors=(BehaviorName=TargetIsUnableToMove, NodeType=TargetStatCondition, Param[0]=ActionPoints, Param[1]="==", Param[2]="0")

+Behaviors=(BehaviorName=IsAbilityAvailable-AdventRestore, NodeType=Condition)
+Behaviors=(BehaviorName=SelectAbility-AdventRestore, NodeType=Action)
+Behaviors=(BehaviorName=HasValidTarget-AdventRestore, NodeType=Condition)
+Behaviors=(BehaviorName=SetTargetStack-AdventRestore, NodeType=Action)


; ---------------- Advent Medic movement behaviours -- find a spot near wounded / incapacitated ally ----------------
+Behaviors=(BehaviorName=MedicMoveTowardTroubled, NodeType=Selector, Child[0]=MedicMoveToTroubled)
+Behaviors=(BehaviorName=MedicMoveToTroubled, NodeType=Sequence, Child[0]=IsAbilityAvailable-StandardMove, Child[1]=SetDestinationNextToTroubledTeammate, Child[2]=SelectAbility-StandardMove)


; ---------------- AdventMedikit targeting behaviours -- target wounded ally or the medic ---------------- 
+Behaviors=(BehaviorName=TryAdventMedikitOnTarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-AdventMedikit, Child[1]=SelectTargetForAdventMedikit, Child[2]=SelectAbility-AdventMedikit)
+Behaviors=(BehaviorName=SelectTargetForAdventMedikit, NodeType=Sequence, Child[0]=SetTargetStack-AdventMedikit, Child[1]=SelectBestTargetForAdventMedikit, Child[2]=HasValidTarget-AdventMedikit)
+Behaviors=(BehaviorName=SelectBestTargetForAdventMedikit, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsAdventMedikit)
+Behaviors=(BehaviorName=EvaluateTargetsAdventMedikit, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetIsInjured, Child[2]=TargetScoreNonMedic, Child[3]=TargetScoreHealth, Child[4]=UpdateBestTarget)


; ---------------- AdventRestore targeting behaviours -- target incapacitated ally ---------------- 
+Behaviors=(BehaviorName=TryAdventRestoreOnTarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-AdventRestore, Child[1]=SelectTargetForAdventRestore, Child[2]=SelectAbility-AdventRestore)
+Behaviors=(BehaviorName=SelectTargetForAdventRestore, NodeType=Sequence, Child[0]=SetTargetStack-AdventRestore, Child[1]=SelectBestTargetForAdventRestore, Child[2]=HasValidTarget-AdventRestore)
+Behaviors=(BehaviorName=SelectBestTargetForAdventRestore, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsAdventRestore)
+Behaviors=(BehaviorName=EvaluateTargetsAdventRestore, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScoreHealth_HighFirst, Child[2]=UpdateBestTarget)


; ---------------- We want the medic to prioritise others over himself when healing  ---------------- 
+Behaviors=(BehaviorName=TargetScoreNonMedic, NodeType=Selector, Child[0]=ScoreIfNotMedic, Child[1]=AddToTargetScore_0)
+Behaviors=(BehaviorName=ScoreIfNotMedic, NodeType=Sequence, Child[0]=TargetIsNotMedic, Child[1]=AddToTargetScore_15)
+Behaviors=(BehaviorName=TargetIsNotMedic, NodeType=Inverter, Child[0]=TargetIsAdventMedic)
+Behaviors=(BehaviorName=TargetIsAdventMedic, NodeType=Selector, Child[0]=TargetTemplateNameIs-AdvMedicM1, Child[1]=TargetTemplateNameIs-AdvMedicM2, Child[2]=TargetTemplateNameIs-AdvMedicM3)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvMedicM1, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvMedicM2, NodeType=Condition)
+Behaviors=(BehaviorName=TargetTemplateNameIs-AdvMedicM3, NodeType=Condition)


; ---------------- Smoke grenade behaviours -- turns out they do work and I'm just a muppet - thanks to ADVENT Avenger for helping with this ----------------
+Behaviors=(BehaviorName=TryMedicSmokeGrenade, NodeType=Selector, Child[0]=TryMedicSmokeGrenadeOnGroup, Child[1]=TryMedicSmokeGrenadeOnTarget)
+Behaviors=(BehaviorName=TryMedicSmokeGrenadeOnGroup, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=FindPotentialAoETargets-MedicSmokeGrenadeProfile, Child[2]=SelectAoETarget-MedicSmokeGrenadeProfile, Child[3]=SelectAbility-ThrowGrenade)

+Behaviors=(BehaviorName=TryMedicSmokeGrenadeOnTarget, NodeType=Sequence, Child[0]=IsAbilityAvailable-ThrowGrenade, Child[1]=SelectTargetForMedicSmokeGrenade, Child[2]=FindPotentialAoETargets-GrenadePanickedProfile, Child[3]=SelectAoETarget-GrenadePanickedProfile, Child[4]=SelectAbility-ThrowGrenade)
+Behaviors=(BehaviorName=SelectTargetForMedicSmokeGrenade, NodeType=Sequence, Child[0]=SetPotentialAllyTargetStack, Child[1]=SelectBestTargetForMedicSmokeGrenade, Child[2]=HasValidTarget-Potential)
+Behaviors=(BehaviorName=SelectBestTargetForMedicSmokeGrenade, NodeType=RepeatUntilFail, Child[0]=EvaluateTargetsMedicSmokeGrenade)
+Behaviors=(BehaviorName=EvaluateTargetsMedicSmokeGrenade, NodeType=Sequence, Child[0]=SetNextTarget, Child[1]=TargetScorePossibleDanger, Child[2]=UpdateBestTarget)


; ---------------- Aside from the group smoke cover, we want to target allies who are suppressed, or close to dying and will not move  ---------------- 
+Behaviors=(BehaviorName=TargetScorePossibleDanger, NodeType=Selector, Child[0]=ScoreIfSuppressed, Child[1]=ScoreIfKillable, Child[2]=AddToTargetScore_0)
+Behaviors=(BehaviorName=ScoreIfSuppressed, NodeType=Sequence, Child[0]=TargetAffectedByEffect-Suppression, Child[1]=AddToTargetScore_20)
+Behaviors=(BehaviorName=ScoreIfKillable, NodeType=Sequence, Child[0]=TargetIsUnableToMove, Child[1]=TargetIsVulnerable, Child[2]=AddToTargetScore_10)
